(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function t(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerPolicy&&(r.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?r.credentials="include":i.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(i){if(i.ep)return;i.ep=!0;const r=t(i);fetch(i.href,r)}})();/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const W8="151",S1={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},y1={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},u3=0,Q8=1,h3=2,I5=1,d3=2,t2=3,Z9=0,p9=1,j9=2,n1=0,k1=1,e7=2,t7=3,n7=4,f3=5,B1=100,p3=101,m3=102,i7=103,r7=104,g3=200,_3=201,x3=202,v3=203,U5=204,N5=205,M3=206,S3=207,y3=208,b3=209,w3=210,E3=0,T3=1,A3=2,N8=3,C3=4,L3=5,P3=6,R3=7,q8=0,D3=1,I3=2,Y9=0,U3=1,N3=2,O3=3,F3=4,z3=5,O5=300,W1=301,q1=302,O8=303,F8=304,W2=306,V2=1e3,I9=1001,z8=1002,d9=1003,s7=1004,Q2=1005,T9=1006,B3=1007,a2=1008,m1=1009,G3=1010,k3=1011,F5=1012,V3=1013,d1=1014,f1=1015,o2=1016,H3=1017,W3=1018,V1=1020,q3=1021,U9=1023,X3=1024,j3=1025,p1=1026,X1=1027,Y3=1028,Z3=1029,K3=1030,$3=1031,J3=1033,e8=33776,t8=33777,n8=33778,i8=33779,a7=35840,o7=35841,l7=35842,c7=35843,Q3=36196,u7=37492,h7=37496,d7=37808,f7=37809,p7=37810,m7=37811,g7=37812,_7=37813,x7=37814,v7=37815,M7=37816,S7=37817,y7=37818,b7=37819,w7=37820,E7=37821,r8=36492,e6=36283,T7=36284,A7=36285,C7=36286,g1=3e3,k0=3001,t6=3200,n6=3201,z5=0,i6=1,F9="srgb",l2="srgb-linear",B5="display-p3",s8=7680,r6=519,L7=35044,P7="300 es",B8=1035;class M1{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const r=i.indexOf(t);r!==-1&&i.splice(r,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let r=0,o=i.length;r<o;r++)i[r].call(this,e);e.target=null}}}const o9=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],a8=Math.PI/180,G8=180/Math.PI;function u2(){const a=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(o9[a&255]+o9[a>>8&255]+o9[a>>16&255]+o9[a>>24&255]+"-"+o9[e&255]+o9[e>>8&255]+"-"+o9[e>>16&15|64]+o9[e>>24&255]+"-"+o9[t&63|128]+o9[t>>8&255]+"-"+o9[t>>16&255]+o9[t>>24&255]+o9[n&255]+o9[n>>8&255]+o9[n>>16&255]+o9[n>>24&255]).toLowerCase()}function f9(a,e,t){return Math.max(e,Math.min(t,a))}function s6(a,e){return(a%e+e)%e}function o8(a,e,t){return(1-t)*a+t*e}function R7(a){return(a&a-1)===0&&a!==0}function a6(a){return Math.pow(2,Math.floor(Math.log(a)/Math.LN2))}function g2(a,e){switch(e.constructor){case Float32Array:return a;case Uint16Array:return a/65535;case Uint8Array:return a/255;case Int16Array:return Math.max(a/32767,-1);case Int8Array:return Math.max(a/127,-1);default:throw new Error("Invalid component type.")}}function _9(a,e){switch(e.constructor){case Float32Array:return a;case Uint16Array:return Math.round(a*65535);case Uint8Array:return Math.round(a*255);case Int16Array:return Math.round(a*32767);case Int8Array:return Math.round(a*127);default:throw new Error("Invalid component type.")}}class E0{constructor(e=0,t=0){E0.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(f9(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),r=this.x-e.x,o=this.y-e.y;return this.x=r*n-o*i+e.x,this.y=r*i+o*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class U0{constructor(){U0.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(e,t,n,i,r,o,s,c,l){const u=this.elements;return u[0]=e,u[1]=i,u[2]=s,u[3]=t,u[4]=r,u[5]=c,u[6]=n,u[7]=o,u[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,o=n[0],s=n[3],c=n[6],l=n[1],u=n[4],d=n[7],f=n[2],m=n[5],g=n[8],_=i[0],p=i[3],h=i[6],E=i[1],w=i[4],v=i[7],y=i[2],A=i[5],R=i[8];return r[0]=o*_+s*E+c*y,r[3]=o*p+s*w+c*A,r[6]=o*h+s*v+c*R,r[1]=l*_+u*E+d*y,r[4]=l*p+u*w+d*A,r[7]=l*h+u*v+d*R,r[2]=f*_+m*E+g*y,r[5]=f*p+m*w+g*A,r[8]=f*h+m*v+g*R,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],o=e[4],s=e[5],c=e[6],l=e[7],u=e[8];return t*o*u-t*s*l-n*r*u+n*s*c+i*r*l-i*o*c}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],o=e[4],s=e[5],c=e[6],l=e[7],u=e[8],d=u*o-s*l,f=s*c-u*r,m=l*r-o*c,g=t*d+n*f+i*m;if(g===0)return this.set(0,0,0,0,0,0,0,0,0);const _=1/g;return e[0]=d*_,e[1]=(i*l-u*n)*_,e[2]=(s*n-i*o)*_,e[3]=f*_,e[4]=(u*t-i*c)*_,e[5]=(i*r-s*t)*_,e[6]=m*_,e[7]=(n*c-l*t)*_,e[8]=(o*t-n*r)*_,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,r,o,s){const c=Math.cos(r),l=Math.sin(r);return this.set(n*c,n*l,-n*(c*o+l*s)+o+e,-i*l,i*c,-i*(-l*o+c*s)+s+t,0,0,1),this}scale(e,t){return this.premultiply(l8.makeScale(e,t)),this}rotate(e){return this.premultiply(l8.makeRotation(-e)),this}translate(e,t){return this.premultiply(l8.makeTranslation(e,t)),this}makeTranslation(e,t){return this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const l8=new U0;function G5(a){for(let e=a.length-1;e>=0;--e)if(a[e]>=65535)return!0;return!1}function c2(a){return document.createElementNS("http://www.w3.org/1999/xhtml",a)}function H1(a){return a<.04045?a*.0773993808:Math.pow(a*.9478672986+.0521327014,2.4)}function c8(a){return a<.0031308?a*12.92:1.055*Math.pow(a,.41666)-.055}const o6=new U0().fromArray([.8224621,.0331941,.0170827,.177538,.9668058,.0723974,-1e-7,1e-7,.9105199]),l6=new U0().fromArray([1.2249401,-.0420569,-.0196376,-.2249404,1.0420571,-.0786361,1e-7,0,1.0982735]);function c6(a){return a.convertSRGBToLinear().applyMatrix3(l6)}function u6(a){return a.applyMatrix3(o6).convertLinearToSRGB()}const h6={[l2]:a=>a,[F9]:a=>a.convertSRGBToLinear(),[B5]:c6},d6={[l2]:a=>a,[F9]:a=>a.convertLinearToSRGB(),[B5]:u6},x9={enabled:!1,get legacyMode(){return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),!this.enabled},set legacyMode(a){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),this.enabled=!a},get workingColorSpace(){return l2},set workingColorSpace(a){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(a,e,t){if(this.enabled===!1||e===t||!e||!t)return a;const n=h6[e],i=d6[t];if(n===void 0||i===void 0)throw new Error(`Unsupported color space conversion, "${e}" to "${t}".`);return i(n(a))},fromWorkingColorSpace:function(a,e){return this.convert(a,this.workingColorSpace,e)},toWorkingColorSpace:function(a,e){return this.convert(a,e,this.workingColorSpace)}};let b1;class k5{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{b1===void 0&&(b1=c2("canvas")),b1.width=e.width,b1.height=e.height;const n=b1.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=b1}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=c2("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),r=i.data;for(let o=0;o<r.length;o++)r[o]=H1(r[o]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(H1(t[n]/255)*255):t[n]=H1(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class V5{constructor(e=null){this.isSource=!0,this.uuid=u2(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let r;if(Array.isArray(i)){r=[];for(let o=0,s=i.length;o<s;o++)i[o].isDataTexture?r.push(u8(i[o].image)):r.push(u8(i[o]))}else r=u8(i);n.url=r}return t||(e.images[this.uuid]=n),n}}function u8(a){return typeof HTMLImageElement<"u"&&a instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&a instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&a instanceof ImageBitmap?k5.getDataURL(a):a.data?{data:Array.from(a.data),width:a.width,height:a.height,type:a.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let f6=0;class m9 extends M1{constructor(e=m9.DEFAULT_IMAGE,t=m9.DEFAULT_MAPPING,n=I9,i=I9,r=T9,o=a2,s=U9,c=m1,l=m9.DEFAULT_ANISOTROPY,u=g1){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:f6++}),this.uuid=u2(),this.name="",this.source=new V5(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=o,this.anisotropy=l,this.format=s,this.internalFormat=null,this.type=c,this.offset=new E0(0,0),this.repeat=new E0(1,1),this.center=new E0(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new U0,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==O5)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case V2:e.x=e.x-Math.floor(e.x);break;case I9:e.x=e.x<0?0:1;break;case z8:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case V2:e.y=e.y-Math.floor(e.y);break;case I9:e.y=e.y<0?0:1;break;case z8:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}}m9.DEFAULT_IMAGE=null;m9.DEFAULT_MAPPING=O5;m9.DEFAULT_ANISOTROPY=1;class H0{constructor(e=0,t=0,n=0,i=1){H0.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=this.w,o=e.elements;return this.x=o[0]*t+o[4]*n+o[8]*i+o[12]*r,this.y=o[1]*t+o[5]*n+o[9]*i+o[13]*r,this.z=o[2]*t+o[6]*n+o[10]*i+o[14]*r,this.w=o[3]*t+o[7]*n+o[11]*i+o[15]*r,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,r;const c=e.elements,l=c[0],u=c[4],d=c[8],f=c[1],m=c[5],g=c[9],_=c[2],p=c[6],h=c[10];if(Math.abs(u-f)<.01&&Math.abs(d-_)<.01&&Math.abs(g-p)<.01){if(Math.abs(u+f)<.1&&Math.abs(d+_)<.1&&Math.abs(g+p)<.1&&Math.abs(l+m+h-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const w=(l+1)/2,v=(m+1)/2,y=(h+1)/2,A=(u+f)/4,R=(d+_)/4,N=(g+p)/4;return w>v&&w>y?w<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(w),i=A/n,r=R/n):v>y?v<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(v),n=A/i,r=N/i):y<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(y),n=R/r,i=N/r),this.set(n,i,r,t),this}let E=Math.sqrt((p-g)*(p-g)+(d-_)*(d-_)+(f-u)*(f-u));return Math.abs(E)<.001&&(E=1),this.x=(p-g)/E,this.y=(d-_)/E,this.z=(f-u)/E,this.w=Math.acos((l+m+h-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class _1 extends M1{constructor(e=1,t=1,n={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new H0(0,0,e,t),this.scissorTest=!1,this.viewport=new H0(0,0,e,t);const i={width:e,height:t,depth:1};this.texture=new m9(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:T9,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new V5(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class H5 extends m9{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=d9,this.minFilter=d9,this.wrapR=I9,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class p6 extends m9{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=d9,this.minFilter=d9,this.wrapR=I9,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class x1{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,r,o,s){let c=n[i+0],l=n[i+1],u=n[i+2],d=n[i+3];const f=r[o+0],m=r[o+1],g=r[o+2],_=r[o+3];if(s===0){e[t+0]=c,e[t+1]=l,e[t+2]=u,e[t+3]=d;return}if(s===1){e[t+0]=f,e[t+1]=m,e[t+2]=g,e[t+3]=_;return}if(d!==_||c!==f||l!==m||u!==g){let p=1-s;const h=c*f+l*m+u*g+d*_,E=h>=0?1:-1,w=1-h*h;if(w>Number.EPSILON){const y=Math.sqrt(w),A=Math.atan2(y,h*E);p=Math.sin(p*A)/y,s=Math.sin(s*A)/y}const v=s*E;if(c=c*p+f*v,l=l*p+m*v,u=u*p+g*v,d=d*p+_*v,p===1-s){const y=1/Math.sqrt(c*c+l*l+u*u+d*d);c*=y,l*=y,u*=y,d*=y}}e[t]=c,e[t+1]=l,e[t+2]=u,e[t+3]=d}static multiplyQuaternionsFlat(e,t,n,i,r,o){const s=n[i],c=n[i+1],l=n[i+2],u=n[i+3],d=r[o],f=r[o+1],m=r[o+2],g=r[o+3];return e[t]=s*g+u*d+c*m-l*f,e[t+1]=c*g+u*f+l*d-s*m,e[t+2]=l*g+u*m+s*f-c*d,e[t+3]=u*g-s*d-c*f-l*m,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const n=e._x,i=e._y,r=e._z,o=e._order,s=Math.cos,c=Math.sin,l=s(n/2),u=s(i/2),d=s(r/2),f=c(n/2),m=c(i/2),g=c(r/2);switch(o){case"XYZ":this._x=f*u*d+l*m*g,this._y=l*m*d-f*u*g,this._z=l*u*g+f*m*d,this._w=l*u*d-f*m*g;break;case"YXZ":this._x=f*u*d+l*m*g,this._y=l*m*d-f*u*g,this._z=l*u*g-f*m*d,this._w=l*u*d+f*m*g;break;case"ZXY":this._x=f*u*d-l*m*g,this._y=l*m*d+f*u*g,this._z=l*u*g+f*m*d,this._w=l*u*d-f*m*g;break;case"ZYX":this._x=f*u*d-l*m*g,this._y=l*m*d+f*u*g,this._z=l*u*g-f*m*d,this._w=l*u*d+f*m*g;break;case"YZX":this._x=f*u*d+l*m*g,this._y=l*m*d+f*u*g,this._z=l*u*g-f*m*d,this._w=l*u*d-f*m*g;break;case"XZY":this._x=f*u*d-l*m*g,this._y=l*m*d-f*u*g,this._z=l*u*g+f*m*d,this._w=l*u*d+f*m*g;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],r=t[8],o=t[1],s=t[5],c=t[9],l=t[2],u=t[6],d=t[10],f=n+s+d;if(f>0){const m=.5/Math.sqrt(f+1);this._w=.25/m,this._x=(u-c)*m,this._y=(r-l)*m,this._z=(o-i)*m}else if(n>s&&n>d){const m=2*Math.sqrt(1+n-s-d);this._w=(u-c)/m,this._x=.25*m,this._y=(i+o)/m,this._z=(r+l)/m}else if(s>d){const m=2*Math.sqrt(1+s-n-d);this._w=(r-l)/m,this._x=(i+o)/m,this._y=.25*m,this._z=(c+u)/m}else{const m=2*Math.sqrt(1+d-n-s);this._w=(o-i)/m,this._x=(r+l)/m,this._y=(c+u)/m,this._z=.25*m}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(f9(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,r=e._z,o=e._w,s=t._x,c=t._y,l=t._z,u=t._w;return this._x=n*u+o*s+i*l-r*c,this._y=i*u+o*c+r*s-n*l,this._z=r*u+o*l+n*c-i*s,this._w=o*u-n*s-i*c-r*l,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,r=this._z,o=this._w;let s=o*e._w+n*e._x+i*e._y+r*e._z;if(s<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,s=-s):this.copy(e),s>=1)return this._w=o,this._x=n,this._y=i,this._z=r,this;const c=1-s*s;if(c<=Number.EPSILON){const m=1-t;return this._w=m*o+t*this._w,this._x=m*n+t*this._x,this._y=m*i+t*this._y,this._z=m*r+t*this._z,this.normalize(),this._onChangeCallback(),this}const l=Math.sqrt(c),u=Math.atan2(l,s),d=Math.sin((1-t)*u)/l,f=Math.sin(t*u)/l;return this._w=o*d+this._w*f,this._x=n*d+this._x*f,this._y=i*d+this._y*f,this._z=r*d+this._z*f,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(r),n*Math.cos(r),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class P{constructor(e=0,t=0,n=0){P.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(D7.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(D7.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*i,this.y=r[1]*t+r[4]*n+r[7]*i,this.z=r[2]*t+r[5]*n+r[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=e.elements,o=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*o,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*o,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*o,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,r=e.x,o=e.y,s=e.z,c=e.w,l=c*t+o*i-s*n,u=c*n+s*t-r*i,d=c*i+r*n-o*t,f=-r*t-o*n-s*i;return this.x=l*c+f*-r+u*-s-d*-o,this.y=u*c+f*-o+d*-r-l*-s,this.z=d*c+f*-s+l*-o-u*-r,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i,this.y=r[1]*t+r[5]*n+r[9]*i,this.z=r[2]*t+r[6]*n+r[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,r=e.z,o=t.x,s=t.y,c=t.z;return this.x=i*c-r*s,this.y=r*o-n*c,this.z=n*s-i*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return h8.copy(this).projectOnVector(e),this.sub(h8)}reflect(e){return this.sub(h8.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(f9(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const h8=new P,D7=new x1;class h2{constructor(e=new P(1/0,1/0,1/0),t=new P(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(k9.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(k9.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=k9.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){if(e.updateWorldMatrix(!1,!1),e.boundingBox!==void 0)e.boundingBox===null&&e.computeBoundingBox(),w1.copy(e.boundingBox),w1.applyMatrix4(e.matrixWorld),this.union(w1);else{const i=e.geometry;if(i!==void 0)if(t&&i.attributes!==void 0&&i.attributes.position!==void 0){const r=i.attributes.position;for(let o=0,s=r.count;o<s;o++)k9.fromBufferAttribute(r,o).applyMatrix4(e.matrixWorld),this.expandByPoint(k9)}else i.boundingBox===null&&i.computeBoundingBox(),w1.copy(i.boundingBox),w1.applyMatrix4(e.matrixWorld),this.union(w1)}const n=e.children;for(let i=0,r=n.length;i<r;i++)this.expandByObject(n[i],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,k9),k9.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(K1),_2.subVectors(this.max,K1),E1.subVectors(e.a,K1),T1.subVectors(e.b,K1),A1.subVectors(e.c,K1),J9.subVectors(T1,E1),Q9.subVectors(A1,T1),a1.subVectors(E1,A1);let t=[0,-J9.z,J9.y,0,-Q9.z,Q9.y,0,-a1.z,a1.y,J9.z,0,-J9.x,Q9.z,0,-Q9.x,a1.z,0,-a1.x,-J9.y,J9.x,0,-Q9.y,Q9.x,0,-a1.y,a1.x,0];return!d8(t,E1,T1,A1,_2)||(t=[1,0,0,0,1,0,0,0,1],!d8(t,E1,T1,A1,_2))?!1:(x2.crossVectors(J9,Q9),t=[x2.x,x2.y,x2.z],d8(t,E1,T1,A1,_2))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,k9).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(k9).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(G9[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),G9[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),G9[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),G9[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),G9[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),G9[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),G9[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),G9[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(G9),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const G9=[new P,new P,new P,new P,new P,new P,new P,new P],k9=new P,w1=new h2,E1=new P,T1=new P,A1=new P,J9=new P,Q9=new P,a1=new P,K1=new P,_2=new P,x2=new P,o1=new P;function d8(a,e,t,n,i){for(let r=0,o=a.length-3;r<=o;r+=3){o1.fromArray(a,r);const s=i.x*Math.abs(o1.x)+i.y*Math.abs(o1.y)+i.z*Math.abs(o1.z),c=e.dot(o1),l=t.dot(o1),u=n.dot(o1);if(Math.max(-Math.max(c,l,u),Math.min(c,l,u))>s)return!1}return!0}const m6=new h2,$1=new P,f8=new P;class d2{constructor(e=new P,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):m6.setFromPoints(e).getCenter(n);let i=0;for(let r=0,o=e.length;r<o;r++)i=Math.max(i,n.distanceToSquared(e[r]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;$1.subVectors(e,this.center);const t=$1.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector($1,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(f8.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint($1.copy(e.center).add(f8)),this.expandByPoint($1.copy(e.center).sub(f8))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const V9=new P,p8=new P,v2=new P,e1=new P,m8=new P,M2=new P,g8=new P;class X8{constructor(e=new P,t=new P(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,V9)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=V9.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(V9.copy(this.origin).addScaledVector(this.direction,t),V9.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){p8.copy(e).add(t).multiplyScalar(.5),v2.copy(t).sub(e).normalize(),e1.copy(this.origin).sub(p8);const r=e.distanceTo(t)*.5,o=-this.direction.dot(v2),s=e1.dot(this.direction),c=-e1.dot(v2),l=e1.lengthSq(),u=Math.abs(1-o*o);let d,f,m,g;if(u>0)if(d=o*c-s,f=o*s-c,g=r*u,d>=0)if(f>=-g)if(f<=g){const _=1/u;d*=_,f*=_,m=d*(d+o*f+2*s)+f*(o*d+f+2*c)+l}else f=r,d=Math.max(0,-(o*f+s)),m=-d*d+f*(f+2*c)+l;else f=-r,d=Math.max(0,-(o*f+s)),m=-d*d+f*(f+2*c)+l;else f<=-g?(d=Math.max(0,-(-o*r+s)),f=d>0?-r:Math.min(Math.max(-r,-c),r),m=-d*d+f*(f+2*c)+l):f<=g?(d=0,f=Math.min(Math.max(-r,-c),r),m=f*(f+2*c)+l):(d=Math.max(0,-(o*r+s)),f=d>0?r:Math.min(Math.max(-r,-c),r),m=-d*d+f*(f+2*c)+l);else f=o>0?-r:r,d=Math.max(0,-(o*f+s)),m=-d*d+f*(f+2*c)+l;return n&&n.copy(this.origin).addScaledVector(this.direction,d),i&&i.copy(p8).addScaledVector(v2,f),m}intersectSphere(e,t){V9.subVectors(e.center,this.origin);const n=V9.dot(this.direction),i=V9.dot(V9)-n*n,r=e.radius*e.radius;if(i>r)return null;const o=Math.sqrt(r-i),s=n-o,c=n+o;return c<0?null:s<0?this.at(c,t):this.at(s,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,r,o,s,c;const l=1/this.direction.x,u=1/this.direction.y,d=1/this.direction.z,f=this.origin;return l>=0?(n=(e.min.x-f.x)*l,i=(e.max.x-f.x)*l):(n=(e.max.x-f.x)*l,i=(e.min.x-f.x)*l),u>=0?(r=(e.min.y-f.y)*u,o=(e.max.y-f.y)*u):(r=(e.max.y-f.y)*u,o=(e.min.y-f.y)*u),n>o||r>i||((r>n||isNaN(n))&&(n=r),(o<i||isNaN(i))&&(i=o),d>=0?(s=(e.min.z-f.z)*d,c=(e.max.z-f.z)*d):(s=(e.max.z-f.z)*d,c=(e.min.z-f.z)*d),n>c||s>i)||((s>n||n!==n)&&(n=s),(c<i||i!==i)&&(i=c),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,V9)!==null}intersectTriangle(e,t,n,i,r){m8.subVectors(t,e),M2.subVectors(n,e),g8.crossVectors(m8,M2);let o=this.direction.dot(g8),s;if(o>0){if(i)return null;s=1}else if(o<0)s=-1,o=-o;else return null;e1.subVectors(this.origin,e);const c=s*this.direction.dot(M2.crossVectors(e1,M2));if(c<0)return null;const l=s*this.direction.dot(m8.cross(e1));if(l<0||c+l>o)return null;const u=-s*e1.dot(g8);return u<0?null:this.at(u/o,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class B0{constructor(){B0.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(e,t,n,i,r,o,s,c,l,u,d,f,m,g,_,p){const h=this.elements;return h[0]=e,h[4]=t,h[8]=n,h[12]=i,h[1]=r,h[5]=o,h[9]=s,h[13]=c,h[2]=l,h[6]=u,h[10]=d,h[14]=f,h[3]=m,h[7]=g,h[11]=_,h[15]=p,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new B0().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/C1.setFromMatrixColumn(e,0).length(),r=1/C1.setFromMatrixColumn(e,1).length(),o=1/C1.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*o,t[9]=n[9]*o,t[10]=n[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,r=e.z,o=Math.cos(n),s=Math.sin(n),c=Math.cos(i),l=Math.sin(i),u=Math.cos(r),d=Math.sin(r);if(e.order==="XYZ"){const f=o*u,m=o*d,g=s*u,_=s*d;t[0]=c*u,t[4]=-c*d,t[8]=l,t[1]=m+g*l,t[5]=f-_*l,t[9]=-s*c,t[2]=_-f*l,t[6]=g+m*l,t[10]=o*c}else if(e.order==="YXZ"){const f=c*u,m=c*d,g=l*u,_=l*d;t[0]=f+_*s,t[4]=g*s-m,t[8]=o*l,t[1]=o*d,t[5]=o*u,t[9]=-s,t[2]=m*s-g,t[6]=_+f*s,t[10]=o*c}else if(e.order==="ZXY"){const f=c*u,m=c*d,g=l*u,_=l*d;t[0]=f-_*s,t[4]=-o*d,t[8]=g+m*s,t[1]=m+g*s,t[5]=o*u,t[9]=_-f*s,t[2]=-o*l,t[6]=s,t[10]=o*c}else if(e.order==="ZYX"){const f=o*u,m=o*d,g=s*u,_=s*d;t[0]=c*u,t[4]=g*l-m,t[8]=f*l+_,t[1]=c*d,t[5]=_*l+f,t[9]=m*l-g,t[2]=-l,t[6]=s*c,t[10]=o*c}else if(e.order==="YZX"){const f=o*c,m=o*l,g=s*c,_=s*l;t[0]=c*u,t[4]=_-f*d,t[8]=g*d+m,t[1]=d,t[5]=o*u,t[9]=-s*u,t[2]=-l*u,t[6]=m*d+g,t[10]=f-_*d}else if(e.order==="XZY"){const f=o*c,m=o*l,g=s*c,_=s*l;t[0]=c*u,t[4]=-d,t[8]=l*u,t[1]=f*d+_,t[5]=o*u,t[9]=m*d-g,t[2]=g*d-m,t[6]=s*u,t[10]=_*d+f}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(g6,e,_6)}lookAt(e,t,n){const i=this.elements;return v9.subVectors(e,t),v9.lengthSq()===0&&(v9.z=1),v9.normalize(),t1.crossVectors(n,v9),t1.lengthSq()===0&&(Math.abs(n.z)===1?v9.x+=1e-4:v9.z+=1e-4,v9.normalize(),t1.crossVectors(n,v9)),t1.normalize(),S2.crossVectors(v9,t1),i[0]=t1.x,i[4]=S2.x,i[8]=v9.x,i[1]=t1.y,i[5]=S2.y,i[9]=v9.y,i[2]=t1.z,i[6]=S2.z,i[10]=v9.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,o=n[0],s=n[4],c=n[8],l=n[12],u=n[1],d=n[5],f=n[9],m=n[13],g=n[2],_=n[6],p=n[10],h=n[14],E=n[3],w=n[7],v=n[11],y=n[15],A=i[0],R=i[4],N=i[8],M=i[12],T=i[1],Y=i[5],B=i[9],I=i[13],O=i[2],W=i[6],J=i[10],K=i[14],X=i[3],n0=i[7],e0=i[11],M0=i[15];return r[0]=o*A+s*T+c*O+l*X,r[4]=o*R+s*Y+c*W+l*n0,r[8]=o*N+s*B+c*J+l*e0,r[12]=o*M+s*I+c*K+l*M0,r[1]=u*A+d*T+f*O+m*X,r[5]=u*R+d*Y+f*W+m*n0,r[9]=u*N+d*B+f*J+m*e0,r[13]=u*M+d*I+f*K+m*M0,r[2]=g*A+_*T+p*O+h*X,r[6]=g*R+_*Y+p*W+h*n0,r[10]=g*N+_*B+p*J+h*e0,r[14]=g*M+_*I+p*K+h*M0,r[3]=E*A+w*T+v*O+y*X,r[7]=E*R+w*Y+v*W+y*n0,r[11]=E*N+w*B+v*J+y*e0,r[15]=E*M+w*I+v*K+y*M0,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],o=e[1],s=e[5],c=e[9],l=e[13],u=e[2],d=e[6],f=e[10],m=e[14],g=e[3],_=e[7],p=e[11],h=e[15];return g*(+r*c*d-i*l*d-r*s*f+n*l*f+i*s*m-n*c*m)+_*(+t*c*m-t*l*f+r*o*f-i*o*m+i*l*u-r*c*u)+p*(+t*l*d-t*s*m-r*o*d+n*o*m+r*s*u-n*l*u)+h*(-i*s*u-t*c*d+t*s*f+i*o*d-n*o*f+n*c*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],o=e[4],s=e[5],c=e[6],l=e[7],u=e[8],d=e[9],f=e[10],m=e[11],g=e[12],_=e[13],p=e[14],h=e[15],E=d*p*l-_*f*l+_*c*m-s*p*m-d*c*h+s*f*h,w=g*f*l-u*p*l-g*c*m+o*p*m+u*c*h-o*f*h,v=u*_*l-g*d*l+g*s*m-o*_*m-u*s*h+o*d*h,y=g*d*c-u*_*c-g*s*f+o*_*f+u*s*p-o*d*p,A=t*E+n*w+i*v+r*y;if(A===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const R=1/A;return e[0]=E*R,e[1]=(_*f*r-d*p*r-_*i*m+n*p*m+d*i*h-n*f*h)*R,e[2]=(s*p*r-_*c*r+_*i*l-n*p*l-s*i*h+n*c*h)*R,e[3]=(d*c*r-s*f*r-d*i*l+n*f*l+s*i*m-n*c*m)*R,e[4]=w*R,e[5]=(u*p*r-g*f*r+g*i*m-t*p*m-u*i*h+t*f*h)*R,e[6]=(g*c*r-o*p*r-g*i*l+t*p*l+o*i*h-t*c*h)*R,e[7]=(o*f*r-u*c*r+u*i*l-t*f*l-o*i*m+t*c*m)*R,e[8]=v*R,e[9]=(g*d*r-u*_*r-g*n*m+t*_*m+u*n*h-t*d*h)*R,e[10]=(o*_*r-g*s*r+g*n*l-t*_*l-o*n*h+t*s*h)*R,e[11]=(u*s*r-o*d*r-u*n*l+t*d*l+o*n*m-t*s*m)*R,e[12]=y*R,e[13]=(u*_*i-g*d*i+g*n*f-t*_*f-u*n*p+t*d*p)*R,e[14]=(g*s*i-o*_*i-g*n*c+t*_*c+o*n*p-t*s*p)*R,e[15]=(o*d*i-u*s*i+u*n*c-t*d*c-o*n*f+t*s*f)*R,this}scale(e){const t=this.elements,n=e.x,i=e.y,r=e.z;return t[0]*=n,t[4]*=i,t[8]*=r,t[1]*=n,t[5]*=i,t[9]*=r,t[2]*=n,t[6]*=i,t[10]*=r,t[3]*=n,t[7]*=i,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),r=1-n,o=e.x,s=e.y,c=e.z,l=r*o,u=r*s;return this.set(l*o+n,l*s-i*c,l*c+i*s,0,l*s+i*c,u*s+n,u*c-i*o,0,l*c-i*s,u*c+i*o,r*c*c+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,r,o){return this.set(1,n,r,0,e,1,o,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,r=t._x,o=t._y,s=t._z,c=t._w,l=r+r,u=o+o,d=s+s,f=r*l,m=r*u,g=r*d,_=o*u,p=o*d,h=s*d,E=c*l,w=c*u,v=c*d,y=n.x,A=n.y,R=n.z;return i[0]=(1-(_+h))*y,i[1]=(m+v)*y,i[2]=(g-w)*y,i[3]=0,i[4]=(m-v)*A,i[5]=(1-(f+h))*A,i[6]=(p+E)*A,i[7]=0,i[8]=(g+w)*R,i[9]=(p-E)*R,i[10]=(1-(f+_))*R,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let r=C1.set(i[0],i[1],i[2]).length();const o=C1.set(i[4],i[5],i[6]).length(),s=C1.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],L9.copy(this);const l=1/r,u=1/o,d=1/s;return L9.elements[0]*=l,L9.elements[1]*=l,L9.elements[2]*=l,L9.elements[4]*=u,L9.elements[5]*=u,L9.elements[6]*=u,L9.elements[8]*=d,L9.elements[9]*=d,L9.elements[10]*=d,t.setFromRotationMatrix(L9),n.x=r,n.y=o,n.z=s,this}makePerspective(e,t,n,i,r,o){const s=this.elements,c=2*r/(t-e),l=2*r/(n-i),u=(t+e)/(t-e),d=(n+i)/(n-i),f=-(o+r)/(o-r),m=-2*o*r/(o-r);return s[0]=c,s[4]=0,s[8]=u,s[12]=0,s[1]=0,s[5]=l,s[9]=d,s[13]=0,s[2]=0,s[6]=0,s[10]=f,s[14]=m,s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this}makeOrthographic(e,t,n,i,r,o){const s=this.elements,c=1/(t-e),l=1/(n-i),u=1/(o-r),d=(t+e)*c,f=(n+i)*l,m=(o+r)*u;return s[0]=2*c,s[4]=0,s[8]=0,s[12]=-d,s[1]=0,s[5]=2*l,s[9]=0,s[13]=-f,s[2]=0,s[6]=0,s[10]=-2*u,s[14]=-m,s[3]=0,s[7]=0,s[11]=0,s[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const C1=new P,L9=new B0,g6=new P(0,0,0),_6=new P(1,1,1),t1=new P,S2=new P,v9=new P,I7=new B0,U7=new x1;class q2{constructor(e=0,t=0,n=0,i=q2.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,r=i[0],o=i[4],s=i[8],c=i[1],l=i[5],u=i[9],d=i[2],f=i[6],m=i[10];switch(t){case"XYZ":this._y=Math.asin(f9(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(-u,m),this._z=Math.atan2(-o,r)):(this._x=Math.atan2(f,l),this._z=0);break;case"YXZ":this._x=Math.asin(-f9(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(s,m),this._z=Math.atan2(c,l)):(this._y=Math.atan2(-d,r),this._z=0);break;case"ZXY":this._x=Math.asin(f9(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-d,m),this._z=Math.atan2(-o,l)):(this._y=0,this._z=Math.atan2(c,r));break;case"ZYX":this._y=Math.asin(-f9(d,-1,1)),Math.abs(d)<.9999999?(this._x=Math.atan2(f,m),this._z=Math.atan2(c,r)):(this._x=0,this._z=Math.atan2(-o,l));break;case"YZX":this._z=Math.asin(f9(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-u,l),this._y=Math.atan2(-d,r)):(this._x=0,this._y=Math.atan2(s,m));break;case"XZY":this._z=Math.asin(-f9(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(f,l),this._y=Math.atan2(s,r)):(this._x=Math.atan2(-u,m),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return I7.makeRotationFromQuaternion(e),this.setFromRotationMatrix(I7,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return U7.setFromEuler(this),this.setFromQuaternion(U7,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}q2.DEFAULT_ORDER="XYZ";class W5{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let x6=0;const N7=new P,L1=new x1,H9=new B0,y2=new P,J1=new P,v6=new P,M6=new x1,O7=new P(1,0,0),F7=new P(0,1,0),z7=new P(0,0,1),S6={type:"added"},B7={type:"removed"};class j0 extends M1{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:x6++}),this.uuid=u2(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=j0.DEFAULT_UP.clone();const e=new P,t=new q2,n=new x1,i=new P(1,1,1);function r(){n.setFromEuler(t,!1)}function o(){t.setFromQuaternion(n,void 0,!1)}t._onChange(r),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new B0},normalMatrix:{value:new U0}}),this.matrix=new B0,this.matrixWorld=new B0,this.matrixAutoUpdate=j0.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=j0.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new W5,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return L1.setFromAxisAngle(e,t),this.quaternion.multiply(L1),this}rotateOnWorldAxis(e,t){return L1.setFromAxisAngle(e,t),this.quaternion.premultiply(L1),this}rotateX(e){return this.rotateOnAxis(O7,e)}rotateY(e){return this.rotateOnAxis(F7,e)}rotateZ(e){return this.rotateOnAxis(z7,e)}translateOnAxis(e,t){return N7.copy(e).applyQuaternion(this.quaternion),this.position.add(N7.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(O7,e)}translateY(e){return this.translateOnAxis(F7,e)}translateZ(e){return this.translateOnAxis(z7,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(H9.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?y2.copy(e):y2.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),J1.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?H9.lookAt(J1,y2,this.up):H9.lookAt(y2,J1,this.up),this.quaternion.setFromRotationMatrix(H9),i&&(H9.extractRotation(i.matrixWorld),L1.setFromRotationMatrix(H9),this.quaternion.premultiply(L1.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(S6)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(B7)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(B7)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),H9.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),H9.multiply(e.parent.matrixWorld)),e.applyMatrix4(H9),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const o=this.children[n].getObjectByProperty(e,t);if(o!==void 0)return o}}getObjectsByProperty(e,t){let n=[];this[e]===t&&n.push(this);for(let i=0,r=this.children.length;i<r;i++){const o=this.children[i].getObjectsByProperty(e,t);o.length>0&&(n=n.concat(o))}return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(J1,e,v6),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(J1,M6,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++){const r=t[n];(r.matrixWorldAutoUpdate===!0||e===!0)&&r.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let r=0,o=i.length;r<o;r++){const s=i[r];s.matrixWorldAutoUpdate===!0&&s.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function r(s,c){return s[c.uuid]===void 0&&(s[c.uuid]=c.toJSON(e)),c.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);const s=this.geometry.parameters;if(s!==void 0&&s.shapes!==void 0){const c=s.shapes;if(Array.isArray(c))for(let l=0,u=c.length;l<u;l++){const d=c[l];r(e.shapes,d)}else r(e.shapes,c)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const s=[];for(let c=0,l=this.material.length;c<l;c++)s.push(r(e.materials,this.material[c]));i.material=s}else i.material=r(e.materials,this.material);if(this.children.length>0){i.children=[];for(let s=0;s<this.children.length;s++)i.children.push(this.children[s].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let s=0;s<this.animations.length;s++){const c=this.animations[s];i.animations.push(r(e.animations,c))}}if(t){const s=o(e.geometries),c=o(e.materials),l=o(e.textures),u=o(e.images),d=o(e.shapes),f=o(e.skeletons),m=o(e.animations),g=o(e.nodes);s.length>0&&(n.geometries=s),c.length>0&&(n.materials=c),l.length>0&&(n.textures=l),u.length>0&&(n.images=u),d.length>0&&(n.shapes=d),f.length>0&&(n.skeletons=f),m.length>0&&(n.animations=m),g.length>0&&(n.nodes=g)}return n.object=i,n;function o(s){const c=[];for(const l in s){const u=s[l];delete u.metadata,c.push(u)}return c}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}j0.DEFAULT_UP=new P(0,1,0);j0.DEFAULT_MATRIX_AUTO_UPDATE=!0;j0.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const P9=new P,W9=new P,_8=new P,q9=new P,P1=new P,R1=new P,G7=new P,x8=new P,v8=new P,M8=new P;let b2=!1;class D9{constructor(e=new P,t=new P,n=new P){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),P9.subVectors(e,t),i.cross(P9);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(e,t,n,i,r){P9.subVectors(i,t),W9.subVectors(n,t),_8.subVectors(e,t);const o=P9.dot(P9),s=P9.dot(W9),c=P9.dot(_8),l=W9.dot(W9),u=W9.dot(_8),d=o*l-s*s;if(d===0)return r.set(-2,-1,-1);const f=1/d,m=(l*c-s*u)*f,g=(o*u-s*c)*f;return r.set(1-m-g,g,m)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,q9),q9.x>=0&&q9.y>=0&&q9.x+q9.y<=1}static getUV(e,t,n,i,r,o,s,c){return b2===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),b2=!0),this.getInterpolation(e,t,n,i,r,o,s,c)}static getInterpolation(e,t,n,i,r,o,s,c){return this.getBarycoord(e,t,n,i,q9),c.setScalar(0),c.addScaledVector(r,q9.x),c.addScaledVector(o,q9.y),c.addScaledVector(s,q9.z),c}static isFrontFacing(e,t,n,i){return P9.subVectors(n,t),W9.subVectors(e,t),P9.cross(W9).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return P9.subVectors(this.c,this.b),W9.subVectors(this.a,this.b),P9.cross(W9).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return D9.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return D9.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,r){return b2===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),b2=!0),D9.getInterpolation(e,this.a,this.b,this.c,t,n,i,r)}getInterpolation(e,t,n,i,r){return D9.getInterpolation(e,this.a,this.b,this.c,t,n,i,r)}containsPoint(e){return D9.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return D9.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,r=this.c;let o,s;P1.subVectors(i,n),R1.subVectors(r,n),x8.subVectors(e,n);const c=P1.dot(x8),l=R1.dot(x8);if(c<=0&&l<=0)return t.copy(n);v8.subVectors(e,i);const u=P1.dot(v8),d=R1.dot(v8);if(u>=0&&d<=u)return t.copy(i);const f=c*d-u*l;if(f<=0&&c>=0&&u<=0)return o=c/(c-u),t.copy(n).addScaledVector(P1,o);M8.subVectors(e,r);const m=P1.dot(M8),g=R1.dot(M8);if(g>=0&&m<=g)return t.copy(r);const _=m*l-c*g;if(_<=0&&l>=0&&g<=0)return s=l/(l-g),t.copy(n).addScaledVector(R1,s);const p=u*g-m*d;if(p<=0&&d-u>=0&&m-g>=0)return G7.subVectors(r,i),s=(d-u)/(d-u+(m-g)),t.copy(i).addScaledVector(G7,s);const h=1/(p+_+f);return o=_*h,s=f*h,t.copy(n).addScaledVector(P1,o).addScaledVector(R1,s)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let y6=0;class K9 extends M1{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:y6++}),this.uuid=u2(),this.name="",this.type="Material",this.blending=k1,this.side=Z9,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=U5,this.blendDst=N5,this.blendEquation=B1,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=N8,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=r6,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=s8,this.stencilZFail=s8,this.stencilZPass=s8,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==k1&&(n.blending=this.blending),this.side!==Z9&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.forceSinglePass===!0&&(n.forceSinglePass=this.forceSinglePass),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(r){const o=[];for(const s in r){const c=r[s];delete c.metadata,o.push(c)}return o}if(t){const r=i(e.textures),o=i(e.images);r.length>0&&(n.textures=r),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}const q5={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},R9={h:0,s:0,l:0},w2={h:0,s:0,l:0};function S8(a,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?a+(e-a)*6*t:t<1/2?e:t<2/3?a+(e-a)*6*(2/3-t):a}class D0{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,t===void 0&&n===void 0?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=F9){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,x9.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=x9.workingColorSpace){return this.r=e,this.g=t,this.b=n,x9.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=x9.workingColorSpace){if(e=s6(e,1),t=f9(t,0,1),n=f9(n,0,1),t===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+t):n+t-n*t,o=2*n-r;this.r=S8(o,r,e+1/3),this.g=S8(o,r,e),this.b=S8(o,r,e-1/3)}return x9.toWorkingColorSpace(this,i),this}setStyle(e,t=F9){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let r;const o=i[1],s=i[2];switch(o){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,x9.toWorkingColorSpace(this,t),n(r[4]),this;if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,x9.toWorkingColorSpace(this,t),n(r[4]),this;break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s)){const c=parseFloat(r[1])/360,l=parseFloat(r[2])/100,u=parseFloat(r[3])/100;return n(r[4]),this.setHSL(c,l,u,t)}break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const r=i[1],o=r.length;if(o===3)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,t);if(o===6)return this.setHex(parseInt(r,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=F9){const n=q5[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=H1(e.r),this.g=H1(e.g),this.b=H1(e.b),this}copyLinearToSRGB(e){return this.r=c8(e.r),this.g=c8(e.g),this.b=c8(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=F9){return x9.fromWorkingColorSpace(l9.copy(this),e),f9(l9.r*255,0,255)<<16^f9(l9.g*255,0,255)<<8^f9(l9.b*255,0,255)<<0}getHexString(e=F9){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=x9.workingColorSpace){x9.fromWorkingColorSpace(l9.copy(this),t);const n=l9.r,i=l9.g,r=l9.b,o=Math.max(n,i,r),s=Math.min(n,i,r);let c,l;const u=(s+o)/2;if(s===o)c=0,l=0;else{const d=o-s;switch(l=u<=.5?d/(o+s):d/(2-o-s),o){case n:c=(i-r)/d+(i<r?6:0);break;case i:c=(r-n)/d+2;break;case r:c=(n-i)/d+4;break}c/=6}return e.h=c,e.s=l,e.l=u,e}getRGB(e,t=x9.workingColorSpace){return x9.fromWorkingColorSpace(l9.copy(this),t),e.r=l9.r,e.g=l9.g,e.b=l9.b,e}getStyle(e=F9){x9.fromWorkingColorSpace(l9.copy(this),e);const t=l9.r,n=l9.g,i=l9.b;return e!==F9?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${t*255|0},${n*255|0},${i*255|0})`}offsetHSL(e,t,n){return this.getHSL(R9),R9.h+=e,R9.s+=t,R9.l+=n,this.setHSL(R9.h,R9.s,R9.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(R9),e.getHSL(w2);const n=o8(R9.h,w2.h,t),i=o8(R9.s,w2.s,t),r=o8(R9.l,w2.l,t);return this.setHSL(n,i,r),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,r=e.elements;return this.r=r[0]*t+r[3]*n+r[6]*i,this.g=r[1]*t+r[4]*n+r[7]*i,this.b=r[2]*t+r[5]*n+r[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const l9=new D0;D0.NAMES=q5;class X2 extends K9{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new D0(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=q8,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Q0=new P,E2=new E0;class B9{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=L7,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)E2.fromBufferAttribute(this,t),E2.applyMatrix3(e),this.setXY(t,E2.x,E2.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)Q0.fromBufferAttribute(this,t),Q0.applyMatrix3(e),this.setXYZ(t,Q0.x,Q0.y,Q0.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)Q0.fromBufferAttribute(this,t),Q0.applyMatrix4(e),this.setXYZ(t,Q0.x,Q0.y,Q0.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Q0.fromBufferAttribute(this,t),Q0.applyNormalMatrix(e),this.setXYZ(t,Q0.x,Q0.y,Q0.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Q0.fromBufferAttribute(this,t),Q0.transformDirection(e),this.setXYZ(t,Q0.x,Q0.y,Q0.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=g2(t,this.array)),t}setX(e,t){return this.normalized&&(t=_9(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=g2(t,this.array)),t}setY(e,t){return this.normalized&&(t=_9(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=g2(t,this.array)),t}setZ(e,t){return this.normalized&&(t=_9(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=g2(t,this.array)),t}setW(e,t){return this.normalized&&(t=_9(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=_9(t,this.array),n=_9(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=_9(t,this.array),n=_9(n,this.array),i=_9(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=_9(t,this.array),n=_9(n,this.array),i=_9(i,this.array),r=_9(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==L7&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class X5 extends B9{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class j5 extends B9{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class e9 extends B9{constructor(e,t,n){super(new Float32Array(e),t,n)}}let b6=0;const w9=new B0,y8=new j0,D1=new P,M9=new h2,Q1=new h2,r9=new P;class y9 extends M1{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:b6++}),this.uuid=u2(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(G5(e)?j5:X5)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new U0().getNormalMatrix(e);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return w9.makeRotationFromQuaternion(e),this.applyMatrix4(w9),this}rotateX(e){return w9.makeRotationX(e),this.applyMatrix4(w9),this}rotateY(e){return w9.makeRotationY(e),this.applyMatrix4(w9),this}rotateZ(e){return w9.makeRotationZ(e),this.applyMatrix4(w9),this}translate(e,t,n){return w9.makeTranslation(e,t,n),this.applyMatrix4(w9),this}scale(e,t,n){return w9.makeScale(e,t,n),this.applyMatrix4(w9),this}lookAt(e){return y8.lookAt(e),y8.updateMatrix(),this.applyMatrix4(y8.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(D1).negate(),this.translate(D1.x,D1.y,D1.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const r=e[n];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new e9(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new h2);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new P(-1/0,-1/0,-1/0),new P(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const r=t[n];M9.setFromBufferAttribute(r),this.morphTargetsRelative?(r9.addVectors(this.boundingBox.min,M9.min),this.boundingBox.expandByPoint(r9),r9.addVectors(this.boundingBox.max,M9.max),this.boundingBox.expandByPoint(r9)):(this.boundingBox.expandByPoint(M9.min),this.boundingBox.expandByPoint(M9.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new d2);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new P,1/0);return}if(e){const n=this.boundingSphere.center;if(M9.setFromBufferAttribute(e),t)for(let r=0,o=t.length;r<o;r++){const s=t[r];Q1.setFromBufferAttribute(s),this.morphTargetsRelative?(r9.addVectors(M9.min,Q1.min),M9.expandByPoint(r9),r9.addVectors(M9.max,Q1.max),M9.expandByPoint(r9)):(M9.expandByPoint(Q1.min),M9.expandByPoint(Q1.max))}M9.getCenter(n);let i=0;for(let r=0,o=e.count;r<o;r++)r9.fromBufferAttribute(e,r),i=Math.max(i,n.distanceToSquared(r9));if(t)for(let r=0,o=t.length;r<o;r++){const s=t[r],c=this.morphTargetsRelative;for(let l=0,u=s.count;l<u;l++)r9.fromBufferAttribute(s,l),c&&(D1.fromBufferAttribute(e,l),r9.add(D1)),i=Math.max(i,n.distanceToSquared(r9))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,i=t.position.array,r=t.normal.array,o=t.uv.array,s=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new B9(new Float32Array(4*s),4));const c=this.getAttribute("tangent").array,l=[],u=[];for(let T=0;T<s;T++)l[T]=new P,u[T]=new P;const d=new P,f=new P,m=new P,g=new E0,_=new E0,p=new E0,h=new P,E=new P;function w(T,Y,B){d.fromArray(i,T*3),f.fromArray(i,Y*3),m.fromArray(i,B*3),g.fromArray(o,T*2),_.fromArray(o,Y*2),p.fromArray(o,B*2),f.sub(d),m.sub(d),_.sub(g),p.sub(g);const I=1/(_.x*p.y-p.x*_.y);isFinite(I)&&(h.copy(f).multiplyScalar(p.y).addScaledVector(m,-_.y).multiplyScalar(I),E.copy(m).multiplyScalar(_.x).addScaledVector(f,-p.x).multiplyScalar(I),l[T].add(h),l[Y].add(h),l[B].add(h),u[T].add(E),u[Y].add(E),u[B].add(E))}let v=this.groups;v.length===0&&(v=[{start:0,count:n.length}]);for(let T=0,Y=v.length;T<Y;++T){const B=v[T],I=B.start,O=B.count;for(let W=I,J=I+O;W<J;W+=3)w(n[W+0],n[W+1],n[W+2])}const y=new P,A=new P,R=new P,N=new P;function M(T){R.fromArray(r,T*3),N.copy(R);const Y=l[T];y.copy(Y),y.sub(R.multiplyScalar(R.dot(Y))).normalize(),A.crossVectors(N,Y);const I=A.dot(u[T])<0?-1:1;c[T*4]=y.x,c[T*4+1]=y.y,c[T*4+2]=y.z,c[T*4+3]=I}for(let T=0,Y=v.length;T<Y;++T){const B=v[T],I=B.start,O=B.count;for(let W=I,J=I+O;W<J;W+=3)M(n[W+0]),M(n[W+1]),M(n[W+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new B9(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let f=0,m=n.count;f<m;f++)n.setXYZ(f,0,0,0);const i=new P,r=new P,o=new P,s=new P,c=new P,l=new P,u=new P,d=new P;if(e)for(let f=0,m=e.count;f<m;f+=3){const g=e.getX(f+0),_=e.getX(f+1),p=e.getX(f+2);i.fromBufferAttribute(t,g),r.fromBufferAttribute(t,_),o.fromBufferAttribute(t,p),u.subVectors(o,r),d.subVectors(i,r),u.cross(d),s.fromBufferAttribute(n,g),c.fromBufferAttribute(n,_),l.fromBufferAttribute(n,p),s.add(u),c.add(u),l.add(u),n.setXYZ(g,s.x,s.y,s.z),n.setXYZ(_,c.x,c.y,c.z),n.setXYZ(p,l.x,l.y,l.z)}else for(let f=0,m=t.count;f<m;f+=3)i.fromBufferAttribute(t,f+0),r.fromBufferAttribute(t,f+1),o.fromBufferAttribute(t,f+2),u.subVectors(o,r),d.subVectors(i,r),u.cross(d),n.setXYZ(f+0,u.x,u.y,u.z),n.setXYZ(f+1,u.x,u.y,u.z),n.setXYZ(f+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeGeometries() instead."),this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)r9.fromBufferAttribute(e,t),r9.normalize(),e.setXYZ(t,r9.x,r9.y,r9.z)}toNonIndexed(){function e(s,c){const l=s.array,u=s.itemSize,d=s.normalized,f=new l.constructor(c.length*u);let m=0,g=0;for(let _=0,p=c.length;_<p;_++){s.isInterleavedBufferAttribute?m=c[_]*s.data.stride+s.offset:m=c[_]*u;for(let h=0;h<u;h++)f[g++]=l[m++]}return new B9(f,u,d)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new y9,n=this.index.array,i=this.attributes;for(const s in i){const c=i[s],l=e(c,n);t.setAttribute(s,l)}const r=this.morphAttributes;for(const s in r){const c=[],l=r[s];for(let u=0,d=l.length;u<d;u++){const f=l[u],m=e(f,n);c.push(m)}t.morphAttributes[s]=c}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let s=0,c=o.length;s<c;s++){const l=o[s];t.addGroup(l.start,l.count,l.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const c=this.parameters;for(const l in c)c[l]!==void 0&&(e[l]=c[l]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const c in n){const l=n[c];e.data.attributes[c]=l.toJSON(e.data)}const i={};let r=!1;for(const c in this.morphAttributes){const l=this.morphAttributes[c],u=[];for(let d=0,f=l.length;d<f;d++){const m=l[d];u.push(m.toJSON(e.data))}u.length>0&&(i[c]=u,r=!0)}r&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const s=this.boundingSphere;return s!==null&&(e.data.boundingSphere={center:s.center.toArray(),radius:s.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const l in i){const u=i[l];this.setAttribute(l,u.clone(t))}const r=e.morphAttributes;for(const l in r){const u=[],d=r[l];for(let f=0,m=d.length;f<m;f++)u.push(d[f].clone(t));this.morphAttributes[l]=u}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let l=0,u=o.length;l<u;l++){const d=o[l];this.addGroup(d.start,d.count,d.materialIndex)}const s=e.boundingBox;s!==null&&(this.boundingBox=s.clone());const c=e.boundingSphere;return c!==null&&(this.boundingSphere=c.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const k7=new B0,O9=new X8,T2=new d2,V7=new P,I1=new P,U1=new P,N1=new P,b8=new P,A2=new P,C2=new E0,L2=new E0,P2=new E0,H7=new P,W7=new P,q7=new P,R2=new P,D2=new P;class A9 extends j0{constructor(e=new y9,t=new X2){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const s=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[s]=r}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,r=n.morphAttributes.position,o=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const s=this.morphTargetInfluences;if(r&&s){A2.set(0,0,0);for(let c=0,l=r.length;c<l;c++){const u=s[c],d=r[c];u!==0&&(b8.fromBufferAttribute(d,e),o?A2.addScaledVector(b8,u):A2.addScaledVector(b8.sub(t),u))}t.add(A2)}return this.isSkinnedMesh&&this.applyBoneTransform(e,t),t}raycast(e,t){const n=this.geometry,i=this.material,r=this.matrixWorld;if(i===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),T2.copy(n.boundingSphere),T2.applyMatrix4(r),O9.copy(e.ray).recast(e.near),T2.containsPoint(O9.origin)===!1&&(O9.intersectSphere(T2,V7)===null||O9.origin.distanceToSquared(V7)>(e.far-e.near)**2))||(k7.copy(r).invert(),O9.copy(e.ray).applyMatrix4(k7),n.boundingBox!==null&&O9.intersectsBox(n.boundingBox)===!1))return;let o;const s=n.index,c=n.attributes.position,l=n.attributes.uv,u=n.attributes.uv2,d=n.attributes.normal,f=n.groups,m=n.drawRange;if(s!==null)if(Array.isArray(i))for(let g=0,_=f.length;g<_;g++){const p=f[g],h=i[p.materialIndex],E=Math.max(p.start,m.start),w=Math.min(s.count,Math.min(p.start+p.count,m.start+m.count));for(let v=E,y=w;v<y;v+=3){const A=s.getX(v),R=s.getX(v+1),N=s.getX(v+2);o=I2(this,h,e,O9,l,u,d,A,R,N),o&&(o.faceIndex=Math.floor(v/3),o.face.materialIndex=p.materialIndex,t.push(o))}}else{const g=Math.max(0,m.start),_=Math.min(s.count,m.start+m.count);for(let p=g,h=_;p<h;p+=3){const E=s.getX(p),w=s.getX(p+1),v=s.getX(p+2);o=I2(this,i,e,O9,l,u,d,E,w,v),o&&(o.faceIndex=Math.floor(p/3),t.push(o))}}else if(c!==void 0)if(Array.isArray(i))for(let g=0,_=f.length;g<_;g++){const p=f[g],h=i[p.materialIndex],E=Math.max(p.start,m.start),w=Math.min(c.count,Math.min(p.start+p.count,m.start+m.count));for(let v=E,y=w;v<y;v+=3){const A=v,R=v+1,N=v+2;o=I2(this,h,e,O9,l,u,d,A,R,N),o&&(o.faceIndex=Math.floor(v/3),o.face.materialIndex=p.materialIndex,t.push(o))}}else{const g=Math.max(0,m.start),_=Math.min(c.count,m.start+m.count);for(let p=g,h=_;p<h;p+=3){const E=p,w=p+1,v=p+2;o=I2(this,i,e,O9,l,u,d,E,w,v),o&&(o.faceIndex=Math.floor(p/3),t.push(o))}}}}function w6(a,e,t,n,i,r,o,s){let c;if(e.side===p9?c=n.intersectTriangle(o,r,i,!0,s):c=n.intersectTriangle(i,r,o,e.side===Z9,s),c===null)return null;D2.copy(s),D2.applyMatrix4(a.matrixWorld);const l=t.ray.origin.distanceTo(D2);return l<t.near||l>t.far?null:{distance:l,point:D2.clone(),object:a}}function I2(a,e,t,n,i,r,o,s,c,l){a.getVertexPosition(s,I1),a.getVertexPosition(c,U1),a.getVertexPosition(l,N1);const u=w6(a,e,t,n,I1,U1,N1,R2);if(u){i&&(C2.fromBufferAttribute(i,s),L2.fromBufferAttribute(i,c),P2.fromBufferAttribute(i,l),u.uv=D9.getInterpolation(R2,I1,U1,N1,C2,L2,P2,new E0)),r&&(C2.fromBufferAttribute(r,s),L2.fromBufferAttribute(r,c),P2.fromBufferAttribute(r,l),u.uv2=D9.getInterpolation(R2,I1,U1,N1,C2,L2,P2,new E0)),o&&(H7.fromBufferAttribute(o,s),W7.fromBufferAttribute(o,c),q7.fromBufferAttribute(o,l),u.normal=D9.getInterpolation(R2,I1,U1,N1,H7,W7,q7,new P),u.normal.dot(n.direction)>0&&u.normal.multiplyScalar(-1));const d={a:s,b:c,c:l,normal:new P,materialIndex:0};D9.getNormal(I1,U1,N1,d.normal),u.face=d}return u}class f2 extends y9{constructor(e=1,t=1,n=1,i=1,r=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:o};const s=this;i=Math.floor(i),r=Math.floor(r),o=Math.floor(o);const c=[],l=[],u=[],d=[];let f=0,m=0;g("z","y","x",-1,-1,n,t,e,o,r,0),g("z","y","x",1,-1,n,t,-e,o,r,1),g("x","z","y",1,1,e,n,t,i,o,2),g("x","z","y",1,-1,e,n,-t,i,o,3),g("x","y","z",1,-1,e,t,n,i,r,4),g("x","y","z",-1,-1,e,t,-n,i,r,5),this.setIndex(c),this.setAttribute("position",new e9(l,3)),this.setAttribute("normal",new e9(u,3)),this.setAttribute("uv",new e9(d,2));function g(_,p,h,E,w,v,y,A,R,N,M){const T=v/R,Y=y/N,B=v/2,I=y/2,O=A/2,W=R+1,J=N+1;let K=0,X=0;const n0=new P;for(let e0=0;e0<J;e0++){const M0=e0*Y-I;for(let i0=0;i0<W;i0++){const k=i0*T-B;n0[_]=k*E,n0[p]=M0*w,n0[h]=O,l.push(n0.x,n0.y,n0.z),n0[_]=0,n0[p]=0,n0[h]=A>0?1:-1,u.push(n0.x,n0.y,n0.z),d.push(i0/R),d.push(1-e0/N),K+=1}}for(let e0=0;e0<N;e0++)for(let M0=0;M0<R;M0++){const i0=f+M0+W*e0,k=f+M0+W*(e0+1),Z=f+(M0+1)+W*(e0+1),a0=f+(M0+1)+W*e0;c.push(i0,k,a0),c.push(k,Z,a0),X+=6}s.addGroup(m,X,M),m+=X,f+=K}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new f2(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function j1(a){const e={};for(const t in a){e[t]={};for(const n in a[t]){const i=a[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function h9(a){const e={};for(let t=0;t<a.length;t++){const n=j1(a[t]);for(const i in n)e[i]=n[i]}return e}function E6(a){const e=[];for(let t=0;t<a.length;t++)e.push(a[t].clone());return e}function Y5(a){return a.getRenderTarget()===null&&a.outputEncoding===k0?F9:l2}const T6={clone:j1,merge:h9};var A6=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,C6=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class v1 extends K9{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=A6,this.fragmentShader=C6,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=j1(e.uniforms),this.uniformsGroups=E6(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const o=this.uniforms[i].value;o&&o.isTexture?t.uniforms[i]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[i]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[i]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[i]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[i]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[i]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[i]={type:"m4",value:o.toArray()}:t.uniforms[i]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class Z5 extends j0{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new B0,this.projectionMatrix=new B0,this.projectionMatrixInverse=new B0}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class S9 extends Z5{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=G8*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(a8*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return G8*2*Math.atan(Math.tan(a8*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,r,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(a8*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i;const o=this.view;if(this.view!==null&&this.view.enabled){const c=o.fullWidth,l=o.fullHeight;r+=o.offsetX*i/c,t-=o.offsetY*n/l,i*=o.width/c,n*=o.height/l}const s=this.filmOffset;s!==0&&(r+=e*s/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const O1=-90,F1=1;class L6 extends j0{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n;const i=new S9(O1,F1,e,t);i.layers=this.layers,i.up.set(0,1,0),i.lookAt(1,0,0),this.add(i);const r=new S9(O1,F1,e,t);r.layers=this.layers,r.up.set(0,1,0),r.lookAt(-1,0,0),this.add(r);const o=new S9(O1,F1,e,t);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(0,1,0),this.add(o);const s=new S9(O1,F1,e,t);s.layers=this.layers,s.up.set(0,0,1),s.lookAt(0,-1,0),this.add(s);const c=new S9(O1,F1,e,t);c.layers=this.layers,c.up.set(0,1,0),c.lookAt(0,0,1),this.add(c);const l=new S9(O1,F1,e,t);l.layers=this.layers,l.up.set(0,1,0),l.lookAt(0,0,-1),this.add(l)}update(e,t){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget,[i,r,o,s,c,l]=this.children,u=e.getRenderTarget(),d=e.toneMapping,f=e.xr.enabled;e.toneMapping=Y9,e.xr.enabled=!1;const m=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,r),e.setRenderTarget(n,2),e.render(t,o),e.setRenderTarget(n,3),e.render(t,s),e.setRenderTarget(n,4),e.render(t,c),n.texture.generateMipmaps=m,e.setRenderTarget(n,5),e.render(t,l),e.setRenderTarget(u),e.toneMapping=d,e.xr.enabled=f,n.texture.needsPMREMUpdate=!0}}class K5 extends m9{constructor(e,t,n,i,r,o,s,c,l,u){e=e!==void 0?e:[],t=t!==void 0?t:W1,super(e,t,n,i,r,o,s,c,l,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class P6 extends _1{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new K5(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:T9}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new f2(5,5,5),r=new v1({name:"CubemapFromEquirect",uniforms:j1(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:p9,blending:n1});r.uniforms.tEquirect.value=t;const o=new A9(i,r),s=t.minFilter;return t.minFilter===a2&&(t.minFilter=T9),new L6(1,10,this).update(e,o),t.minFilter=s,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,n,i){const r=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,n,i);e.setRenderTarget(r)}}const w8=new P,R6=new P,D6=new U0;class c1{constructor(e=new P(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=w8.subVectors(n,t).cross(R6.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(w8),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:t.copy(e.start).addScaledVector(n,r)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||D6.getNormalMatrix(e),i=this.coplanarPoint(w8).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const l1=new d2,U2=new P;class j8{constructor(e=new c1,t=new c1,n=new c1,i=new c1,r=new c1,o=new c1){this.planes=[e,t,n,i,r,o]}set(e,t,n,i,r,o){const s=this.planes;return s[0].copy(e),s[1].copy(t),s[2].copy(n),s[3].copy(i),s[4].copy(r),s[5].copy(o),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,i=n[0],r=n[1],o=n[2],s=n[3],c=n[4],l=n[5],u=n[6],d=n[7],f=n[8],m=n[9],g=n[10],_=n[11],p=n[12],h=n[13],E=n[14],w=n[15];return t[0].setComponents(s-i,d-c,_-f,w-p).normalize(),t[1].setComponents(s+i,d+c,_+f,w+p).normalize(),t[2].setComponents(s+r,d+l,_+m,w+h).normalize(),t[3].setComponents(s-r,d-l,_-m,w-h).normalize(),t[4].setComponents(s-o,d-u,_-g,w-E).normalize(),t[5].setComponents(s+o,d+u,_+g,w+E).normalize(),this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),l1.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),l1.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(l1)}intersectsSprite(e){return l1.center.set(0,0,0),l1.radius=.7071067811865476,l1.applyMatrix4(e.matrixWorld),this.intersectsSphere(l1)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let r=0;r<6;r++)if(t[r].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(U2.x=i.normal.x>0?e.max.x:e.min.x,U2.y=i.normal.y>0?e.max.y:e.min.y,U2.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(U2)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function $5(){let a=null,e=!1,t=null,n=null;function i(r,o){t(r,o),n=a.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=a.requestAnimationFrame(i),e=!0)},stop:function(){a.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(r){t=r},setContext:function(r){a=r}}}function I6(a,e){const t=e.isWebGL2,n=new WeakMap;function i(l,u){const d=l.array,f=l.usage,m=a.createBuffer();a.bindBuffer(u,m),a.bufferData(u,d,f),l.onUploadCallback();let g;if(d instanceof Float32Array)g=5126;else if(d instanceof Uint16Array)if(l.isFloat16BufferAttribute)if(t)g=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else g=5123;else if(d instanceof Int16Array)g=5122;else if(d instanceof Uint32Array)g=5125;else if(d instanceof Int32Array)g=5124;else if(d instanceof Int8Array)g=5120;else if(d instanceof Uint8Array)g=5121;else if(d instanceof Uint8ClampedArray)g=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+d);return{buffer:m,type:g,bytesPerElement:d.BYTES_PER_ELEMENT,version:l.version}}function r(l,u,d){const f=u.array,m=u.updateRange;a.bindBuffer(d,l),m.count===-1?a.bufferSubData(d,0,f):(t?a.bufferSubData(d,m.offset*f.BYTES_PER_ELEMENT,f,m.offset,m.count):a.bufferSubData(d,m.offset*f.BYTES_PER_ELEMENT,f.subarray(m.offset,m.offset+m.count)),m.count=-1),u.onUploadCallback()}function o(l){return l.isInterleavedBufferAttribute&&(l=l.data),n.get(l)}function s(l){l.isInterleavedBufferAttribute&&(l=l.data);const u=n.get(l);u&&(a.deleteBuffer(u.buffer),n.delete(l))}function c(l,u){if(l.isGLBufferAttribute){const f=n.get(l);(!f||f.version<l.version)&&n.set(l,{buffer:l.buffer,type:l.type,bytesPerElement:l.elementSize,version:l.version});return}l.isInterleavedBufferAttribute&&(l=l.data);const d=n.get(l);d===void 0?n.set(l,i(l,u)):d.version<l.version&&(r(d.buffer,l,u),d.version=l.version)}return{get:o,remove:s,update:c}}class j2 extends y9{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const r=e/2,o=t/2,s=Math.floor(n),c=Math.floor(i),l=s+1,u=c+1,d=e/s,f=t/c,m=[],g=[],_=[],p=[];for(let h=0;h<u;h++){const E=h*f-o;for(let w=0;w<l;w++){const v=w*d-r;g.push(v,-E,0),_.push(0,0,1),p.push(w/s),p.push(1-h/c)}}for(let h=0;h<c;h++)for(let E=0;E<s;E++){const w=E+l*h,v=E+l*(h+1),y=E+1+l*(h+1),A=E+1+l*h;m.push(w,v,A),m.push(v,y,A)}this.setIndex(m),this.setAttribute("position",new e9(g,3)),this.setAttribute("normal",new e9(_,3)),this.setAttribute("uv",new e9(p,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new j2(e.width,e.height,e.widthSegments,e.heightSegments)}}var U6=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,N6=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,O6=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,F6=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,z6=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,B6=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,G6="vec3 transformed = vec3( position );",k6=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,V6=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,H6=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,W6=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,q6=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,X6=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,j6=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,Y6=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,Z6=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,K6=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,$6=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,J6=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,Q6=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,e4=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,t4=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,n4=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,i4=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,r4=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,s4=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,a4="gl_FragColor = linearToOutputTexel( gl_FragColor );",o4=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,l4=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,c4=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,u4=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,h4=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,d4=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,f4=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,p4=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,m4=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,g4=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,_4=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,x4=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,v4=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,M4=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,S4=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,y4=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,b4=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,w4=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,E4=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,T4=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,A4=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,C4=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif`,L4=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,P4=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,R4=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,D4=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,I4=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,U4=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,N4=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,O4=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,F4=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,z4=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,B4=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,G4=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,k4=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,V4=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,H4=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,W4=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,q4=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,X4=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,j4=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#ifdef USE_NORMALMAP_TANGENTSPACE
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal, vNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 geometryNormal = normal;`,Y4=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,Z4=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,K4=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,$4=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,J4=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,Q4=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,ee=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,te=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,ne=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,ie=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,re=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,se=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,ae=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,oe=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,le=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,ce=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,ue=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,he=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,de=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,fe=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,pe=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,me=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,ge=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,_e=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,xe=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,ve=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,Me=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,Se=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,ye=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,be=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );
#endif`,we=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, vec2 fullSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		
		vec2 lodFudge = pow( 1.95, lod ) / fullSize;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec2 fullSize = vec2( textureSize( sampler, 0 ) );
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), fullSize, floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), fullSize, ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,Ee=`#ifdef USE_UV
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,Te=`#ifdef USE_UV
	varying vec2 vUv;
#endif
#ifdef USE_UV2
	attribute vec2 uv2;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,Ae=`#ifdef USE_UV
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,Ce=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const Le=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,Pe=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Re=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,De=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Ie=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Ue=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Ne=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,Oe=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,Fe=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,ze=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,Be=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,Ge=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,ke=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Ve=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,He=`#include <common>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,We=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,qe=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Xe=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,je=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,Ye=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Ze=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Ke=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,$e=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Je=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Qe=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,et=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,tt=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,nt=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,it=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,rt=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,st=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,at=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,ot=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,lt=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,C0={alphamap_fragment:U6,alphamap_pars_fragment:N6,alphatest_fragment:O6,alphatest_pars_fragment:F6,aomap_fragment:z6,aomap_pars_fragment:B6,begin_vertex:G6,beginnormal_vertex:k6,bsdfs:V6,iridescence_fragment:H6,bumpmap_pars_fragment:W6,clipping_planes_fragment:q6,clipping_planes_pars_fragment:X6,clipping_planes_pars_vertex:j6,clipping_planes_vertex:Y6,color_fragment:Z6,color_pars_fragment:K6,color_pars_vertex:$6,color_vertex:J6,common:Q6,cube_uv_reflection_fragment:e4,defaultnormal_vertex:t4,displacementmap_pars_vertex:n4,displacementmap_vertex:i4,emissivemap_fragment:r4,emissivemap_pars_fragment:s4,encodings_fragment:a4,encodings_pars_fragment:o4,envmap_fragment:l4,envmap_common_pars_fragment:c4,envmap_pars_fragment:u4,envmap_pars_vertex:h4,envmap_physical_pars_fragment:b4,envmap_vertex:d4,fog_vertex:f4,fog_pars_vertex:p4,fog_fragment:m4,fog_pars_fragment:g4,gradientmap_pars_fragment:_4,lightmap_fragment:x4,lightmap_pars_fragment:v4,lights_lambert_fragment:M4,lights_lambert_pars_fragment:S4,lights_pars_begin:y4,lights_toon_fragment:w4,lights_toon_pars_fragment:E4,lights_phong_fragment:T4,lights_phong_pars_fragment:A4,lights_physical_fragment:C4,lights_physical_pars_fragment:L4,lights_fragment_begin:P4,lights_fragment_maps:R4,lights_fragment_end:D4,logdepthbuf_fragment:I4,logdepthbuf_pars_fragment:U4,logdepthbuf_pars_vertex:N4,logdepthbuf_vertex:O4,map_fragment:F4,map_pars_fragment:z4,map_particle_fragment:B4,map_particle_pars_fragment:G4,metalnessmap_fragment:k4,metalnessmap_pars_fragment:V4,morphcolor_vertex:H4,morphnormal_vertex:W4,morphtarget_pars_vertex:q4,morphtarget_vertex:X4,normal_fragment_begin:j4,normal_fragment_maps:Y4,normal_pars_fragment:Z4,normal_pars_vertex:K4,normal_vertex:$4,normalmap_pars_fragment:J4,clearcoat_normal_fragment_begin:Q4,clearcoat_normal_fragment_maps:ee,clearcoat_pars_fragment:te,iridescence_pars_fragment:ne,output_fragment:ie,packing:re,premultiplied_alpha_fragment:se,project_vertex:ae,dithering_fragment:oe,dithering_pars_fragment:le,roughnessmap_fragment:ce,roughnessmap_pars_fragment:ue,shadowmap_pars_fragment:he,shadowmap_pars_vertex:de,shadowmap_vertex:fe,shadowmask_pars_fragment:pe,skinbase_vertex:me,skinning_pars_vertex:ge,skinning_vertex:_e,skinnormal_vertex:xe,specularmap_fragment:ve,specularmap_pars_fragment:Me,tonemapping_fragment:Se,tonemapping_pars_fragment:ye,transmission_fragment:be,transmission_pars_fragment:we,uv_pars_fragment:Ee,uv_pars_vertex:Te,uv_vertex:Ae,worldpos_vertex:Ce,background_vert:Le,background_frag:Pe,backgroundCube_vert:Re,backgroundCube_frag:De,cube_vert:Ie,cube_frag:Ue,depth_vert:Ne,depth_frag:Oe,distanceRGBA_vert:Fe,distanceRGBA_frag:ze,equirect_vert:Be,equirect_frag:Ge,linedashed_vert:ke,linedashed_frag:Ve,meshbasic_vert:He,meshbasic_frag:We,meshlambert_vert:qe,meshlambert_frag:Xe,meshmatcap_vert:je,meshmatcap_frag:Ye,meshnormal_vert:Ze,meshnormal_frag:Ke,meshphong_vert:$e,meshphong_frag:Je,meshphysical_vert:Qe,meshphysical_frag:et,meshtoon_vert:tt,meshtoon_frag:nt,points_vert:it,points_frag:rt,shadow_vert:st,shadow_frag:at,sprite_vert:ot,sprite_frag:lt},s0={common:{diffuse:{value:new D0(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new U0},alphaMap:{value:null},alphaMapTransform:{value:new U0},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new U0}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new U0}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new U0}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new U0},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new U0},normalScale:{value:new E0(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new U0},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new U0}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new U0}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new U0}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new D0(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new D0(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new U0}},sprite:{diffuse:{value:new D0(16777215)},opacity:{value:1},center:{value:new E0(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new U0},alphaMap:{value:null},alphaTest:{value:0}}},z9={basic:{uniforms:h9([s0.common,s0.specularmap,s0.envmap,s0.aomap,s0.lightmap,s0.fog]),vertexShader:C0.meshbasic_vert,fragmentShader:C0.meshbasic_frag},lambert:{uniforms:h9([s0.common,s0.specularmap,s0.envmap,s0.aomap,s0.lightmap,s0.emissivemap,s0.bumpmap,s0.normalmap,s0.displacementmap,s0.fog,s0.lights,{emissive:{value:new D0(0)}}]),vertexShader:C0.meshlambert_vert,fragmentShader:C0.meshlambert_frag},phong:{uniforms:h9([s0.common,s0.specularmap,s0.envmap,s0.aomap,s0.lightmap,s0.emissivemap,s0.bumpmap,s0.normalmap,s0.displacementmap,s0.fog,s0.lights,{emissive:{value:new D0(0)},specular:{value:new D0(1118481)},shininess:{value:30}}]),vertexShader:C0.meshphong_vert,fragmentShader:C0.meshphong_frag},standard:{uniforms:h9([s0.common,s0.envmap,s0.aomap,s0.lightmap,s0.emissivemap,s0.bumpmap,s0.normalmap,s0.displacementmap,s0.roughnessmap,s0.metalnessmap,s0.fog,s0.lights,{emissive:{value:new D0(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:C0.meshphysical_vert,fragmentShader:C0.meshphysical_frag},toon:{uniforms:h9([s0.common,s0.aomap,s0.lightmap,s0.emissivemap,s0.bumpmap,s0.normalmap,s0.displacementmap,s0.gradientmap,s0.fog,s0.lights,{emissive:{value:new D0(0)}}]),vertexShader:C0.meshtoon_vert,fragmentShader:C0.meshtoon_frag},matcap:{uniforms:h9([s0.common,s0.bumpmap,s0.normalmap,s0.displacementmap,s0.fog,{matcap:{value:null}}]),vertexShader:C0.meshmatcap_vert,fragmentShader:C0.meshmatcap_frag},points:{uniforms:h9([s0.points,s0.fog]),vertexShader:C0.points_vert,fragmentShader:C0.points_frag},dashed:{uniforms:h9([s0.common,s0.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:C0.linedashed_vert,fragmentShader:C0.linedashed_frag},depth:{uniforms:h9([s0.common,s0.displacementmap]),vertexShader:C0.depth_vert,fragmentShader:C0.depth_frag},normal:{uniforms:h9([s0.common,s0.bumpmap,s0.normalmap,s0.displacementmap,{opacity:{value:1}}]),vertexShader:C0.meshnormal_vert,fragmentShader:C0.meshnormal_frag},sprite:{uniforms:h9([s0.sprite,s0.fog]),vertexShader:C0.sprite_vert,fragmentShader:C0.sprite_frag},background:{uniforms:{uvTransform:{value:new U0},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:C0.background_vert,fragmentShader:C0.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:C0.backgroundCube_vert,fragmentShader:C0.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:C0.cube_vert,fragmentShader:C0.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:C0.equirect_vert,fragmentShader:C0.equirect_frag},distanceRGBA:{uniforms:h9([s0.common,s0.displacementmap,{referencePosition:{value:new P},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:C0.distanceRGBA_vert,fragmentShader:C0.distanceRGBA_frag},shadow:{uniforms:h9([s0.lights,s0.fog,{color:{value:new D0(0)},opacity:{value:1}}]),vertexShader:C0.shadow_vert,fragmentShader:C0.shadow_frag}};z9.physical={uniforms:h9([z9.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new U0},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new U0},clearcoatNormalScale:{value:new E0(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new U0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new U0},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new U0},sheen:{value:0},sheenColor:{value:new D0(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new U0},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new U0},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new U0},transmissionSamplerSize:{value:new E0},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new U0},attenuationDistance:{value:0},attenuationColor:{value:new D0(0)},specularColor:{value:new D0(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new U0},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new U0}}]),vertexShader:C0.meshphysical_vert,fragmentShader:C0.meshphysical_frag};const N2={r:0,b:0,g:0};function ct(a,e,t,n,i,r,o){const s=new D0(0);let c=r===!0?0:1,l,u,d=null,f=0,m=null;function g(p,h){let E=!1,w=h.isScene===!0?h.background:null;w&&w.isTexture&&(w=(h.backgroundBlurriness>0?t:e).get(w));const v=a.xr,y=v.getSession&&v.getSession();y&&y.environmentBlendMode==="additive"&&(w=null),w===null?_(s,c):w&&w.isColor&&(_(w,1),E=!0),(a.autoClear||E)&&a.clear(a.autoClearColor,a.autoClearDepth,a.autoClearStencil),w&&(w.isCubeTexture||w.mapping===W2)?(u===void 0&&(u=new A9(new f2(1,1,1),new v1({name:"BackgroundCubeMaterial",uniforms:j1(z9.backgroundCube.uniforms),vertexShader:z9.backgroundCube.vertexShader,fragmentShader:z9.backgroundCube.fragmentShader,side:p9,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(A,R,N){this.matrixWorld.copyPosition(N.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(u)),u.material.uniforms.envMap.value=w,u.material.uniforms.flipEnvMap.value=w.isCubeTexture&&w.isRenderTargetTexture===!1?-1:1,u.material.uniforms.backgroundBlurriness.value=h.backgroundBlurriness,u.material.uniforms.backgroundIntensity.value=h.backgroundIntensity,u.material.toneMapped=w.encoding!==k0,(d!==w||f!==w.version||m!==a.toneMapping)&&(u.material.needsUpdate=!0,d=w,f=w.version,m=a.toneMapping),u.layers.enableAll(),p.unshift(u,u.geometry,u.material,0,0,null)):w&&w.isTexture&&(l===void 0&&(l=new A9(new j2(2,2),new v1({name:"BackgroundMaterial",uniforms:j1(z9.background.uniforms),vertexShader:z9.background.vertexShader,fragmentShader:z9.background.fragmentShader,side:Z9,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(l)),l.material.uniforms.t2D.value=w,l.material.uniforms.backgroundIntensity.value=h.backgroundIntensity,l.material.toneMapped=w.encoding!==k0,w.matrixAutoUpdate===!0&&w.updateMatrix(),l.material.uniforms.uvTransform.value.copy(w.matrix),(d!==w||f!==w.version||m!==a.toneMapping)&&(l.material.needsUpdate=!0,d=w,f=w.version,m=a.toneMapping),l.layers.enableAll(),p.unshift(l,l.geometry,l.material,0,0,null))}function _(p,h){p.getRGB(N2,Y5(a)),n.buffers.color.setClear(N2.r,N2.g,N2.b,h,o)}return{getClearColor:function(){return s},setClearColor:function(p,h=1){s.set(p),c=h,_(s,c)},getClearAlpha:function(){return c},setClearAlpha:function(p){c=p,_(s,c)},render:g}}function ut(a,e,t,n){const i=a.getParameter(34921),r=n.isWebGL2?null:e.get("OES_vertex_array_object"),o=n.isWebGL2||r!==null,s={},c=p(null);let l=c,u=!1;function d(O,W,J,K,X){let n0=!1;if(o){const e0=_(K,J,W);l!==e0&&(l=e0,m(l.object)),n0=h(O,K,J,X),n0&&E(O,K,J,X)}else{const e0=W.wireframe===!0;(l.geometry!==K.id||l.program!==J.id||l.wireframe!==e0)&&(l.geometry=K.id,l.program=J.id,l.wireframe=e0,n0=!0)}X!==null&&t.update(X,34963),(n0||u)&&(u=!1,N(O,W,J,K),X!==null&&a.bindBuffer(34963,t.get(X).buffer))}function f(){return n.isWebGL2?a.createVertexArray():r.createVertexArrayOES()}function m(O){return n.isWebGL2?a.bindVertexArray(O):r.bindVertexArrayOES(O)}function g(O){return n.isWebGL2?a.deleteVertexArray(O):r.deleteVertexArrayOES(O)}function _(O,W,J){const K=J.wireframe===!0;let X=s[O.id];X===void 0&&(X={},s[O.id]=X);let n0=X[W.id];n0===void 0&&(n0={},X[W.id]=n0);let e0=n0[K];return e0===void 0&&(e0=p(f()),n0[K]=e0),e0}function p(O){const W=[],J=[],K=[];for(let X=0;X<i;X++)W[X]=0,J[X]=0,K[X]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:W,enabledAttributes:J,attributeDivisors:K,object:O,attributes:{},index:null}}function h(O,W,J,K){const X=l.attributes,n0=W.attributes;let e0=0;const M0=J.getAttributes();for(const i0 in M0)if(M0[i0].location>=0){const Z=X[i0];let a0=n0[i0];if(a0===void 0&&(i0==="instanceMatrix"&&O.instanceMatrix&&(a0=O.instanceMatrix),i0==="instanceColor"&&O.instanceColor&&(a0=O.instanceColor)),Z===void 0||Z.attribute!==a0||a0&&Z.data!==a0.data)return!0;e0++}return l.attributesNum!==e0||l.index!==K}function E(O,W,J,K){const X={},n0=W.attributes;let e0=0;const M0=J.getAttributes();for(const i0 in M0)if(M0[i0].location>=0){let Z=n0[i0];Z===void 0&&(i0==="instanceMatrix"&&O.instanceMatrix&&(Z=O.instanceMatrix),i0==="instanceColor"&&O.instanceColor&&(Z=O.instanceColor));const a0={};a0.attribute=Z,Z&&Z.data&&(a0.data=Z.data),X[i0]=a0,e0++}l.attributes=X,l.attributesNum=e0,l.index=K}function w(){const O=l.newAttributes;for(let W=0,J=O.length;W<J;W++)O[W]=0}function v(O){y(O,0)}function y(O,W){const J=l.newAttributes,K=l.enabledAttributes,X=l.attributeDivisors;J[O]=1,K[O]===0&&(a.enableVertexAttribArray(O),K[O]=1),X[O]!==W&&((n.isWebGL2?a:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](O,W),X[O]=W)}function A(){const O=l.newAttributes,W=l.enabledAttributes;for(let J=0,K=W.length;J<K;J++)W[J]!==O[J]&&(a.disableVertexAttribArray(J),W[J]=0)}function R(O,W,J,K,X,n0){n.isWebGL2===!0&&(J===5124||J===5125)?a.vertexAttribIPointer(O,W,J,X,n0):a.vertexAttribPointer(O,W,J,K,X,n0)}function N(O,W,J,K){if(n.isWebGL2===!1&&(O.isInstancedMesh||K.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;w();const X=K.attributes,n0=J.getAttributes(),e0=W.defaultAttributeValues;for(const M0 in n0){const i0=n0[M0];if(i0.location>=0){let k=X[M0];if(k===void 0&&(M0==="instanceMatrix"&&O.instanceMatrix&&(k=O.instanceMatrix),M0==="instanceColor"&&O.instanceColor&&(k=O.instanceColor)),k!==void 0){const Z=k.normalized,a0=k.itemSize,c0=t.get(k);if(c0===void 0)continue;const z=c0.buffer,y0=c0.type,v0=c0.bytesPerElement;if(k.isInterleavedBufferAttribute){const r0=k.data,x0=r0.stride,F0=k.offset;if(r0.isInstancedInterleavedBuffer){for(let m0=0;m0<i0.locationSize;m0++)y(i0.location+m0,r0.meshPerAttribute);O.isInstancedMesh!==!0&&K._maxInstanceCount===void 0&&(K._maxInstanceCount=r0.meshPerAttribute*r0.count)}else for(let m0=0;m0<i0.locationSize;m0++)v(i0.location+m0);a.bindBuffer(34962,z);for(let m0=0;m0<i0.locationSize;m0++)R(i0.location+m0,a0/i0.locationSize,y0,Z,x0*v0,(F0+a0/i0.locationSize*m0)*v0)}else{if(k.isInstancedBufferAttribute){for(let r0=0;r0<i0.locationSize;r0++)y(i0.location+r0,k.meshPerAttribute);O.isInstancedMesh!==!0&&K._maxInstanceCount===void 0&&(K._maxInstanceCount=k.meshPerAttribute*k.count)}else for(let r0=0;r0<i0.locationSize;r0++)v(i0.location+r0);a.bindBuffer(34962,z);for(let r0=0;r0<i0.locationSize;r0++)R(i0.location+r0,a0/i0.locationSize,y0,Z,a0*v0,a0/i0.locationSize*r0*v0)}}else if(e0!==void 0){const Z=e0[M0];if(Z!==void 0)switch(Z.length){case 2:a.vertexAttrib2fv(i0.location,Z);break;case 3:a.vertexAttrib3fv(i0.location,Z);break;case 4:a.vertexAttrib4fv(i0.location,Z);break;default:a.vertexAttrib1fv(i0.location,Z)}}}}A()}function M(){B();for(const O in s){const W=s[O];for(const J in W){const K=W[J];for(const X in K)g(K[X].object),delete K[X];delete W[J]}delete s[O]}}function T(O){if(s[O.id]===void 0)return;const W=s[O.id];for(const J in W){const K=W[J];for(const X in K)g(K[X].object),delete K[X];delete W[J]}delete s[O.id]}function Y(O){for(const W in s){const J=s[W];if(J[O.id]===void 0)continue;const K=J[O.id];for(const X in K)g(K[X].object),delete K[X];delete J[O.id]}}function B(){I(),u=!0,l!==c&&(l=c,m(l.object))}function I(){c.geometry=null,c.program=null,c.wireframe=!1}return{setup:d,reset:B,resetDefaultState:I,dispose:M,releaseStatesOfGeometry:T,releaseStatesOfProgram:Y,initAttributes:w,enableAttribute:v,disableUnusedAttributes:A}}function ht(a,e,t,n){const i=n.isWebGL2;let r;function o(l){r=l}function s(l,u){a.drawArrays(r,l,u),t.update(u,r,1)}function c(l,u,d){if(d===0)return;let f,m;if(i)f=a,m="drawArraysInstanced";else if(f=e.get("ANGLE_instanced_arrays"),m="drawArraysInstancedANGLE",f===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}f[m](r,l,u,d),t.update(u,r,d)}this.setMode=o,this.render=s,this.renderInstances=c}function dt(a,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const R=e.get("EXT_texture_filter_anisotropic");n=a.getParameter(R.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function r(R){if(R==="highp"){if(a.getShaderPrecisionFormat(35633,36338).precision>0&&a.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";R="mediump"}return R==="mediump"&&a.getShaderPrecisionFormat(35633,36337).precision>0&&a.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&a.constructor.name==="WebGL2RenderingContext";let s=t.precision!==void 0?t.precision:"highp";const c=r(s);c!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",c,"instead."),s=c);const l=o||e.has("WEBGL_draw_buffers"),u=t.logarithmicDepthBuffer===!0,d=a.getParameter(34930),f=a.getParameter(35660),m=a.getParameter(3379),g=a.getParameter(34076),_=a.getParameter(34921),p=a.getParameter(36347),h=a.getParameter(36348),E=a.getParameter(36349),w=f>0,v=o||e.has("OES_texture_float"),y=w&&v,A=o?a.getParameter(36183):0;return{isWebGL2:o,drawBuffers:l,getMaxAnisotropy:i,getMaxPrecision:r,precision:s,logarithmicDepthBuffer:u,maxTextures:d,maxVertexTextures:f,maxTextureSize:m,maxCubemapSize:g,maxAttributes:_,maxVertexUniforms:p,maxVaryings:h,maxFragmentUniforms:E,vertexTextures:w,floatFragmentTextures:v,floatVertexTextures:y,maxSamples:A}}function ft(a){const e=this;let t=null,n=0,i=!1,r=!1;const o=new c1,s=new U0,c={value:null,needsUpdate:!1};this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(d,f){const m=d.length!==0||f||n!==0||i;return i=f,n=d.length,m},this.beginShadows=function(){r=!0,u(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(d,f){t=u(d,f,0)},this.setState=function(d,f,m){const g=d.clippingPlanes,_=d.clipIntersection,p=d.clipShadows,h=a.get(d);if(!i||g===null||g.length===0||r&&!p)r?u(null):l();else{const E=r?0:n,w=E*4;let v=h.clippingState||null;c.value=v,v=u(g,f,w,m);for(let y=0;y!==w;++y)v[y]=t[y];h.clippingState=v,this.numIntersection=_?this.numPlanes:0,this.numPlanes+=E}};function l(){c.value!==t&&(c.value=t,c.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function u(d,f,m,g){const _=d!==null?d.length:0;let p=null;if(_!==0){if(p=c.value,g!==!0||p===null){const h=m+_*4,E=f.matrixWorldInverse;s.getNormalMatrix(E),(p===null||p.length<h)&&(p=new Float32Array(h));for(let w=0,v=m;w!==_;++w,v+=4)o.copy(d[w]).applyMatrix4(E,s),o.normal.toArray(p,v),p[v+3]=o.constant}c.value=p,c.needsUpdate=!0}return e.numPlanes=_,e.numIntersection=0,p}}function pt(a){let e=new WeakMap;function t(o,s){return s===O8?o.mapping=W1:s===F8&&(o.mapping=q1),o}function n(o){if(o&&o.isTexture&&o.isRenderTargetTexture===!1){const s=o.mapping;if(s===O8||s===F8)if(e.has(o)){const c=e.get(o).texture;return t(c,o.mapping)}else{const c=o.image;if(c&&c.height>0){const l=new P6(c.height/2);return l.fromEquirectangularTexture(a,o),e.set(o,l),o.addEventListener("dispose",i),t(l.texture,o.mapping)}else return null}}return o}function i(o){const s=o.target;s.removeEventListener("dispose",i);const c=e.get(s);c!==void 0&&(e.delete(s),c.dispose())}function r(){e=new WeakMap}return{get:n,dispose:r}}class mt extends Z5{constructor(e=-1,t=1,n=1,i=-1,r=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=r,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,r,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-e,o=n+e,s=i+t,c=i-t;if(this.view!==null&&this.view.enabled){const l=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=l*this.view.offsetX,o=r+l*this.view.width,s-=u*this.view.offsetY,c=s-u*this.view.height}this.projectionMatrix.makeOrthographic(r,o,s,c,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const G1=4,X7=[.125,.215,.35,.446,.526,.582],h1=20,E8=new mt,j7=new D0;let T8=null;const u1=(1+Math.sqrt(5))/2,z1=1/u1,Y7=[new P(1,1,1),new P(-1,1,1),new P(1,1,-1),new P(-1,1,-1),new P(0,u1,z1),new P(0,u1,-z1),new P(z1,0,u1),new P(-z1,0,u1),new P(u1,z1,0),new P(-u1,z1,0)];class Z7{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){T8=this._renderer.getRenderTarget(),this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(e,n,i,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=J7(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=$7(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(T8),e.scissorTest=!1,O2(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===W1||e.mapping===q1?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),T8=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:T9,minFilter:T9,generateMipmaps:!1,type:o2,format:U9,encoding:g1,depthBuffer:!1},i=K7(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=K7(e,t,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=gt(r)),this._blurMaterial=_t(r,e,t)}return i}_compileMaterial(e){const t=new A9(this._lodPlanes[0],e);this._renderer.compile(t,E8)}_sceneToCubeUV(e,t,n,i){const s=new S9(90,1,t,n),c=[1,-1,1,1,1,1],l=[1,1,1,-1,-1,-1],u=this._renderer,d=u.autoClear,f=u.toneMapping;u.getClearColor(j7),u.toneMapping=Y9,u.autoClear=!1;const m=new X2({name:"PMREM.Background",side:p9,depthWrite:!1,depthTest:!1}),g=new A9(new f2,m);let _=!1;const p=e.background;p?p.isColor&&(m.color.copy(p),e.background=null,_=!0):(m.color.copy(j7),_=!0);for(let h=0;h<6;h++){const E=h%3;E===0?(s.up.set(0,c[h],0),s.lookAt(l[h],0,0)):E===1?(s.up.set(0,0,c[h]),s.lookAt(0,l[h],0)):(s.up.set(0,c[h],0),s.lookAt(0,0,l[h]));const w=this._cubeSize;O2(i,E*w,h>2?w:0,w,w),u.setRenderTarget(i),_&&u.render(g,s),u.render(e,s)}g.geometry.dispose(),g.material.dispose(),u.toneMapping=f,u.autoClear=d,e.background=p}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===W1||e.mapping===q1;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=J7()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=$7());const r=i?this._cubemapMaterial:this._equirectMaterial,o=new A9(this._lodPlanes[0],r),s=r.uniforms;s.envMap.value=e;const c=this._cubeSize;O2(t,0,0,3*c,2*c),n.setRenderTarget(t),n.render(o,E8)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const r=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),o=Y7[(i-1)%Y7.length];this._blur(e,i-1,i,r,o)}t.autoClear=n}_blur(e,t,n,i,r){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,n,i,"latitudinal",r),this._halfBlur(o,e,n,n,i,"longitudinal",r)}_halfBlur(e,t,n,i,r,o,s){const c=this._renderer,l=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,d=new A9(this._lodPlanes[i],l),f=l.uniforms,m=this._sizeLods[n]-1,g=isFinite(r)?Math.PI/(2*m):2*Math.PI/(2*h1-1),_=r/g,p=isFinite(r)?1+Math.floor(u*_):h1;p>h1&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${p} samples when the maximum is set to ${h1}`);const h=[];let E=0;for(let R=0;R<h1;++R){const N=R/_,M=Math.exp(-N*N/2);h.push(M),R===0?E+=M:R<p&&(E+=2*M)}for(let R=0;R<h.length;R++)h[R]=h[R]/E;f.envMap.value=e.texture,f.samples.value=p,f.weights.value=h,f.latitudinal.value=o==="latitudinal",s&&(f.poleAxis.value=s);const{_lodMax:w}=this;f.dTheta.value=g,f.mipInt.value=w-n;const v=this._sizeLods[i],y=3*v*(i>w-G1?i-w+G1:0),A=4*(this._cubeSize-v);O2(t,y,A,3*v,2*v),c.setRenderTarget(t),c.render(d,E8)}}function gt(a){const e=[],t=[],n=[];let i=a;const r=a-G1+1+X7.length;for(let o=0;o<r;o++){const s=Math.pow(2,i);t.push(s);let c=1/s;o>a-G1?c=X7[o-a+G1-1]:o===0&&(c=0),n.push(c);const l=1/(s-2),u=-l,d=1+l,f=[u,u,d,u,d,d,u,u,d,d,u,d],m=6,g=6,_=3,p=2,h=1,E=new Float32Array(_*g*m),w=new Float32Array(p*g*m),v=new Float32Array(h*g*m);for(let A=0;A<m;A++){const R=A%3*2/3-1,N=A>2?0:-1,M=[R,N,0,R+2/3,N,0,R+2/3,N+1,0,R,N,0,R+2/3,N+1,0,R,N+1,0];E.set(M,_*g*A),w.set(f,p*g*A);const T=[A,A,A,A,A,A];v.set(T,h*g*A)}const y=new y9;y.setAttribute("position",new B9(E,_)),y.setAttribute("uv",new B9(w,p)),y.setAttribute("faceIndex",new B9(v,h)),e.push(y),i>G1&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function K7(a,e,t){const n=new _1(a,e,t);return n.texture.mapping=W2,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function O2(a,e,t,n,i){a.viewport.set(e,t,n,i),a.scissor.set(e,t,n,i)}function _t(a,e,t){const n=new Float32Array(h1),i=new P(0,1,0);return new v1({name:"SphericalGaussianBlur",defines:{n:h1,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${a}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Y8(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:n1,depthTest:!1,depthWrite:!1})}function $7(){return new v1({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Y8(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:n1,depthTest:!1,depthWrite:!1})}function J7(){return new v1({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Y8(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:n1,depthTest:!1,depthWrite:!1})}function Y8(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function xt(a){let e=new WeakMap,t=null;function n(s){if(s&&s.isTexture){const c=s.mapping,l=c===O8||c===F8,u=c===W1||c===q1;if(l||u)if(s.isRenderTargetTexture&&s.needsPMREMUpdate===!0){s.needsPMREMUpdate=!1;let d=e.get(s);return t===null&&(t=new Z7(a)),d=l?t.fromEquirectangular(s,d):t.fromCubemap(s,d),e.set(s,d),d.texture}else{if(e.has(s))return e.get(s).texture;{const d=s.image;if(l&&d&&d.height>0||u&&d&&i(d)){t===null&&(t=new Z7(a));const f=l?t.fromEquirectangular(s):t.fromCubemap(s);return e.set(s,f),s.addEventListener("dispose",r),f.texture}else return null}}}return s}function i(s){let c=0;const l=6;for(let u=0;u<l;u++)s[u]!==void 0&&c++;return c===l}function r(s){const c=s.target;c.removeEventListener("dispose",r);const l=e.get(c);l!==void 0&&(e.delete(c),l.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:o}}function vt(a){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=a.getExtension("WEBGL_depth_texture")||a.getExtension("MOZ_WEBGL_depth_texture")||a.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=a.getExtension("EXT_texture_filter_anisotropic")||a.getExtension("MOZ_EXT_texture_filter_anisotropic")||a.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=a.getExtension("WEBGL_compressed_texture_s3tc")||a.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=a.getExtension("WEBGL_compressed_texture_pvrtc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=a.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function Mt(a,e,t,n){const i={},r=new WeakMap;function o(d){const f=d.target;f.index!==null&&e.remove(f.index);for(const g in f.attributes)e.remove(f.attributes[g]);f.removeEventListener("dispose",o),delete i[f.id];const m=r.get(f);m&&(e.remove(m),r.delete(f)),n.releaseStatesOfGeometry(f),f.isInstancedBufferGeometry===!0&&delete f._maxInstanceCount,t.memory.geometries--}function s(d,f){return i[f.id]===!0||(f.addEventListener("dispose",o),i[f.id]=!0,t.memory.geometries++),f}function c(d){const f=d.attributes;for(const g in f)e.update(f[g],34962);const m=d.morphAttributes;for(const g in m){const _=m[g];for(let p=0,h=_.length;p<h;p++)e.update(_[p],34962)}}function l(d){const f=[],m=d.index,g=d.attributes.position;let _=0;if(m!==null){const E=m.array;_=m.version;for(let w=0,v=E.length;w<v;w+=3){const y=E[w+0],A=E[w+1],R=E[w+2];f.push(y,A,A,R,R,y)}}else{const E=g.array;_=g.version;for(let w=0,v=E.length/3-1;w<v;w+=3){const y=w+0,A=w+1,R=w+2;f.push(y,A,A,R,R,y)}}const p=new(G5(f)?j5:X5)(f,1);p.version=_;const h=r.get(d);h&&e.remove(h),r.set(d,p)}function u(d){const f=r.get(d);if(f){const m=d.index;m!==null&&f.version<m.version&&l(d)}else l(d);return r.get(d)}return{get:s,update:c,getWireframeAttribute:u}}function St(a,e,t,n){const i=n.isWebGL2;let r;function o(f){r=f}let s,c;function l(f){s=f.type,c=f.bytesPerElement}function u(f,m){a.drawElements(r,m,s,f*c),t.update(m,r,1)}function d(f,m,g){if(g===0)return;let _,p;if(i)_=a,p="drawElementsInstanced";else if(_=e.get("ANGLE_instanced_arrays"),p="drawElementsInstancedANGLE",_===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}_[p](r,m,s,f*c,g),t.update(m,r,g)}this.setMode=o,this.setIndex=l,this.render=u,this.renderInstances=d}function yt(a){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,o,s){switch(t.calls++,o){case 4:t.triangles+=s*(r/3);break;case 1:t.lines+=s*(r/2);break;case 3:t.lines+=s*(r-1);break;case 2:t.lines+=s*r;break;case 0:t.points+=s*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function i(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function bt(a,e){return a[0]-e[0]}function wt(a,e){return Math.abs(e[1])-Math.abs(a[1])}function Et(a,e,t){const n={},i=new Float32Array(8),r=new WeakMap,o=new H0,s=[];for(let l=0;l<8;l++)s[l]=[l,0];function c(l,u,d){const f=l.morphTargetInfluences;if(e.isWebGL2===!0){const g=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,_=g!==void 0?g.length:0;let p=r.get(u);if(p===void 0||p.count!==_){let W=function(){I.dispose(),r.delete(u),u.removeEventListener("dispose",W)};var m=W;p!==void 0&&p.texture.dispose();const w=u.morphAttributes.position!==void 0,v=u.morphAttributes.normal!==void 0,y=u.morphAttributes.color!==void 0,A=u.morphAttributes.position||[],R=u.morphAttributes.normal||[],N=u.morphAttributes.color||[];let M=0;w===!0&&(M=1),v===!0&&(M=2),y===!0&&(M=3);let T=u.attributes.position.count*M,Y=1;T>e.maxTextureSize&&(Y=Math.ceil(T/e.maxTextureSize),T=e.maxTextureSize);const B=new Float32Array(T*Y*4*_),I=new H5(B,T,Y,_);I.type=f1,I.needsUpdate=!0;const O=M*4;for(let J=0;J<_;J++){const K=A[J],X=R[J],n0=N[J],e0=T*Y*4*J;for(let M0=0;M0<K.count;M0++){const i0=M0*O;w===!0&&(o.fromBufferAttribute(K,M0),B[e0+i0+0]=o.x,B[e0+i0+1]=o.y,B[e0+i0+2]=o.z,B[e0+i0+3]=0),v===!0&&(o.fromBufferAttribute(X,M0),B[e0+i0+4]=o.x,B[e0+i0+5]=o.y,B[e0+i0+6]=o.z,B[e0+i0+7]=0),y===!0&&(o.fromBufferAttribute(n0,M0),B[e0+i0+8]=o.x,B[e0+i0+9]=o.y,B[e0+i0+10]=o.z,B[e0+i0+11]=n0.itemSize===4?o.w:1)}}p={count:_,texture:I,size:new E0(T,Y)},r.set(u,p),u.addEventListener("dispose",W)}let h=0;for(let w=0;w<f.length;w++)h+=f[w];const E=u.morphTargetsRelative?1:1-h;d.getUniforms().setValue(a,"morphTargetBaseInfluence",E),d.getUniforms().setValue(a,"morphTargetInfluences",f),d.getUniforms().setValue(a,"morphTargetsTexture",p.texture,t),d.getUniforms().setValue(a,"morphTargetsTextureSize",p.size)}else{const g=f===void 0?0:f.length;let _=n[u.id];if(_===void 0||_.length!==g){_=[];for(let v=0;v<g;v++)_[v]=[v,0];n[u.id]=_}for(let v=0;v<g;v++){const y=_[v];y[0]=v,y[1]=f[v]}_.sort(wt);for(let v=0;v<8;v++)v<g&&_[v][1]?(s[v][0]=_[v][0],s[v][1]=_[v][1]):(s[v][0]=Number.MAX_SAFE_INTEGER,s[v][1]=0);s.sort(bt);const p=u.morphAttributes.position,h=u.morphAttributes.normal;let E=0;for(let v=0;v<8;v++){const y=s[v],A=y[0],R=y[1];A!==Number.MAX_SAFE_INTEGER&&R?(p&&u.getAttribute("morphTarget"+v)!==p[A]&&u.setAttribute("morphTarget"+v,p[A]),h&&u.getAttribute("morphNormal"+v)!==h[A]&&u.setAttribute("morphNormal"+v,h[A]),i[v]=R,E+=R):(p&&u.hasAttribute("morphTarget"+v)===!0&&u.deleteAttribute("morphTarget"+v),h&&u.hasAttribute("morphNormal"+v)===!0&&u.deleteAttribute("morphNormal"+v),i[v]=0)}const w=u.morphTargetsRelative?1:1-E;d.getUniforms().setValue(a,"morphTargetBaseInfluence",w),d.getUniforms().setValue(a,"morphTargetInfluences",i)}}return{update:c}}function Tt(a,e,t,n){let i=new WeakMap;function r(c){const l=n.render.frame,u=c.geometry,d=e.get(c,u);return i.get(d)!==l&&(e.update(d),i.set(d,l)),c.isInstancedMesh&&(c.hasEventListener("dispose",s)===!1&&c.addEventListener("dispose",s),t.update(c.instanceMatrix,34962),c.instanceColor!==null&&t.update(c.instanceColor,34962)),d}function o(){i=new WeakMap}function s(c){const l=c.target;l.removeEventListener("dispose",s),t.remove(l.instanceMatrix),l.instanceColor!==null&&t.remove(l.instanceColor)}return{update:r,dispose:o}}const J5=new m9,Q5=new H5,e3=new p6,t3=new K5,Q7=[],e5=[],t5=new Float32Array(16),n5=new Float32Array(9),i5=new Float32Array(4);function Y1(a,e,t){const n=a[0];if(n<=0||n>0)return a;const i=e*t;let r=Q7[i];if(r===void 0&&(r=new Float32Array(i),Q7[i]=r),e!==0){n.toArray(r,0);for(let o=1,s=0;o!==e;++o)s+=t,a[o].toArray(r,s)}return r}function t9(a,e){if(a.length!==e.length)return!1;for(let t=0,n=a.length;t<n;t++)if(a[t]!==e[t])return!1;return!0}function n9(a,e){for(let t=0,n=e.length;t<n;t++)a[t]=e[t]}function Y2(a,e){let t=e5[e];t===void 0&&(t=new Int32Array(e),e5[e]=t);for(let n=0;n!==e;++n)t[n]=a.allocateTextureUnit();return t}function At(a,e){const t=this.cache;t[0]!==e&&(a.uniform1f(this.addr,e),t[0]=e)}function Ct(a,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(a.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(t9(t,e))return;a.uniform2fv(this.addr,e),n9(t,e)}}function Lt(a,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(a.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(a.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(t9(t,e))return;a.uniform3fv(this.addr,e),n9(t,e)}}function Pt(a,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(a.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(t9(t,e))return;a.uniform4fv(this.addr,e),n9(t,e)}}function Rt(a,e){const t=this.cache,n=e.elements;if(n===void 0){if(t9(t,e))return;a.uniformMatrix2fv(this.addr,!1,e),n9(t,e)}else{if(t9(t,n))return;i5.set(n),a.uniformMatrix2fv(this.addr,!1,i5),n9(t,n)}}function Dt(a,e){const t=this.cache,n=e.elements;if(n===void 0){if(t9(t,e))return;a.uniformMatrix3fv(this.addr,!1,e),n9(t,e)}else{if(t9(t,n))return;n5.set(n),a.uniformMatrix3fv(this.addr,!1,n5),n9(t,n)}}function It(a,e){const t=this.cache,n=e.elements;if(n===void 0){if(t9(t,e))return;a.uniformMatrix4fv(this.addr,!1,e),n9(t,e)}else{if(t9(t,n))return;t5.set(n),a.uniformMatrix4fv(this.addr,!1,t5),n9(t,n)}}function Ut(a,e){const t=this.cache;t[0]!==e&&(a.uniform1i(this.addr,e),t[0]=e)}function Nt(a,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(a.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(t9(t,e))return;a.uniform2iv(this.addr,e),n9(t,e)}}function Ot(a,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(a.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(t9(t,e))return;a.uniform3iv(this.addr,e),n9(t,e)}}function Ft(a,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(a.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(t9(t,e))return;a.uniform4iv(this.addr,e),n9(t,e)}}function zt(a,e){const t=this.cache;t[0]!==e&&(a.uniform1ui(this.addr,e),t[0]=e)}function Bt(a,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(a.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(t9(t,e))return;a.uniform2uiv(this.addr,e),n9(t,e)}}function Gt(a,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(a.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(t9(t,e))return;a.uniform3uiv(this.addr,e),n9(t,e)}}function kt(a,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(a.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(t9(t,e))return;a.uniform4uiv(this.addr,e),n9(t,e)}}function Vt(a,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(a.uniform1i(this.addr,i),n[0]=i),t.setTexture2D(e||J5,i)}function Ht(a,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(a.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||e3,i)}function Wt(a,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(a.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||t3,i)}function qt(a,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(a.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||Q5,i)}function Xt(a){switch(a){case 5126:return At;case 35664:return Ct;case 35665:return Lt;case 35666:return Pt;case 35674:return Rt;case 35675:return Dt;case 35676:return It;case 5124:case 35670:return Ut;case 35667:case 35671:return Nt;case 35668:case 35672:return Ot;case 35669:case 35673:return Ft;case 5125:return zt;case 36294:return Bt;case 36295:return Gt;case 36296:return kt;case 35678:case 36198:case 36298:case 36306:case 35682:return Vt;case 35679:case 36299:case 36307:return Ht;case 35680:case 36300:case 36308:case 36293:return Wt;case 36289:case 36303:case 36311:case 36292:return qt}}function jt(a,e){a.uniform1fv(this.addr,e)}function Yt(a,e){const t=Y1(e,this.size,2);a.uniform2fv(this.addr,t)}function Zt(a,e){const t=Y1(e,this.size,3);a.uniform3fv(this.addr,t)}function Kt(a,e){const t=Y1(e,this.size,4);a.uniform4fv(this.addr,t)}function $t(a,e){const t=Y1(e,this.size,4);a.uniformMatrix2fv(this.addr,!1,t)}function Jt(a,e){const t=Y1(e,this.size,9);a.uniformMatrix3fv(this.addr,!1,t)}function Qt(a,e){const t=Y1(e,this.size,16);a.uniformMatrix4fv(this.addr,!1,t)}function en(a,e){a.uniform1iv(this.addr,e)}function tn(a,e){a.uniform2iv(this.addr,e)}function nn(a,e){a.uniform3iv(this.addr,e)}function rn(a,e){a.uniform4iv(this.addr,e)}function sn(a,e){a.uniform1uiv(this.addr,e)}function an(a,e){a.uniform2uiv(this.addr,e)}function on(a,e){a.uniform3uiv(this.addr,e)}function ln(a,e){a.uniform4uiv(this.addr,e)}function cn(a,e,t){const n=this.cache,i=e.length,r=Y2(t,i);t9(n,r)||(a.uniform1iv(this.addr,r),n9(n,r));for(let o=0;o!==i;++o)t.setTexture2D(e[o]||J5,r[o])}function un(a,e,t){const n=this.cache,i=e.length,r=Y2(t,i);t9(n,r)||(a.uniform1iv(this.addr,r),n9(n,r));for(let o=0;o!==i;++o)t.setTexture3D(e[o]||e3,r[o])}function hn(a,e,t){const n=this.cache,i=e.length,r=Y2(t,i);t9(n,r)||(a.uniform1iv(this.addr,r),n9(n,r));for(let o=0;o!==i;++o)t.setTextureCube(e[o]||t3,r[o])}function dn(a,e,t){const n=this.cache,i=e.length,r=Y2(t,i);t9(n,r)||(a.uniform1iv(this.addr,r),n9(n,r));for(let o=0;o!==i;++o)t.setTexture2DArray(e[o]||Q5,r[o])}function fn(a){switch(a){case 5126:return jt;case 35664:return Yt;case 35665:return Zt;case 35666:return Kt;case 35674:return $t;case 35675:return Jt;case 35676:return Qt;case 5124:case 35670:return en;case 35667:case 35671:return tn;case 35668:case 35672:return nn;case 35669:case 35673:return rn;case 5125:return sn;case 36294:return an;case 36295:return on;case 36296:return ln;case 35678:case 36198:case 36298:case 36306:case 35682:return cn;case 35679:case 36299:case 36307:return un;case 35680:case 36300:case 36308:case 36293:return hn;case 36289:case 36303:case 36311:case 36292:return dn}}class pn{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=Xt(t.type)}}class mn{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=fn(t.type)}}class gn{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let r=0,o=i.length;r!==o;++r){const s=i[r];s.setValue(e,t[s.id],n)}}}const A8=/(\w+)(\])?(\[|\.)?/g;function r5(a,e){a.seq.push(e),a.map[e.id]=e}function _n(a,e,t){const n=a.name,i=n.length;for(A8.lastIndex=0;;){const r=A8.exec(n),o=A8.lastIndex;let s=r[1];const c=r[2]==="]",l=r[3];if(c&&(s=s|0),l===void 0||l==="["&&o+2===i){r5(t,l===void 0?new pn(s,a,e):new mn(s,a,e));break}else{let d=t.map[s];d===void 0&&(d=new gn(s),r5(t,d)),t=d}}}class k2{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,35718);for(let i=0;i<n;++i){const r=e.getActiveUniform(t,i),o=e.getUniformLocation(t,r.name);_n(r,o,this)}}setValue(e,t,n,i){const r=this.map[t];r!==void 0&&r.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let r=0,o=t.length;r!==o;++r){const s=t[r],c=n[s.id];c.needsUpdate!==!1&&s.setValue(e,c.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,r=e.length;i!==r;++i){const o=e[i];o.id in t&&n.push(o)}return n}}function s5(a,e,t){const n=a.createShader(e);return a.shaderSource(n,t),a.compileShader(n),n}let xn=0;function vn(a,e){const t=a.split(`
`),n=[],i=Math.max(e-6,0),r=Math.min(e+6,t.length);for(let o=i;o<r;o++){const s=o+1;n.push(`${s===e?">":" "} ${s}: ${t[o]}`)}return n.join(`
`)}function Mn(a){switch(a){case g1:return["Linear","( value )"];case k0:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",a),["Linear","( value )"]}}function a5(a,e,t){const n=a.getShaderParameter(e,35713),i=a.getShaderInfoLog(e).trim();if(n&&i==="")return"";const r=/ERROR: 0:(\d+)/.exec(i);if(r){const o=parseInt(r[1]);return t.toUpperCase()+`

`+i+`

`+vn(a.getShaderSource(e),o)}else return i}function Sn(a,e){const t=Mn(e);return"vec4 "+a+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function yn(a,e){let t;switch(e){case U3:t="Linear";break;case N3:t="Reinhard";break;case O3:t="OptimizedCineon";break;case F3:t="ACESFilmic";break;case z3:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+a+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function bn(a){return[a.extensionDerivatives||a.envMapCubeUVHeight||a.bumpMap||a.normalMapTangentSpace||a.clearcoatNormalMap||a.flatShading||a.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(a.extensionFragDepth||a.logarithmicDepthBuffer)&&a.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",a.extensionDrawBuffers&&a.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(a.extensionShaderTextureLOD||a.envMap||a.transmission)&&a.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(n2).join(`
`)}function wn(a){const e=[];for(const t in a){const n=a[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function En(a,e){const t={},n=a.getProgramParameter(e,35721);for(let i=0;i<n;i++){const r=a.getActiveAttrib(e,i),o=r.name;let s=1;r.type===35674&&(s=2),r.type===35675&&(s=3),r.type===35676&&(s=4),t[o]={type:r.type,location:a.getAttribLocation(e,o),locationSize:s}}return t}function n2(a){return a!==""}function o5(a,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return a.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function l5(a,e){return a.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const Tn=/^[ \t]*#include +<([\w\d./]+)>/gm;function k8(a){return a.replace(Tn,An)}function An(a,e){const t=C0[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return k8(t)}const Cn=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function c5(a){return a.replace(Cn,Ln)}function Ln(a,e,t,n){let i="";for(let r=parseInt(e);r<parseInt(t);r++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return i}function u5(a){let e="precision "+a.precision+` float;
precision `+a.precision+" int;";return a.precision==="highp"?e+=`
#define HIGH_PRECISION`:a.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:a.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function Pn(a){let e="SHADOWMAP_TYPE_BASIC";return a.shadowMapType===I5?e="SHADOWMAP_TYPE_PCF":a.shadowMapType===d3?e="SHADOWMAP_TYPE_PCF_SOFT":a.shadowMapType===t2&&(e="SHADOWMAP_TYPE_VSM"),e}function Rn(a){let e="ENVMAP_TYPE_CUBE";if(a.envMap)switch(a.envMapMode){case W1:case q1:e="ENVMAP_TYPE_CUBE";break;case W2:e="ENVMAP_TYPE_CUBE_UV";break}return e}function Dn(a){let e="ENVMAP_MODE_REFLECTION";if(a.envMap)switch(a.envMapMode){case q1:e="ENVMAP_MODE_REFRACTION";break}return e}function In(a){let e="ENVMAP_BLENDING_NONE";if(a.envMap)switch(a.combine){case q8:e="ENVMAP_BLENDING_MULTIPLY";break;case D3:e="ENVMAP_BLENDING_MIX";break;case I3:e="ENVMAP_BLENDING_ADD";break}return e}function Un(a){const e=a.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function Nn(a,e,t,n){const i=a.getContext(),r=t.defines;let o=t.vertexShader,s=t.fragmentShader;const c=Pn(t),l=Rn(t),u=Dn(t),d=In(t),f=Un(t),m=t.isWebGL2?"":bn(t),g=wn(r),_=i.createProgram();let p,h,E=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(p=[g].filter(n2).join(`
`),p.length>0&&(p+=`
`),h=[m,g].filter(n2).join(`
`),h.length>0&&(h+=`
`)):(p=[u5(t),"#define SHADER_NAME "+t.shaderName,g,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs2?"#define USE_UV2":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+c:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(n2).join(`
`),h=[m,u5(t),"#define SHADER_NAME "+t.shaderName,g,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+l:"",t.envMap?"#define "+u:"",t.envMap?"#define "+d:"",f?"#define CUBEUV_TEXEL_WIDTH "+f.texelWidth:"",f?"#define CUBEUV_TEXEL_HEIGHT "+f.texelHeight:"",f?"#define CUBEUV_MAX_MIP "+f.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs2?"#define USE_UV2":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+c:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Y9?"#define TONE_MAPPING":"",t.toneMapping!==Y9?C0.tonemapping_pars_fragment:"",t.toneMapping!==Y9?yn("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",C0.encodings_pars_fragment,Sn("linearToOutputTexel",t.outputEncoding),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(n2).join(`
`)),o=k8(o),o=o5(o,t),o=l5(o,t),s=k8(s),s=o5(s,t),s=l5(s,t),o=c5(o),s=c5(s),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(E=`#version 300 es
`,p=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+p,h=["#define varying in",t.glslVersion===P7?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===P7?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+h);const w=E+p+o,v=E+h+s,y=s5(i,35633,w),A=s5(i,35632,v);if(i.attachShader(_,y),i.attachShader(_,A),t.index0AttributeName!==void 0?i.bindAttribLocation(_,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(_,0,"position"),i.linkProgram(_),a.debug.checkShaderErrors){const M=i.getProgramInfoLog(_).trim(),T=i.getShaderInfoLog(y).trim(),Y=i.getShaderInfoLog(A).trim();let B=!0,I=!0;if(i.getProgramParameter(_,35714)===!1)if(B=!1,typeof a.debug.onShaderError=="function")a.debug.onShaderError(i,_,y,A);else{const O=a5(i,y,"vertex"),W=a5(i,A,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(_,35715)+`

Program Info Log: `+M+`
`+O+`
`+W)}else M!==""?console.warn("THREE.WebGLProgram: Program Info Log:",M):(T===""||Y==="")&&(I=!1);I&&(this.diagnostics={runnable:B,programLog:M,vertexShader:{log:T,prefix:p},fragmentShader:{log:Y,prefix:h}})}i.deleteShader(y),i.deleteShader(A);let R;this.getUniforms=function(){return R===void 0&&(R=new k2(i,_)),R};let N;return this.getAttributes=function(){return N===void 0&&(N=En(i,_)),N},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(_),this.program=void 0},this.name=t.shaderName,this.id=xn++,this.cacheKey=e,this.usedTimes=1,this.program=_,this.vertexShader=y,this.fragmentShader=A,this}let On=0;class Fn{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),r=this._getShaderStage(n),o=this._getShaderCacheForMaterial(e);return o.has(i)===!1&&(o.add(i),i.usedTimes++),o.has(r)===!1&&(o.add(r),r.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new zn(e),t.set(e,n)),n}}class zn{constructor(e){this.id=On++,this.code=e,this.usedTimes=0}}function Bn(a,e,t,n,i,r,o){const s=new W5,c=new Fn,l=[],u=i.isWebGL2,d=i.logarithmicDepthBuffer,f=i.vertexTextures;let m=i.precision;const g={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function _(M){return M===1?"uv2":"uv"}function p(M,T,Y,B,I){const O=B.fog,W=I.geometry,J=M.isMeshStandardMaterial?B.environment:null,K=(M.isMeshStandardMaterial?t:e).get(M.envMap||J),X=K&&K.mapping===W2?K.image.height:null,n0=g[M.type];M.precision!==null&&(m=i.getMaxPrecision(M.precision),m!==M.precision&&console.warn("THREE.WebGLProgram.getParameters:",M.precision,"not supported, using",m,"instead."));const e0=W.morphAttributes.position||W.morphAttributes.normal||W.morphAttributes.color,M0=e0!==void 0?e0.length:0;let i0=0;W.morphAttributes.position!==void 0&&(i0=1),W.morphAttributes.normal!==void 0&&(i0=2),W.morphAttributes.color!==void 0&&(i0=3);let k,Z,a0,c0;if(n0){const h0=z9[n0];k=h0.vertexShader,Z=h0.fragmentShader}else k=M.vertexShader,Z=M.fragmentShader,c.update(M),a0=c.getVertexShaderID(M),c0=c.getFragmentShaderID(M);const z=a.getRenderTarget(),y0=I.isInstancedMesh===!0,v0=!!M.map,r0=!!M.matcap,x0=!!K,F0=!!M.aoMap,m0=!!M.lightMap,T0=!!M.bumpMap,X0=!!M.normalMap,W0=!!M.displacementMap,$0=!!M.emissiveMap,Y0=!!M.metalnessMap,O0=!!M.roughnessMap,G0=M.clearcoat>0,s9=M.iridescence>0,b=M.sheen>0,x=M.transmission>0,G=G0&&!!M.clearcoatMap,$=G0&&!!M.clearcoatNormalMap,t0=G0&&!!M.clearcoatRoughnessMap,o0=s9&&!!M.iridescenceMap,C=s9&&!!M.iridescenceThicknessMap,j=b&&!!M.sheenColorMap,F=b&&!!M.sheenRoughnessMap,l0=!!M.specularMap,d0=!!M.specularColorMap,p0=!!M.specularIntensityMap,u0=x&&!!M.transmissionMap,f0=x&&!!M.thicknessMap,b0=!!M.gradientMap,L0=!!M.alphaMap,Z0=M.alphaTest>0,L=!!M.extensions,H=!!W.attributes.uv2;return{isWebGL2:u,shaderID:n0,shaderName:M.type,vertexShader:k,fragmentShader:Z,defines:M.defines,customVertexShaderID:a0,customFragmentShaderID:c0,isRawShaderMaterial:M.isRawShaderMaterial===!0,glslVersion:M.glslVersion,precision:m,instancing:y0,instancingColor:y0&&I.instanceColor!==null,supportsVertexTextures:f,outputEncoding:z===null?a.outputEncoding:z.isXRRenderTarget===!0?z.texture.encoding:g1,map:v0,matcap:r0,envMap:x0,envMapMode:x0&&K.mapping,envMapCubeUVHeight:X,aoMap:F0,lightMap:m0,bumpMap:T0,normalMap:X0,displacementMap:f&&W0,emissiveMap:$0,normalMapObjectSpace:X0&&M.normalMapType===i6,normalMapTangentSpace:X0&&M.normalMapType===z5,decodeVideoTexture:v0&&M.map.isVideoTexture===!0&&M.map.encoding===k0,metalnessMap:Y0,roughnessMap:O0,clearcoat:G0,clearcoatMap:G,clearcoatNormalMap:$,clearcoatRoughnessMap:t0,iridescence:s9,iridescenceMap:o0,iridescenceThicknessMap:C,sheen:b,sheenColorMap:j,sheenRoughnessMap:F,specularMap:l0,specularColorMap:d0,specularIntensityMap:p0,transmission:x,transmissionMap:u0,thicknessMap:f0,gradientMap:b0,opaque:M.transparent===!1&&M.blending===k1,alphaMap:L0,alphaTest:Z0,combine:M.combine,mapUv:v0&&_(M.map.channel),aoMapUv:F0&&_(M.aoMap.channel),lightMapUv:m0&&_(M.lightMap.channel),bumpMapUv:T0&&_(M.bumpMap.channel),normalMapUv:X0&&_(M.normalMap.channel),displacementMapUv:W0&&_(M.displacementMap.channel),emissiveMapUv:$0&&_(M.emissiveMap.channel),metalnessMapUv:Y0&&_(M.metalnessMap.channel),roughnessMapUv:O0&&_(M.roughnessMap.channel),clearcoatMapUv:G&&_(M.clearcoatMap.channel),clearcoatNormalMapUv:$&&_(M.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:t0&&_(M.clearcoatRoughnessMap.channel),iridescenceMapUv:o0&&_(M.iridescenceMap.channel),iridescenceThicknessMapUv:C&&_(M.iridescenceThicknessMap.channel),sheenColorMapUv:j&&_(M.sheenColorMap.channel),sheenRoughnessMapUv:F&&_(M.sheenRoughnessMap.channel),specularMapUv:l0&&_(M.specularMap.channel),specularColorMapUv:d0&&_(M.specularColorMap.channel),specularIntensityMapUv:p0&&_(M.specularIntensityMap.channel),transmissionMapUv:u0&&_(M.transmissionMap.channel),thicknessMapUv:f0&&_(M.thicknessMap.channel),alphaMapUv:L0&&_(M.alphaMap.channel),vertexTangents:X0&&!!W.attributes.tangent,vertexColors:M.vertexColors,vertexAlphas:M.vertexColors===!0&&!!W.attributes.color&&W.attributes.color.itemSize===4,vertexUvs2:H,pointsUvs:I.isPoints===!0&&!!W.attributes.uv&&(v0||L0),fog:!!O,useFog:M.fog===!0,fogExp2:O&&O.isFogExp2,flatShading:M.flatShading===!0,sizeAttenuation:M.sizeAttenuation===!0,logarithmicDepthBuffer:d,skinning:I.isSkinnedMesh===!0,morphTargets:W.morphAttributes.position!==void 0,morphNormals:W.morphAttributes.normal!==void 0,morphColors:W.morphAttributes.color!==void 0,morphTargetsCount:M0,morphTextureStride:i0,numDirLights:T.directional.length,numPointLights:T.point.length,numSpotLights:T.spot.length,numSpotLightMaps:T.spotLightMap.length,numRectAreaLights:T.rectArea.length,numHemiLights:T.hemi.length,numDirLightShadows:T.directionalShadowMap.length,numPointLightShadows:T.pointShadowMap.length,numSpotLightShadows:T.spotShadowMap.length,numSpotLightShadowsWithMaps:T.numSpotLightShadowsWithMaps,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:M.dithering,shadowMapEnabled:a.shadowMap.enabled&&Y.length>0,shadowMapType:a.shadowMap.type,toneMapping:M.toneMapped?a.toneMapping:Y9,useLegacyLights:a.useLegacyLights,premultipliedAlpha:M.premultipliedAlpha,doubleSided:M.side===j9,flipSided:M.side===p9,useDepthPacking:M.depthPacking>=0,depthPacking:M.depthPacking||0,index0AttributeName:M.index0AttributeName,extensionDerivatives:L&&M.extensions.derivatives===!0,extensionFragDepth:L&&M.extensions.fragDepth===!0,extensionDrawBuffers:L&&M.extensions.drawBuffers===!0,extensionShaderTextureLOD:L&&M.extensions.shaderTextureLOD===!0,rendererExtensionFragDepth:u||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||n.has("EXT_shader_texture_lod"),customProgramCacheKey:M.customProgramCacheKey()}}function h(M){const T=[];if(M.shaderID?T.push(M.shaderID):(T.push(M.customVertexShaderID),T.push(M.customFragmentShaderID)),M.defines!==void 0)for(const Y in M.defines)T.push(Y),T.push(M.defines[Y]);return M.isRawShaderMaterial===!1&&(E(T,M),w(T,M),T.push(a.outputEncoding)),T.push(M.customProgramCacheKey),T.join()}function E(M,T){M.push(T.precision),M.push(T.outputEncoding),M.push(T.envMapMode),M.push(T.envMapCubeUVHeight),M.push(T.mapUv),M.push(T.alphaMapUv),M.push(T.lightMapUv),M.push(T.aoMapUv),M.push(T.bumpMapUv),M.push(T.normalMapUv),M.push(T.displacementMapUv),M.push(T.emissiveMapUv),M.push(T.metalnessMapUv),M.push(T.roughnessMapUv),M.push(T.clearcoatMapUv),M.push(T.clearcoatNormalMapUv),M.push(T.clearcoatRoughnessMapUv),M.push(T.iridescenceMapUv),M.push(T.iridescenceThicknessMapUv),M.push(T.sheenColorMapUv),M.push(T.sheenRoughnessMapUv),M.push(T.specularMapUv),M.push(T.specularColorMapUv),M.push(T.specularIntensityMapUv),M.push(T.transmissionMapUv),M.push(T.thicknessMapUv),M.push(T.combine),M.push(T.fogExp2),M.push(T.sizeAttenuation),M.push(T.morphTargetsCount),M.push(T.morphAttributeCount),M.push(T.numDirLights),M.push(T.numPointLights),M.push(T.numSpotLights),M.push(T.numSpotLightMaps),M.push(T.numHemiLights),M.push(T.numRectAreaLights),M.push(T.numDirLightShadows),M.push(T.numPointLightShadows),M.push(T.numSpotLightShadows),M.push(T.numSpotLightShadowsWithMaps),M.push(T.shadowMapType),M.push(T.toneMapping),M.push(T.numClippingPlanes),M.push(T.numClipIntersection),M.push(T.depthPacking)}function w(M,T){s.disableAll(),T.isWebGL2&&s.enable(0),T.supportsVertexTextures&&s.enable(1),T.instancing&&s.enable(2),T.instancingColor&&s.enable(3),T.matcap&&s.enable(4),T.envMap&&s.enable(5),T.normalMapObjectSpace&&s.enable(6),T.normalMapTangentSpace&&s.enable(7),T.clearcoat&&s.enable(8),T.iridescence&&s.enable(9),T.alphaTest&&s.enable(10),T.vertexColors&&s.enable(11),T.vertexAlphas&&s.enable(12),T.vertexUvs2&&s.enable(13),T.vertexTangents&&s.enable(14),M.push(s.mask),s.disableAll(),T.fog&&s.enable(0),T.useFog&&s.enable(1),T.flatShading&&s.enable(2),T.logarithmicDepthBuffer&&s.enable(3),T.skinning&&s.enable(4),T.morphTargets&&s.enable(5),T.morphNormals&&s.enable(6),T.morphColors&&s.enable(7),T.premultipliedAlpha&&s.enable(8),T.shadowMapEnabled&&s.enable(9),T.useLegacyLights&&s.enable(10),T.doubleSided&&s.enable(11),T.flipSided&&s.enable(12),T.useDepthPacking&&s.enable(13),T.dithering&&s.enable(14),T.transmission&&s.enable(15),T.sheen&&s.enable(16),T.decodeVideoTexture&&s.enable(17),T.opaque&&s.enable(18),T.pointsUvs&&s.enable(19),M.push(s.mask)}function v(M){const T=g[M.type];let Y;if(T){const B=z9[T];Y=T6.clone(B.uniforms)}else Y=M.uniforms;return Y}function y(M,T){let Y;for(let B=0,I=l.length;B<I;B++){const O=l[B];if(O.cacheKey===T){Y=O,++Y.usedTimes;break}}return Y===void 0&&(Y=new Nn(a,T,M,r),l.push(Y)),Y}function A(M){if(--M.usedTimes===0){const T=l.indexOf(M);l[T]=l[l.length-1],l.pop(),M.destroy()}}function R(M){c.remove(M)}function N(){c.dispose()}return{getParameters:p,getProgramCacheKey:h,getUniforms:v,acquireProgram:y,releaseProgram:A,releaseShaderCache:R,programs:l,dispose:N}}function Gn(){let a=new WeakMap;function e(r){let o=a.get(r);return o===void 0&&(o={},a.set(r,o)),o}function t(r){a.delete(r)}function n(r,o,s){a.get(r)[o]=s}function i(){a=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function kn(a,e){return a.groupOrder!==e.groupOrder?a.groupOrder-e.groupOrder:a.renderOrder!==e.renderOrder?a.renderOrder-e.renderOrder:a.material.id!==e.material.id?a.material.id-e.material.id:a.z!==e.z?a.z-e.z:a.id-e.id}function h5(a,e){return a.groupOrder!==e.groupOrder?a.groupOrder-e.groupOrder:a.renderOrder!==e.renderOrder?a.renderOrder-e.renderOrder:a.z!==e.z?e.z-a.z:a.id-e.id}function d5(){const a=[];let e=0;const t=[],n=[],i=[];function r(){e=0,t.length=0,n.length=0,i.length=0}function o(d,f,m,g,_,p){let h=a[e];return h===void 0?(h={id:d.id,object:d,geometry:f,material:m,groupOrder:g,renderOrder:d.renderOrder,z:_,group:p},a[e]=h):(h.id=d.id,h.object=d,h.geometry=f,h.material=m,h.groupOrder=g,h.renderOrder=d.renderOrder,h.z=_,h.group=p),e++,h}function s(d,f,m,g,_,p){const h=o(d,f,m,g,_,p);m.transmission>0?n.push(h):m.transparent===!0?i.push(h):t.push(h)}function c(d,f,m,g,_,p){const h=o(d,f,m,g,_,p);m.transmission>0?n.unshift(h):m.transparent===!0?i.unshift(h):t.unshift(h)}function l(d,f){t.length>1&&t.sort(d||kn),n.length>1&&n.sort(f||h5),i.length>1&&i.sort(f||h5)}function u(){for(let d=e,f=a.length;d<f;d++){const m=a[d];if(m.id===null)break;m.id=null,m.object=null,m.geometry=null,m.material=null,m.group=null}}return{opaque:t,transmissive:n,transparent:i,init:r,push:s,unshift:c,finish:u,sort:l}}function Vn(){let a=new WeakMap;function e(n,i){const r=a.get(n);let o;return r===void 0?(o=new d5,a.set(n,[o])):i>=r.length?(o=new d5,r.push(o)):o=r[i],o}function t(){a=new WeakMap}return{get:e,dispose:t}}function Hn(){const a={};return{get:function(e){if(a[e.id]!==void 0)return a[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new P,color:new D0};break;case"SpotLight":t={position:new P,direction:new P,color:new D0,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new P,color:new D0,distance:0,decay:0};break;case"HemisphereLight":t={direction:new P,skyColor:new D0,groundColor:new D0};break;case"RectAreaLight":t={color:new D0,position:new P,halfWidth:new P,halfHeight:new P};break}return a[e.id]=t,t}}}function Wn(){const a={};return{get:function(e){if(a[e.id]!==void 0)return a[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new E0};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new E0};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new E0,shadowCameraNear:1,shadowCameraFar:1e3};break}return a[e.id]=t,t}}}let qn=0;function Xn(a,e){return(e.castShadow?2:0)-(a.castShadow?2:0)+(e.map?1:0)-(a.map?1:0)}function jn(a,e){const t=new Hn,n=Wn(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let u=0;u<9;u++)i.probe.push(new P);const r=new P,o=new B0,s=new B0;function c(u,d){let f=0,m=0,g=0;for(let Y=0;Y<9;Y++)i.probe[Y].set(0,0,0);let _=0,p=0,h=0,E=0,w=0,v=0,y=0,A=0,R=0,N=0;u.sort(Xn);const M=d===!0?Math.PI:1;for(let Y=0,B=u.length;Y<B;Y++){const I=u[Y],O=I.color,W=I.intensity,J=I.distance,K=I.shadow&&I.shadow.map?I.shadow.map.texture:null;if(I.isAmbientLight)f+=O.r*W*M,m+=O.g*W*M,g+=O.b*W*M;else if(I.isLightProbe)for(let X=0;X<9;X++)i.probe[X].addScaledVector(I.sh.coefficients[X],W);else if(I.isDirectionalLight){const X=t.get(I);if(X.color.copy(I.color).multiplyScalar(I.intensity*M),I.castShadow){const n0=I.shadow,e0=n.get(I);e0.shadowBias=n0.bias,e0.shadowNormalBias=n0.normalBias,e0.shadowRadius=n0.radius,e0.shadowMapSize=n0.mapSize,i.directionalShadow[_]=e0,i.directionalShadowMap[_]=K,i.directionalShadowMatrix[_]=I.shadow.matrix,v++}i.directional[_]=X,_++}else if(I.isSpotLight){const X=t.get(I);X.position.setFromMatrixPosition(I.matrixWorld),X.color.copy(O).multiplyScalar(W*M),X.distance=J,X.coneCos=Math.cos(I.angle),X.penumbraCos=Math.cos(I.angle*(1-I.penumbra)),X.decay=I.decay,i.spot[h]=X;const n0=I.shadow;if(I.map&&(i.spotLightMap[R]=I.map,R++,n0.updateMatrices(I),I.castShadow&&N++),i.spotLightMatrix[h]=n0.matrix,I.castShadow){const e0=n.get(I);e0.shadowBias=n0.bias,e0.shadowNormalBias=n0.normalBias,e0.shadowRadius=n0.radius,e0.shadowMapSize=n0.mapSize,i.spotShadow[h]=e0,i.spotShadowMap[h]=K,A++}h++}else if(I.isRectAreaLight){const X=t.get(I);X.color.copy(O).multiplyScalar(W),X.halfWidth.set(I.width*.5,0,0),X.halfHeight.set(0,I.height*.5,0),i.rectArea[E]=X,E++}else if(I.isPointLight){const X=t.get(I);if(X.color.copy(I.color).multiplyScalar(I.intensity*M),X.distance=I.distance,X.decay=I.decay,I.castShadow){const n0=I.shadow,e0=n.get(I);e0.shadowBias=n0.bias,e0.shadowNormalBias=n0.normalBias,e0.shadowRadius=n0.radius,e0.shadowMapSize=n0.mapSize,e0.shadowCameraNear=n0.camera.near,e0.shadowCameraFar=n0.camera.far,i.pointShadow[p]=e0,i.pointShadowMap[p]=K,i.pointShadowMatrix[p]=I.shadow.matrix,y++}i.point[p]=X,p++}else if(I.isHemisphereLight){const X=t.get(I);X.skyColor.copy(I.color).multiplyScalar(W*M),X.groundColor.copy(I.groundColor).multiplyScalar(W*M),i.hemi[w]=X,w++}}E>0&&(e.isWebGL2||a.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=s0.LTC_FLOAT_1,i.rectAreaLTC2=s0.LTC_FLOAT_2):a.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=s0.LTC_HALF_1,i.rectAreaLTC2=s0.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=f,i.ambient[1]=m,i.ambient[2]=g;const T=i.hash;(T.directionalLength!==_||T.pointLength!==p||T.spotLength!==h||T.rectAreaLength!==E||T.hemiLength!==w||T.numDirectionalShadows!==v||T.numPointShadows!==y||T.numSpotShadows!==A||T.numSpotMaps!==R)&&(i.directional.length=_,i.spot.length=h,i.rectArea.length=E,i.point.length=p,i.hemi.length=w,i.directionalShadow.length=v,i.directionalShadowMap.length=v,i.pointShadow.length=y,i.pointShadowMap.length=y,i.spotShadow.length=A,i.spotShadowMap.length=A,i.directionalShadowMatrix.length=v,i.pointShadowMatrix.length=y,i.spotLightMatrix.length=A+R-N,i.spotLightMap.length=R,i.numSpotLightShadowsWithMaps=N,T.directionalLength=_,T.pointLength=p,T.spotLength=h,T.rectAreaLength=E,T.hemiLength=w,T.numDirectionalShadows=v,T.numPointShadows=y,T.numSpotShadows=A,T.numSpotMaps=R,i.version=qn++)}function l(u,d){let f=0,m=0,g=0,_=0,p=0;const h=d.matrixWorldInverse;for(let E=0,w=u.length;E<w;E++){const v=u[E];if(v.isDirectionalLight){const y=i.directional[f];y.direction.setFromMatrixPosition(v.matrixWorld),r.setFromMatrixPosition(v.target.matrixWorld),y.direction.sub(r),y.direction.transformDirection(h),f++}else if(v.isSpotLight){const y=i.spot[g];y.position.setFromMatrixPosition(v.matrixWorld),y.position.applyMatrix4(h),y.direction.setFromMatrixPosition(v.matrixWorld),r.setFromMatrixPosition(v.target.matrixWorld),y.direction.sub(r),y.direction.transformDirection(h),g++}else if(v.isRectAreaLight){const y=i.rectArea[_];y.position.setFromMatrixPosition(v.matrixWorld),y.position.applyMatrix4(h),s.identity(),o.copy(v.matrixWorld),o.premultiply(h),s.extractRotation(o),y.halfWidth.set(v.width*.5,0,0),y.halfHeight.set(0,v.height*.5,0),y.halfWidth.applyMatrix4(s),y.halfHeight.applyMatrix4(s),_++}else if(v.isPointLight){const y=i.point[m];y.position.setFromMatrixPosition(v.matrixWorld),y.position.applyMatrix4(h),m++}else if(v.isHemisphereLight){const y=i.hemi[p];y.direction.setFromMatrixPosition(v.matrixWorld),y.direction.transformDirection(h),p++}}}return{setup:c,setupView:l,state:i}}function f5(a,e){const t=new jn(a,e),n=[],i=[];function r(){n.length=0,i.length=0}function o(d){n.push(d)}function s(d){i.push(d)}function c(d){t.setup(n,d)}function l(d){t.setupView(n,d)}return{init:r,state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:c,setupLightsView:l,pushLight:o,pushShadow:s}}function Yn(a,e){let t=new WeakMap;function n(r,o=0){const s=t.get(r);let c;return s===void 0?(c=new f5(a,e),t.set(r,[c])):o>=s.length?(c=new f5(a,e),s.push(c)):c=s[o],c}function i(){t=new WeakMap}return{get:n,dispose:i}}class Zn extends K9{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=t6,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class Kn extends K9{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const $n=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,Jn=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function Qn(a,e,t){let n=new j8;const i=new E0,r=new E0,o=new H0,s=new Zn({depthPacking:n6}),c=new Kn,l={},u=t.maxTextureSize,d={[Z9]:p9,[p9]:Z9,[j9]:j9},f=new v1({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new E0},radius:{value:4}},vertexShader:$n,fragmentShader:Jn}),m=f.clone();m.defines.HORIZONTAL_PASS=1;const g=new y9;g.setAttribute("position",new B9(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const _=new A9(g,f),p=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=I5,this.render=function(v,y,A){if(p.enabled===!1||p.autoUpdate===!1&&p.needsUpdate===!1||v.length===0)return;const R=a.getRenderTarget(),N=a.getActiveCubeFace(),M=a.getActiveMipmapLevel(),T=a.state;T.setBlending(n1),T.buffers.color.setClear(1,1,1,1),T.buffers.depth.setTest(!0),T.setScissorTest(!1);for(let Y=0,B=v.length;Y<B;Y++){const I=v[Y],O=I.shadow;if(O===void 0){console.warn("THREE.WebGLShadowMap:",I,"has no shadow.");continue}if(O.autoUpdate===!1&&O.needsUpdate===!1)continue;i.copy(O.mapSize);const W=O.getFrameExtents();if(i.multiply(W),r.copy(O.mapSize),(i.x>u||i.y>u)&&(i.x>u&&(r.x=Math.floor(u/W.x),i.x=r.x*W.x,O.mapSize.x=r.x),i.y>u&&(r.y=Math.floor(u/W.y),i.y=r.y*W.y,O.mapSize.y=r.y)),O.map===null){const K=this.type!==t2?{minFilter:d9,magFilter:d9}:{};O.map=new _1(i.x,i.y,K),O.map.texture.name=I.name+".shadowMap",O.camera.updateProjectionMatrix()}a.setRenderTarget(O.map),a.clear();const J=O.getViewportCount();for(let K=0;K<J;K++){const X=O.getViewport(K);o.set(r.x*X.x,r.y*X.y,r.x*X.z,r.y*X.w),T.viewport(o),O.updateMatrices(I,K),n=O.getFrustum(),w(y,A,O.camera,I,this.type)}O.isPointLightShadow!==!0&&this.type===t2&&h(O,A),O.needsUpdate=!1}p.needsUpdate=!1,a.setRenderTarget(R,N,M)};function h(v,y){const A=e.update(_);f.defines.VSM_SAMPLES!==v.blurSamples&&(f.defines.VSM_SAMPLES=v.blurSamples,m.defines.VSM_SAMPLES=v.blurSamples,f.needsUpdate=!0,m.needsUpdate=!0),v.mapPass===null&&(v.mapPass=new _1(i.x,i.y)),f.uniforms.shadow_pass.value=v.map.texture,f.uniforms.resolution.value=v.mapSize,f.uniforms.radius.value=v.radius,a.setRenderTarget(v.mapPass),a.clear(),a.renderBufferDirect(y,null,A,f,_,null),m.uniforms.shadow_pass.value=v.mapPass.texture,m.uniforms.resolution.value=v.mapSize,m.uniforms.radius.value=v.radius,a.setRenderTarget(v.map),a.clear(),a.renderBufferDirect(y,null,A,m,_,null)}function E(v,y,A,R){let N=null;const M=A.isPointLight===!0?v.customDistanceMaterial:v.customDepthMaterial;if(M!==void 0)N=M;else if(N=A.isPointLight===!0?c:s,a.localClippingEnabled&&y.clipShadows===!0&&Array.isArray(y.clippingPlanes)&&y.clippingPlanes.length!==0||y.displacementMap&&y.displacementScale!==0||y.alphaMap&&y.alphaTest>0||y.map&&y.alphaTest>0){const T=N.uuid,Y=y.uuid;let B=l[T];B===void 0&&(B={},l[T]=B);let I=B[Y];I===void 0&&(I=N.clone(),B[Y]=I),N=I}if(N.visible=y.visible,N.wireframe=y.wireframe,R===t2?N.side=y.shadowSide!==null?y.shadowSide:y.side:N.side=y.shadowSide!==null?y.shadowSide:d[y.side],N.alphaMap=y.alphaMap,N.alphaTest=y.alphaTest,N.map=y.map,N.clipShadows=y.clipShadows,N.clippingPlanes=y.clippingPlanes,N.clipIntersection=y.clipIntersection,N.displacementMap=y.displacementMap,N.displacementScale=y.displacementScale,N.displacementBias=y.displacementBias,N.wireframeLinewidth=y.wireframeLinewidth,N.linewidth=y.linewidth,A.isPointLight===!0&&N.isMeshDistanceMaterial===!0){const T=a.properties.get(N);T.light=A}return N}function w(v,y,A,R,N){if(v.visible===!1)return;if(v.layers.test(y.layers)&&(v.isMesh||v.isLine||v.isPoints)&&(v.castShadow||v.receiveShadow&&N===t2)&&(!v.frustumCulled||n.intersectsObject(v))){v.modelViewMatrix.multiplyMatrices(A.matrixWorldInverse,v.matrixWorld);const Y=e.update(v),B=v.material;if(Array.isArray(B)){const I=Y.groups;for(let O=0,W=I.length;O<W;O++){const J=I[O],K=B[J.materialIndex];if(K&&K.visible){const X=E(v,K,R,N);a.renderBufferDirect(A,null,Y,X,v,J)}}}else if(B.visible){const I=E(v,B,R,N);a.renderBufferDirect(A,null,Y,I,v,null)}}const T=v.children;for(let Y=0,B=T.length;Y<B;Y++)w(T[Y],y,A,R,N)}}function ei(a,e,t){const n=t.isWebGL2;function i(){let L=!1;const H=new H0;let Q=null;const h0=new H0(0,0,0,0);return{setMask:function(g0){Q!==g0&&!L&&(a.colorMask(g0,g0,g0,g0),Q=g0)},setLocked:function(g0){L=g0},setClear:function(g0,V0,q0,a9,$9){$9===!0&&(g0*=a9,V0*=a9,q0*=a9),H.set(g0,V0,q0,a9),h0.equals(H)===!1&&(a.clearColor(g0,V0,q0,a9),h0.copy(H))},reset:function(){L=!1,Q=null,h0.set(-1,0,0,0)}}}function r(){let L=!1,H=null,Q=null,h0=null;return{setTest:function(g0){g0?z(2929):y0(2929)},setMask:function(g0){H!==g0&&!L&&(a.depthMask(g0),H=g0)},setFunc:function(g0){if(Q!==g0){switch(g0){case E3:a.depthFunc(512);break;case T3:a.depthFunc(519);break;case A3:a.depthFunc(513);break;case N8:a.depthFunc(515);break;case C3:a.depthFunc(514);break;case L3:a.depthFunc(518);break;case P3:a.depthFunc(516);break;case R3:a.depthFunc(517);break;default:a.depthFunc(515)}Q=g0}},setLocked:function(g0){L=g0},setClear:function(g0){h0!==g0&&(a.clearDepth(g0),h0=g0)},reset:function(){L=!1,H=null,Q=null,h0=null}}}function o(){let L=!1,H=null,Q=null,h0=null,g0=null,V0=null,q0=null,a9=null,$9=null;return{setTest:function(K0){L||(K0?z(2960):y0(2960))},setMask:function(K0){H!==K0&&!L&&(a.stencilMask(K0),H=K0)},setFunc:function(K0,b9,N9){(Q!==K0||h0!==b9||g0!==N9)&&(a.stencilFunc(K0,b9,N9),Q=K0,h0=b9,g0=N9)},setOp:function(K0,b9,N9){(V0!==K0||q0!==b9||a9!==N9)&&(a.stencilOp(K0,b9,N9),V0=K0,q0=b9,a9=N9)},setLocked:function(K0){L=K0},setClear:function(K0){$9!==K0&&(a.clearStencil(K0),$9=K0)},reset:function(){L=!1,H=null,Q=null,h0=null,g0=null,V0=null,q0=null,a9=null,$9=null}}}const s=new i,c=new r,l=new o,u=new WeakMap,d=new WeakMap;let f={},m={},g=new WeakMap,_=[],p=null,h=!1,E=null,w=null,v=null,y=null,A=null,R=null,N=null,M=!1,T=null,Y=null,B=null,I=null,O=null;const W=a.getParameter(35661);let J=!1,K=0;const X=a.getParameter(7938);X.indexOf("WebGL")!==-1?(K=parseFloat(/^WebGL (\d)/.exec(X)[1]),J=K>=1):X.indexOf("OpenGL ES")!==-1&&(K=parseFloat(/^OpenGL ES (\d)/.exec(X)[1]),J=K>=2);let n0=null,e0={};const M0=a.getParameter(3088),i0=a.getParameter(2978),k=new H0().fromArray(M0),Z=new H0().fromArray(i0);function a0(L,H,Q){const h0=new Uint8Array(4),g0=a.createTexture();a.bindTexture(L,g0),a.texParameteri(L,10241,9728),a.texParameteri(L,10240,9728);for(let V0=0;V0<Q;V0++)a.texImage2D(H+V0,0,6408,1,1,0,6408,5121,h0);return g0}const c0={};c0[3553]=a0(3553,3553,1),c0[34067]=a0(34067,34069,6),s.setClear(0,0,0,1),c.setClear(1),l.setClear(0),z(2929),c.setFunc(N8),W0(!1),$0(Q8),z(2884),T0(n1);function z(L){f[L]!==!0&&(a.enable(L),f[L]=!0)}function y0(L){f[L]!==!1&&(a.disable(L),f[L]=!1)}function v0(L,H){return m[L]!==H?(a.bindFramebuffer(L,H),m[L]=H,n&&(L===36009&&(m[36160]=H),L===36160&&(m[36009]=H)),!0):!1}function r0(L,H){let Q=_,h0=!1;if(L)if(Q=g.get(H),Q===void 0&&(Q=[],g.set(H,Q)),L.isWebGLMultipleRenderTargets){const g0=L.texture;if(Q.length!==g0.length||Q[0]!==36064){for(let V0=0,q0=g0.length;V0<q0;V0++)Q[V0]=36064+V0;Q.length=g0.length,h0=!0}}else Q[0]!==36064&&(Q[0]=36064,h0=!0);else Q[0]!==1029&&(Q[0]=1029,h0=!0);h0&&(t.isWebGL2?a.drawBuffers(Q):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(Q))}function x0(L){return p!==L?(a.useProgram(L),p=L,!0):!1}const F0={[B1]:32774,[p3]:32778,[m3]:32779};if(n)F0[i7]=32775,F0[r7]=32776;else{const L=e.get("EXT_blend_minmax");L!==null&&(F0[i7]=L.MIN_EXT,F0[r7]=L.MAX_EXT)}const m0={[g3]:0,[_3]:1,[x3]:768,[U5]:770,[w3]:776,[y3]:774,[M3]:772,[v3]:769,[N5]:771,[b3]:775,[S3]:773};function T0(L,H,Q,h0,g0,V0,q0,a9){if(L===n1){h===!0&&(y0(3042),h=!1);return}if(h===!1&&(z(3042),h=!0),L!==f3){if(L!==E||a9!==M){if((w!==B1||A!==B1)&&(a.blendEquation(32774),w=B1,A=B1),a9)switch(L){case k1:a.blendFuncSeparate(1,771,1,771);break;case e7:a.blendFunc(1,1);break;case t7:a.blendFuncSeparate(0,769,0,1);break;case n7:a.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",L);break}else switch(L){case k1:a.blendFuncSeparate(770,771,1,771);break;case e7:a.blendFunc(770,1);break;case t7:a.blendFuncSeparate(0,769,0,1);break;case n7:a.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",L);break}v=null,y=null,R=null,N=null,E=L,M=a9}return}g0=g0||H,V0=V0||Q,q0=q0||h0,(H!==w||g0!==A)&&(a.blendEquationSeparate(F0[H],F0[g0]),w=H,A=g0),(Q!==v||h0!==y||V0!==R||q0!==N)&&(a.blendFuncSeparate(m0[Q],m0[h0],m0[V0],m0[q0]),v=Q,y=h0,R=V0,N=q0),E=L,M=!1}function X0(L,H){L.side===j9?y0(2884):z(2884);let Q=L.side===p9;H&&(Q=!Q),W0(Q),L.blending===k1&&L.transparent===!1?T0(n1):T0(L.blending,L.blendEquation,L.blendSrc,L.blendDst,L.blendEquationAlpha,L.blendSrcAlpha,L.blendDstAlpha,L.premultipliedAlpha),c.setFunc(L.depthFunc),c.setTest(L.depthTest),c.setMask(L.depthWrite),s.setMask(L.colorWrite);const h0=L.stencilWrite;l.setTest(h0),h0&&(l.setMask(L.stencilWriteMask),l.setFunc(L.stencilFunc,L.stencilRef,L.stencilFuncMask),l.setOp(L.stencilFail,L.stencilZFail,L.stencilZPass)),O0(L.polygonOffset,L.polygonOffsetFactor,L.polygonOffsetUnits),L.alphaToCoverage===!0?z(32926):y0(32926)}function W0(L){T!==L&&(L?a.frontFace(2304):a.frontFace(2305),T=L)}function $0(L){L!==u3?(z(2884),L!==Y&&(L===Q8?a.cullFace(1029):L===h3?a.cullFace(1028):a.cullFace(1032))):y0(2884),Y=L}function Y0(L){L!==B&&(J&&a.lineWidth(L),B=L)}function O0(L,H,Q){L?(z(32823),(I!==H||O!==Q)&&(a.polygonOffset(H,Q),I=H,O=Q)):y0(32823)}function G0(L){L?z(3089):y0(3089)}function s9(L){L===void 0&&(L=33984+W-1),n0!==L&&(a.activeTexture(L),n0=L)}function b(L,H,Q){Q===void 0&&(n0===null?Q=33984+W-1:Q=n0);let h0=e0[Q];h0===void 0&&(h0={type:void 0,texture:void 0},e0[Q]=h0),(h0.type!==L||h0.texture!==H)&&(n0!==Q&&(a.activeTexture(Q),n0=Q),a.bindTexture(L,H||c0[L]),h0.type=L,h0.texture=H)}function x(){const L=e0[n0];L!==void 0&&L.type!==void 0&&(a.bindTexture(L.type,null),L.type=void 0,L.texture=void 0)}function G(){try{a.compressedTexImage2D.apply(a,arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function $(){try{a.compressedTexImage3D.apply(a,arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function t0(){try{a.texSubImage2D.apply(a,arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function o0(){try{a.texSubImage3D.apply(a,arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function C(){try{a.compressedTexSubImage2D.apply(a,arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function j(){try{a.compressedTexSubImage3D.apply(a,arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function F(){try{a.texStorage2D.apply(a,arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function l0(){try{a.texStorage3D.apply(a,arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function d0(){try{a.texImage2D.apply(a,arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function p0(){try{a.texImage3D.apply(a,arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function u0(L){k.equals(L)===!1&&(a.scissor(L.x,L.y,L.z,L.w),k.copy(L))}function f0(L){Z.equals(L)===!1&&(a.viewport(L.x,L.y,L.z,L.w),Z.copy(L))}function b0(L,H){let Q=d.get(H);Q===void 0&&(Q=new WeakMap,d.set(H,Q));let h0=Q.get(L);h0===void 0&&(h0=a.getUniformBlockIndex(H,L.name),Q.set(L,h0))}function L0(L,H){const h0=d.get(H).get(L);u.get(H)!==h0&&(a.uniformBlockBinding(H,h0,L.__bindingPointIndex),u.set(H,h0))}function Z0(){a.disable(3042),a.disable(2884),a.disable(2929),a.disable(32823),a.disable(3089),a.disable(2960),a.disable(32926),a.blendEquation(32774),a.blendFunc(1,0),a.blendFuncSeparate(1,0,1,0),a.colorMask(!0,!0,!0,!0),a.clearColor(0,0,0,0),a.depthMask(!0),a.depthFunc(513),a.clearDepth(1),a.stencilMask(4294967295),a.stencilFunc(519,0,4294967295),a.stencilOp(7680,7680,7680),a.clearStencil(0),a.cullFace(1029),a.frontFace(2305),a.polygonOffset(0,0),a.activeTexture(33984),a.bindFramebuffer(36160,null),n===!0&&(a.bindFramebuffer(36009,null),a.bindFramebuffer(36008,null)),a.useProgram(null),a.lineWidth(1),a.scissor(0,0,a.canvas.width,a.canvas.height),a.viewport(0,0,a.canvas.width,a.canvas.height),f={},n0=null,e0={},m={},g=new WeakMap,_=[],p=null,h=!1,E=null,w=null,v=null,y=null,A=null,R=null,N=null,M=!1,T=null,Y=null,B=null,I=null,O=null,k.set(0,0,a.canvas.width,a.canvas.height),Z.set(0,0,a.canvas.width,a.canvas.height),s.reset(),c.reset(),l.reset()}return{buffers:{color:s,depth:c,stencil:l},enable:z,disable:y0,bindFramebuffer:v0,drawBuffers:r0,useProgram:x0,setBlending:T0,setMaterial:X0,setFlipSided:W0,setCullFace:$0,setLineWidth:Y0,setPolygonOffset:O0,setScissorTest:G0,activeTexture:s9,bindTexture:b,unbindTexture:x,compressedTexImage2D:G,compressedTexImage3D:$,texImage2D:d0,texImage3D:p0,updateUBOMapping:b0,uniformBlockBinding:L0,texStorage2D:F,texStorage3D:l0,texSubImage2D:t0,texSubImage3D:o0,compressedTexSubImage2D:C,compressedTexSubImage3D:j,scissor:u0,viewport:f0,reset:Z0}}function ti(a,e,t,n,i,r,o){const s=i.isWebGL2,c=i.maxTextures,l=i.maxCubemapSize,u=i.maxTextureSize,d=i.maxSamples,f=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,m=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),g=new WeakMap;let _;const p=new WeakMap;let h=!1;try{h=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function E(b,x){return h?new OffscreenCanvas(b,x):c2("canvas")}function w(b,x,G,$){let t0=1;if((b.width>$||b.height>$)&&(t0=$/Math.max(b.width,b.height)),t0<1||x===!0)if(typeof HTMLImageElement<"u"&&b instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&b instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&b instanceof ImageBitmap){const o0=x?a6:Math.floor,C=o0(t0*b.width),j=o0(t0*b.height);_===void 0&&(_=E(C,j));const F=G?E(C,j):_;return F.width=C,F.height=j,F.getContext("2d").drawImage(b,0,0,C,j),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+b.width+"x"+b.height+") to ("+C+"x"+j+")."),F}else return"data"in b&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+b.width+"x"+b.height+")."),b;return b}function v(b){return R7(b.width)&&R7(b.height)}function y(b){return s?!1:b.wrapS!==I9||b.wrapT!==I9||b.minFilter!==d9&&b.minFilter!==T9}function A(b,x){return b.generateMipmaps&&x&&b.minFilter!==d9&&b.minFilter!==T9}function R(b){a.generateMipmap(b)}function N(b,x,G,$,t0=!1){if(s===!1)return x;if(b!==null){if(a[b]!==void 0)return a[b];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+b+"'")}let o0=x;return x===6403&&(G===5126&&(o0=33326),G===5131&&(o0=33325),G===5121&&(o0=33321)),x===33319&&(G===5126&&(o0=33328),G===5131&&(o0=33327),G===5121&&(o0=33323)),x===6408&&(G===5126&&(o0=34836),G===5131&&(o0=34842),G===5121&&(o0=$===k0&&t0===!1?35907:32856),G===32819&&(o0=32854),G===32820&&(o0=32855)),(o0===33325||o0===33326||o0===33327||o0===33328||o0===34842||o0===34836)&&e.get("EXT_color_buffer_float"),o0}function M(b,x,G){return A(b,G)===!0||b.isFramebufferTexture&&b.minFilter!==d9&&b.minFilter!==T9?Math.log2(Math.max(x.width,x.height))+1:b.mipmaps!==void 0&&b.mipmaps.length>0?b.mipmaps.length:b.isCompressedTexture&&Array.isArray(b.image)?x.mipmaps.length:1}function T(b){return b===d9||b===s7||b===Q2?9728:9729}function Y(b){const x=b.target;x.removeEventListener("dispose",Y),I(x),x.isVideoTexture&&g.delete(x)}function B(b){const x=b.target;x.removeEventListener("dispose",B),W(x)}function I(b){const x=n.get(b);if(x.__webglInit===void 0)return;const G=b.source,$=p.get(G);if($){const t0=$[x.__cacheKey];t0.usedTimes--,t0.usedTimes===0&&O(b),Object.keys($).length===0&&p.delete(G)}n.remove(b)}function O(b){const x=n.get(b);a.deleteTexture(x.__webglTexture);const G=b.source,$=p.get(G);delete $[x.__cacheKey],o.memory.textures--}function W(b){const x=b.texture,G=n.get(b),$=n.get(x);if($.__webglTexture!==void 0&&(a.deleteTexture($.__webglTexture),o.memory.textures--),b.depthTexture&&b.depthTexture.dispose(),b.isWebGLCubeRenderTarget)for(let t0=0;t0<6;t0++)a.deleteFramebuffer(G.__webglFramebuffer[t0]),G.__webglDepthbuffer&&a.deleteRenderbuffer(G.__webglDepthbuffer[t0]);else{if(a.deleteFramebuffer(G.__webglFramebuffer),G.__webglDepthbuffer&&a.deleteRenderbuffer(G.__webglDepthbuffer),G.__webglMultisampledFramebuffer&&a.deleteFramebuffer(G.__webglMultisampledFramebuffer),G.__webglColorRenderbuffer)for(let t0=0;t0<G.__webglColorRenderbuffer.length;t0++)G.__webglColorRenderbuffer[t0]&&a.deleteRenderbuffer(G.__webglColorRenderbuffer[t0]);G.__webglDepthRenderbuffer&&a.deleteRenderbuffer(G.__webglDepthRenderbuffer)}if(b.isWebGLMultipleRenderTargets)for(let t0=0,o0=x.length;t0<o0;t0++){const C=n.get(x[t0]);C.__webglTexture&&(a.deleteTexture(C.__webglTexture),o.memory.textures--),n.remove(x[t0])}n.remove(x),n.remove(b)}let J=0;function K(){J=0}function X(){const b=J;return b>=c&&console.warn("THREE.WebGLTextures: Trying to use "+b+" texture units while this GPU supports only "+c),J+=1,b}function n0(b){const x=[];return x.push(b.wrapS),x.push(b.wrapT),x.push(b.wrapR||0),x.push(b.magFilter),x.push(b.minFilter),x.push(b.anisotropy),x.push(b.internalFormat),x.push(b.format),x.push(b.type),x.push(b.generateMipmaps),x.push(b.premultiplyAlpha),x.push(b.flipY),x.push(b.unpackAlignment),x.push(b.encoding),x.join()}function e0(b,x){const G=n.get(b);if(b.isVideoTexture&&G0(b),b.isRenderTargetTexture===!1&&b.version>0&&G.__version!==b.version){const $=b.image;if($===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if($.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{y0(G,b,x);return}}t.bindTexture(3553,G.__webglTexture,33984+x)}function M0(b,x){const G=n.get(b);if(b.version>0&&G.__version!==b.version){y0(G,b,x);return}t.bindTexture(35866,G.__webglTexture,33984+x)}function i0(b,x){const G=n.get(b);if(b.version>0&&G.__version!==b.version){y0(G,b,x);return}t.bindTexture(32879,G.__webglTexture,33984+x)}function k(b,x){const G=n.get(b);if(b.version>0&&G.__version!==b.version){v0(G,b,x);return}t.bindTexture(34067,G.__webglTexture,33984+x)}const Z={[V2]:10497,[I9]:33071,[z8]:33648},a0={[d9]:9728,[s7]:9984,[Q2]:9986,[T9]:9729,[B3]:9985,[a2]:9987};function c0(b,x,G){if(G?(a.texParameteri(b,10242,Z[x.wrapS]),a.texParameteri(b,10243,Z[x.wrapT]),(b===32879||b===35866)&&a.texParameteri(b,32882,Z[x.wrapR]),a.texParameteri(b,10240,a0[x.magFilter]),a.texParameteri(b,10241,a0[x.minFilter])):(a.texParameteri(b,10242,33071),a.texParameteri(b,10243,33071),(b===32879||b===35866)&&a.texParameteri(b,32882,33071),(x.wrapS!==I9||x.wrapT!==I9)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),a.texParameteri(b,10240,T(x.magFilter)),a.texParameteri(b,10241,T(x.minFilter)),x.minFilter!==d9&&x.minFilter!==T9&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const $=e.get("EXT_texture_filter_anisotropic");if(x.magFilter===d9||x.minFilter!==Q2&&x.minFilter!==a2||x.type===f1&&e.has("OES_texture_float_linear")===!1||s===!1&&x.type===o2&&e.has("OES_texture_half_float_linear")===!1)return;(x.anisotropy>1||n.get(x).__currentAnisotropy)&&(a.texParameterf(b,$.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(x.anisotropy,i.getMaxAnisotropy())),n.get(x).__currentAnisotropy=x.anisotropy)}}function z(b,x){let G=!1;b.__webglInit===void 0&&(b.__webglInit=!0,x.addEventListener("dispose",Y));const $=x.source;let t0=p.get($);t0===void 0&&(t0={},p.set($,t0));const o0=n0(x);if(o0!==b.__cacheKey){t0[o0]===void 0&&(t0[o0]={texture:a.createTexture(),usedTimes:0},o.memory.textures++,G=!0),t0[o0].usedTimes++;const C=t0[b.__cacheKey];C!==void 0&&(t0[b.__cacheKey].usedTimes--,C.usedTimes===0&&O(x)),b.__cacheKey=o0,b.__webglTexture=t0[o0].texture}return G}function y0(b,x,G){let $=3553;(x.isDataArrayTexture||x.isCompressedArrayTexture)&&($=35866),x.isData3DTexture&&($=32879);const t0=z(b,x),o0=x.source;t.bindTexture($,b.__webglTexture,33984+G);const C=n.get(o0);if(o0.version!==C.__version||t0===!0){t.activeTexture(33984+G),a.pixelStorei(37440,x.flipY),a.pixelStorei(37441,x.premultiplyAlpha),a.pixelStorei(3317,x.unpackAlignment),a.pixelStorei(37443,0);const j=y(x)&&v(x.image)===!1;let F=w(x.image,j,!1,u);F=s9(x,F);const l0=v(F)||s,d0=r.convert(x.format,x.encoding);let p0=r.convert(x.type),u0=N(x.internalFormat,d0,p0,x.encoding,x.isVideoTexture);c0($,x,l0);let f0;const b0=x.mipmaps,L0=s&&x.isVideoTexture!==!0,Z0=C.__version===void 0||t0===!0,L=M(x,F,l0);if(x.isDepthTexture)u0=6402,s?x.type===f1?u0=36012:x.type===d1?u0=33190:x.type===V1?u0=35056:u0=33189:x.type===f1&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),x.format===p1&&u0===6402&&x.type!==F5&&x.type!==d1&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),x.type=d1,p0=r.convert(x.type)),x.format===X1&&u0===6402&&(u0=34041,x.type!==V1&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),x.type=V1,p0=r.convert(x.type))),Z0&&(L0?t.texStorage2D(3553,1,u0,F.width,F.height):t.texImage2D(3553,0,u0,F.width,F.height,0,d0,p0,null));else if(x.isDataTexture)if(b0.length>0&&l0){L0&&Z0&&t.texStorage2D(3553,L,u0,b0[0].width,b0[0].height);for(let H=0,Q=b0.length;H<Q;H++)f0=b0[H],L0?t.texSubImage2D(3553,H,0,0,f0.width,f0.height,d0,p0,f0.data):t.texImage2D(3553,H,u0,f0.width,f0.height,0,d0,p0,f0.data);x.generateMipmaps=!1}else L0?(Z0&&t.texStorage2D(3553,L,u0,F.width,F.height),t.texSubImage2D(3553,0,0,0,F.width,F.height,d0,p0,F.data)):t.texImage2D(3553,0,u0,F.width,F.height,0,d0,p0,F.data);else if(x.isCompressedTexture)if(x.isCompressedArrayTexture){L0&&Z0&&t.texStorage3D(35866,L,u0,b0[0].width,b0[0].height,F.depth);for(let H=0,Q=b0.length;H<Q;H++)f0=b0[H],x.format!==U9?d0!==null?L0?t.compressedTexSubImage3D(35866,H,0,0,0,f0.width,f0.height,F.depth,d0,f0.data,0,0):t.compressedTexImage3D(35866,H,u0,f0.width,f0.height,F.depth,0,f0.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):L0?t.texSubImage3D(35866,H,0,0,0,f0.width,f0.height,F.depth,d0,p0,f0.data):t.texImage3D(35866,H,u0,f0.width,f0.height,F.depth,0,d0,p0,f0.data)}else{L0&&Z0&&t.texStorage2D(3553,L,u0,b0[0].width,b0[0].height);for(let H=0,Q=b0.length;H<Q;H++)f0=b0[H],x.format!==U9?d0!==null?L0?t.compressedTexSubImage2D(3553,H,0,0,f0.width,f0.height,d0,f0.data):t.compressedTexImage2D(3553,H,u0,f0.width,f0.height,0,f0.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):L0?t.texSubImage2D(3553,H,0,0,f0.width,f0.height,d0,p0,f0.data):t.texImage2D(3553,H,u0,f0.width,f0.height,0,d0,p0,f0.data)}else if(x.isDataArrayTexture)L0?(Z0&&t.texStorage3D(35866,L,u0,F.width,F.height,F.depth),t.texSubImage3D(35866,0,0,0,0,F.width,F.height,F.depth,d0,p0,F.data)):t.texImage3D(35866,0,u0,F.width,F.height,F.depth,0,d0,p0,F.data);else if(x.isData3DTexture)L0?(Z0&&t.texStorage3D(32879,L,u0,F.width,F.height,F.depth),t.texSubImage3D(32879,0,0,0,0,F.width,F.height,F.depth,d0,p0,F.data)):t.texImage3D(32879,0,u0,F.width,F.height,F.depth,0,d0,p0,F.data);else if(x.isFramebufferTexture){if(Z0)if(L0)t.texStorage2D(3553,L,u0,F.width,F.height);else{let H=F.width,Q=F.height;for(let h0=0;h0<L;h0++)t.texImage2D(3553,h0,u0,H,Q,0,d0,p0,null),H>>=1,Q>>=1}}else if(b0.length>0&&l0){L0&&Z0&&t.texStorage2D(3553,L,u0,b0[0].width,b0[0].height);for(let H=0,Q=b0.length;H<Q;H++)f0=b0[H],L0?t.texSubImage2D(3553,H,0,0,d0,p0,f0):t.texImage2D(3553,H,u0,d0,p0,f0);x.generateMipmaps=!1}else L0?(Z0&&t.texStorage2D(3553,L,u0,F.width,F.height),t.texSubImage2D(3553,0,0,0,d0,p0,F)):t.texImage2D(3553,0,u0,d0,p0,F);A(x,l0)&&R($),C.__version=o0.version,x.onUpdate&&x.onUpdate(x)}b.__version=x.version}function v0(b,x,G){if(x.image.length!==6)return;const $=z(b,x),t0=x.source;t.bindTexture(34067,b.__webglTexture,33984+G);const o0=n.get(t0);if(t0.version!==o0.__version||$===!0){t.activeTexture(33984+G),a.pixelStorei(37440,x.flipY),a.pixelStorei(37441,x.premultiplyAlpha),a.pixelStorei(3317,x.unpackAlignment),a.pixelStorei(37443,0);const C=x.isCompressedTexture||x.image[0].isCompressedTexture,j=x.image[0]&&x.image[0].isDataTexture,F=[];for(let H=0;H<6;H++)!C&&!j?F[H]=w(x.image[H],!1,!0,l):F[H]=j?x.image[H].image:x.image[H],F[H]=s9(x,F[H]);const l0=F[0],d0=v(l0)||s,p0=r.convert(x.format,x.encoding),u0=r.convert(x.type),f0=N(x.internalFormat,p0,u0,x.encoding),b0=s&&x.isVideoTexture!==!0,L0=o0.__version===void 0||$===!0;let Z0=M(x,l0,d0);c0(34067,x,d0);let L;if(C){b0&&L0&&t.texStorage2D(34067,Z0,f0,l0.width,l0.height);for(let H=0;H<6;H++){L=F[H].mipmaps;for(let Q=0;Q<L.length;Q++){const h0=L[Q];x.format!==U9?p0!==null?b0?t.compressedTexSubImage2D(34069+H,Q,0,0,h0.width,h0.height,p0,h0.data):t.compressedTexImage2D(34069+H,Q,f0,h0.width,h0.height,0,h0.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):b0?t.texSubImage2D(34069+H,Q,0,0,h0.width,h0.height,p0,u0,h0.data):t.texImage2D(34069+H,Q,f0,h0.width,h0.height,0,p0,u0,h0.data)}}}else{L=x.mipmaps,b0&&L0&&(L.length>0&&Z0++,t.texStorage2D(34067,Z0,f0,F[0].width,F[0].height));for(let H=0;H<6;H++)if(j){b0?t.texSubImage2D(34069+H,0,0,0,F[H].width,F[H].height,p0,u0,F[H].data):t.texImage2D(34069+H,0,f0,F[H].width,F[H].height,0,p0,u0,F[H].data);for(let Q=0;Q<L.length;Q++){const g0=L[Q].image[H].image;b0?t.texSubImage2D(34069+H,Q+1,0,0,g0.width,g0.height,p0,u0,g0.data):t.texImage2D(34069+H,Q+1,f0,g0.width,g0.height,0,p0,u0,g0.data)}}else{b0?t.texSubImage2D(34069+H,0,0,0,p0,u0,F[H]):t.texImage2D(34069+H,0,f0,p0,u0,F[H]);for(let Q=0;Q<L.length;Q++){const h0=L[Q];b0?t.texSubImage2D(34069+H,Q+1,0,0,p0,u0,h0.image[H]):t.texImage2D(34069+H,Q+1,f0,p0,u0,h0.image[H])}}}A(x,d0)&&R(34067),o0.__version=t0.version,x.onUpdate&&x.onUpdate(x)}b.__version=x.version}function r0(b,x,G,$,t0){const o0=r.convert(G.format,G.encoding),C=r.convert(G.type),j=N(G.internalFormat,o0,C,G.encoding);n.get(x).__hasExternalTextures||(t0===32879||t0===35866?t.texImage3D(t0,0,j,x.width,x.height,x.depth,0,o0,C,null):t.texImage2D(t0,0,j,x.width,x.height,0,o0,C,null)),t.bindFramebuffer(36160,b),O0(x)?f.framebufferTexture2DMultisampleEXT(36160,$,t0,n.get(G).__webglTexture,0,Y0(x)):(t0===3553||t0>=34069&&t0<=34074)&&a.framebufferTexture2D(36160,$,t0,n.get(G).__webglTexture,0),t.bindFramebuffer(36160,null)}function x0(b,x,G){if(a.bindRenderbuffer(36161,b),x.depthBuffer&&!x.stencilBuffer){let $=33189;if(G||O0(x)){const t0=x.depthTexture;t0&&t0.isDepthTexture&&(t0.type===f1?$=36012:t0.type===d1&&($=33190));const o0=Y0(x);O0(x)?f.renderbufferStorageMultisampleEXT(36161,o0,$,x.width,x.height):a.renderbufferStorageMultisample(36161,o0,$,x.width,x.height)}else a.renderbufferStorage(36161,$,x.width,x.height);a.framebufferRenderbuffer(36160,36096,36161,b)}else if(x.depthBuffer&&x.stencilBuffer){const $=Y0(x);G&&O0(x)===!1?a.renderbufferStorageMultisample(36161,$,35056,x.width,x.height):O0(x)?f.renderbufferStorageMultisampleEXT(36161,$,35056,x.width,x.height):a.renderbufferStorage(36161,34041,x.width,x.height),a.framebufferRenderbuffer(36160,33306,36161,b)}else{const $=x.isWebGLMultipleRenderTargets===!0?x.texture:[x.texture];for(let t0=0;t0<$.length;t0++){const o0=$[t0],C=r.convert(o0.format,o0.encoding),j=r.convert(o0.type),F=N(o0.internalFormat,C,j,o0.encoding),l0=Y0(x);G&&O0(x)===!1?a.renderbufferStorageMultisample(36161,l0,F,x.width,x.height):O0(x)?f.renderbufferStorageMultisampleEXT(36161,l0,F,x.width,x.height):a.renderbufferStorage(36161,F,x.width,x.height)}}a.bindRenderbuffer(36161,null)}function F0(b,x){if(x&&x.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,b),!(x.depthTexture&&x.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(x.depthTexture).__webglTexture||x.depthTexture.image.width!==x.width||x.depthTexture.image.height!==x.height)&&(x.depthTexture.image.width=x.width,x.depthTexture.image.height=x.height,x.depthTexture.needsUpdate=!0),e0(x.depthTexture,0);const $=n.get(x.depthTexture).__webglTexture,t0=Y0(x);if(x.depthTexture.format===p1)O0(x)?f.framebufferTexture2DMultisampleEXT(36160,36096,3553,$,0,t0):a.framebufferTexture2D(36160,36096,3553,$,0);else if(x.depthTexture.format===X1)O0(x)?f.framebufferTexture2DMultisampleEXT(36160,33306,3553,$,0,t0):a.framebufferTexture2D(36160,33306,3553,$,0);else throw new Error("Unknown depthTexture format")}function m0(b){const x=n.get(b),G=b.isWebGLCubeRenderTarget===!0;if(b.depthTexture&&!x.__autoAllocateDepthBuffer){if(G)throw new Error("target.depthTexture not supported in Cube render targets");F0(x.__webglFramebuffer,b)}else if(G){x.__webglDepthbuffer=[];for(let $=0;$<6;$++)t.bindFramebuffer(36160,x.__webglFramebuffer[$]),x.__webglDepthbuffer[$]=a.createRenderbuffer(),x0(x.__webglDepthbuffer[$],b,!1)}else t.bindFramebuffer(36160,x.__webglFramebuffer),x.__webglDepthbuffer=a.createRenderbuffer(),x0(x.__webglDepthbuffer,b,!1);t.bindFramebuffer(36160,null)}function T0(b,x,G){const $=n.get(b);x!==void 0&&r0($.__webglFramebuffer,b,b.texture,36064,3553),G!==void 0&&m0(b)}function X0(b){const x=b.texture,G=n.get(b),$=n.get(x);b.addEventListener("dispose",B),b.isWebGLMultipleRenderTargets!==!0&&($.__webglTexture===void 0&&($.__webglTexture=a.createTexture()),$.__version=x.version,o.memory.textures++);const t0=b.isWebGLCubeRenderTarget===!0,o0=b.isWebGLMultipleRenderTargets===!0,C=v(b)||s;if(t0){G.__webglFramebuffer=[];for(let j=0;j<6;j++)G.__webglFramebuffer[j]=a.createFramebuffer()}else{if(G.__webglFramebuffer=a.createFramebuffer(),o0)if(i.drawBuffers){const j=b.texture;for(let F=0,l0=j.length;F<l0;F++){const d0=n.get(j[F]);d0.__webglTexture===void 0&&(d0.__webglTexture=a.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(s&&b.samples>0&&O0(b)===!1){const j=o0?x:[x];G.__webglMultisampledFramebuffer=a.createFramebuffer(),G.__webglColorRenderbuffer=[],t.bindFramebuffer(36160,G.__webglMultisampledFramebuffer);for(let F=0;F<j.length;F++){const l0=j[F];G.__webglColorRenderbuffer[F]=a.createRenderbuffer(),a.bindRenderbuffer(36161,G.__webglColorRenderbuffer[F]);const d0=r.convert(l0.format,l0.encoding),p0=r.convert(l0.type),u0=N(l0.internalFormat,d0,p0,l0.encoding,b.isXRRenderTarget===!0),f0=Y0(b);a.renderbufferStorageMultisample(36161,f0,u0,b.width,b.height),a.framebufferRenderbuffer(36160,36064+F,36161,G.__webglColorRenderbuffer[F])}a.bindRenderbuffer(36161,null),b.depthBuffer&&(G.__webglDepthRenderbuffer=a.createRenderbuffer(),x0(G.__webglDepthRenderbuffer,b,!0)),t.bindFramebuffer(36160,null)}}if(t0){t.bindTexture(34067,$.__webglTexture),c0(34067,x,C);for(let j=0;j<6;j++)r0(G.__webglFramebuffer[j],b,x,36064,34069+j);A(x,C)&&R(34067),t.unbindTexture()}else if(o0){const j=b.texture;for(let F=0,l0=j.length;F<l0;F++){const d0=j[F],p0=n.get(d0);t.bindTexture(3553,p0.__webglTexture),c0(3553,d0,C),r0(G.__webglFramebuffer,b,d0,36064+F,3553),A(d0,C)&&R(3553)}t.unbindTexture()}else{let j=3553;(b.isWebGL3DRenderTarget||b.isWebGLArrayRenderTarget)&&(s?j=b.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(j,$.__webglTexture),c0(j,x,C),r0(G.__webglFramebuffer,b,x,36064,j),A(x,C)&&R(j),t.unbindTexture()}b.depthBuffer&&m0(b)}function W0(b){const x=v(b)||s,G=b.isWebGLMultipleRenderTargets===!0?b.texture:[b.texture];for(let $=0,t0=G.length;$<t0;$++){const o0=G[$];if(A(o0,x)){const C=b.isWebGLCubeRenderTarget?34067:3553,j=n.get(o0).__webglTexture;t.bindTexture(C,j),R(C),t.unbindTexture()}}}function $0(b){if(s&&b.samples>0&&O0(b)===!1){const x=b.isWebGLMultipleRenderTargets?b.texture:[b.texture],G=b.width,$=b.height;let t0=16384;const o0=[],C=b.stencilBuffer?33306:36096,j=n.get(b),F=b.isWebGLMultipleRenderTargets===!0;if(F)for(let l0=0;l0<x.length;l0++)t.bindFramebuffer(36160,j.__webglMultisampledFramebuffer),a.framebufferRenderbuffer(36160,36064+l0,36161,null),t.bindFramebuffer(36160,j.__webglFramebuffer),a.framebufferTexture2D(36009,36064+l0,3553,null,0);t.bindFramebuffer(36008,j.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,j.__webglFramebuffer);for(let l0=0;l0<x.length;l0++){o0.push(36064+l0),b.depthBuffer&&o0.push(C);const d0=j.__ignoreDepthValues!==void 0?j.__ignoreDepthValues:!1;if(d0===!1&&(b.depthBuffer&&(t0|=256),b.stencilBuffer&&(t0|=1024)),F&&a.framebufferRenderbuffer(36008,36064,36161,j.__webglColorRenderbuffer[l0]),d0===!0&&(a.invalidateFramebuffer(36008,[C]),a.invalidateFramebuffer(36009,[C])),F){const p0=n.get(x[l0]).__webglTexture;a.framebufferTexture2D(36009,36064,3553,p0,0)}a.blitFramebuffer(0,0,G,$,0,0,G,$,t0,9728),m&&a.invalidateFramebuffer(36008,o0)}if(t.bindFramebuffer(36008,null),t.bindFramebuffer(36009,null),F)for(let l0=0;l0<x.length;l0++){t.bindFramebuffer(36160,j.__webglMultisampledFramebuffer),a.framebufferRenderbuffer(36160,36064+l0,36161,j.__webglColorRenderbuffer[l0]);const d0=n.get(x[l0]).__webglTexture;t.bindFramebuffer(36160,j.__webglFramebuffer),a.framebufferTexture2D(36009,36064+l0,3553,d0,0)}t.bindFramebuffer(36009,j.__webglMultisampledFramebuffer)}}function Y0(b){return Math.min(d,b.samples)}function O0(b){const x=n.get(b);return s&&b.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&x.__useRenderToTexture!==!1}function G0(b){const x=o.render.frame;g.get(b)!==x&&(g.set(b,x),b.update())}function s9(b,x){const G=b.encoding,$=b.format,t0=b.type;return b.isCompressedTexture===!0||b.isVideoTexture===!0||b.format===B8||G!==g1&&(G===k0?s===!1?e.has("EXT_sRGB")===!0&&$===U9?(b.format=B8,b.minFilter=T9,b.generateMipmaps=!1):x=k5.sRGBToLinear(x):($!==U9||t0!==m1)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",G)),x}this.allocateTextureUnit=X,this.resetTextureUnits=K,this.setTexture2D=e0,this.setTexture2DArray=M0,this.setTexture3D=i0,this.setTextureCube=k,this.rebindTextures=T0,this.setupRenderTarget=X0,this.updateRenderTargetMipmap=W0,this.updateMultisampleRenderTarget=$0,this.setupDepthRenderbuffer=m0,this.setupFrameBufferTexture=r0,this.useMultisampledRTT=O0}function ni(a,e,t){const n=t.isWebGL2;function i(r,o=null){let s;if(r===m1)return 5121;if(r===H3)return 32819;if(r===W3)return 32820;if(r===G3)return 5120;if(r===k3)return 5122;if(r===F5)return 5123;if(r===V3)return 5124;if(r===d1)return 5125;if(r===f1)return 5126;if(r===o2)return n?5131:(s=e.get("OES_texture_half_float"),s!==null?s.HALF_FLOAT_OES:null);if(r===q3)return 6406;if(r===U9)return 6408;if(r===X3)return 6409;if(r===j3)return 6410;if(r===p1)return 6402;if(r===X1)return 34041;if(r===B8)return s=e.get("EXT_sRGB"),s!==null?s.SRGB_ALPHA_EXT:null;if(r===Y3)return 6403;if(r===Z3)return 36244;if(r===K3)return 33319;if(r===$3)return 33320;if(r===J3)return 36249;if(r===e8||r===t8||r===n8||r===i8)if(o===k0)if(s=e.get("WEBGL_compressed_texture_s3tc_srgb"),s!==null){if(r===e8)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(r===t8)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(r===n8)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(r===i8)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(s=e.get("WEBGL_compressed_texture_s3tc"),s!==null){if(r===e8)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(r===t8)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(r===n8)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(r===i8)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(r===a7||r===o7||r===l7||r===c7)if(s=e.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(r===a7)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(r===o7)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(r===l7)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(r===c7)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(r===Q3)return s=e.get("WEBGL_compressed_texture_etc1"),s!==null?s.COMPRESSED_RGB_ETC1_WEBGL:null;if(r===u7||r===h7)if(s=e.get("WEBGL_compressed_texture_etc"),s!==null){if(r===u7)return o===k0?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(r===h7)return o===k0?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(r===d7||r===f7||r===p7||r===m7||r===g7||r===_7||r===x7||r===v7||r===M7||r===S7||r===y7||r===b7||r===w7||r===E7)if(s=e.get("WEBGL_compressed_texture_astc"),s!==null){if(r===d7)return o===k0?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(r===f7)return o===k0?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(r===p7)return o===k0?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(r===m7)return o===k0?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(r===g7)return o===k0?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(r===_7)return o===k0?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(r===x7)return o===k0?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(r===v7)return o===k0?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(r===M7)return o===k0?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(r===S7)return o===k0?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(r===y7)return o===k0?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(r===b7)return o===k0?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(r===w7)return o===k0?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(r===E7)return o===k0?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(r===r8)if(s=e.get("EXT_texture_compression_bptc"),s!==null){if(r===r8)return o===k0?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(r===e6||r===T7||r===A7||r===C7)if(s=e.get("EXT_texture_compression_rgtc"),s!==null){if(r===r8)return s.COMPRESSED_RED_RGTC1_EXT;if(r===T7)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(r===A7)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(r===C7)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return r===V1?n?34042:(s=e.get("WEBGL_depth_texture"),s!==null?s.UNSIGNED_INT_24_8_WEBGL:null):a[r]!==void 0?a[r]:null}return{convert:i}}class ii extends S9{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class i2 extends j0{constructor(){super(),this.isGroup=!0,this.type="Group"}}const ri={type:"move"};class C8{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new i2,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new i2,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new P,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new P),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new i2,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new P,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new P),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,r=null,o=null;const s=this._targetRay,c=this._grip,l=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(l&&e.hand){o=!0;for(const _ of e.hand.values()){const p=t.getJointPose(_,n),h=this._getHandJoint(l,_);p!==null&&(h.matrix.fromArray(p.transform.matrix),h.matrix.decompose(h.position,h.rotation,h.scale),h.jointRadius=p.radius),h.visible=p!==null}const u=l.joints["index-finger-tip"],d=l.joints["thumb-tip"],f=u.position.distanceTo(d.position),m=.02,g=.005;l.inputState.pinching&&f>m+g?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&f<=m-g&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else c!==null&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),r!==null&&(c.matrix.fromArray(r.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),r.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(r.linearVelocity)):c.hasLinearVelocity=!1,r.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(r.angularVelocity)):c.hasAngularVelocity=!1));s!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&r!==null&&(i=r),i!==null&&(s.matrix.fromArray(i.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),i.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(i.linearVelocity)):s.hasLinearVelocity=!1,i.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(i.angularVelocity)):s.hasAngularVelocity=!1,this.dispatchEvent(ri)))}return s!==null&&(s.visible=i!==null),c!==null&&(c.visible=r!==null),l!==null&&(l.visible=o!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new i2;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class si extends m9{constructor(e,t,n,i,r,o,s,c,l,u){if(u=u!==void 0?u:p1,u!==p1&&u!==X1)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&u===p1&&(n=d1),n===void 0&&u===X1&&(n=V1),super(null,i,r,o,s,c,u,n,l),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=s!==void 0?s:d9,this.minFilter=c!==void 0?c:d9,this.flipY=!1,this.generateMipmaps=!1}}class ai extends M1{constructor(e,t){super();const n=this;let i=null,r=1,o=null,s="local-floor",c=1,l=null,u=null,d=null,f=null,m=null,g=null;const _=t.getContextAttributes();let p=null,h=null;const E=[],w=[],v=new Set,y=new Map,A=new S9;A.layers.enable(1),A.viewport=new H0;const R=new S9;R.layers.enable(2),R.viewport=new H0;const N=[A,R],M=new ii;M.layers.enable(1),M.layers.enable(2);let T=null,Y=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(k){let Z=E[k];return Z===void 0&&(Z=new C8,E[k]=Z),Z.getTargetRaySpace()},this.getControllerGrip=function(k){let Z=E[k];return Z===void 0&&(Z=new C8,E[k]=Z),Z.getGripSpace()},this.getHand=function(k){let Z=E[k];return Z===void 0&&(Z=new C8,E[k]=Z),Z.getHandSpace()};function B(k){const Z=w.indexOf(k.inputSource);if(Z===-1)return;const a0=E[Z];a0!==void 0&&a0.dispatchEvent({type:k.type,data:k.inputSource})}function I(){i.removeEventListener("select",B),i.removeEventListener("selectstart",B),i.removeEventListener("selectend",B),i.removeEventListener("squeeze",B),i.removeEventListener("squeezestart",B),i.removeEventListener("squeezeend",B),i.removeEventListener("end",I),i.removeEventListener("inputsourceschange",O);for(let k=0;k<E.length;k++){const Z=w[k];Z!==null&&(w[k]=null,E[k].disconnect(Z))}T=null,Y=null,e.setRenderTarget(p),m=null,f=null,d=null,i=null,h=null,i0.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(k){r=k,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(k){s=k,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||o},this.setReferenceSpace=function(k){l=k},this.getBaseLayer=function(){return f!==null?f:m},this.getBinding=function(){return d},this.getFrame=function(){return g},this.getSession=function(){return i},this.setSession=async function(k){if(i=k,i!==null){if(p=e.getRenderTarget(),i.addEventListener("select",B),i.addEventListener("selectstart",B),i.addEventListener("selectend",B),i.addEventListener("squeeze",B),i.addEventListener("squeezestart",B),i.addEventListener("squeezeend",B),i.addEventListener("end",I),i.addEventListener("inputsourceschange",O),_.xrCompatible!==!0&&await t.makeXRCompatible(),i.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const Z={antialias:i.renderState.layers===void 0?_.antialias:!0,alpha:_.alpha,depth:_.depth,stencil:_.stencil,framebufferScaleFactor:r};m=new XRWebGLLayer(i,t,Z),i.updateRenderState({baseLayer:m}),h=new _1(m.framebufferWidth,m.framebufferHeight,{format:U9,type:m1,encoding:e.outputEncoding,stencilBuffer:_.stencil})}else{let Z=null,a0=null,c0=null;_.depth&&(c0=_.stencil?35056:33190,Z=_.stencil?X1:p1,a0=_.stencil?V1:d1);const z={colorFormat:32856,depthFormat:c0,scaleFactor:r};d=new XRWebGLBinding(i,t),f=d.createProjectionLayer(z),i.updateRenderState({layers:[f]}),h=new _1(f.textureWidth,f.textureHeight,{format:U9,type:m1,depthTexture:new si(f.textureWidth,f.textureHeight,a0,void 0,void 0,void 0,void 0,void 0,void 0,Z),stencilBuffer:_.stencil,encoding:e.outputEncoding,samples:_.antialias?4:0});const y0=e.properties.get(h);y0.__ignoreDepthValues=f.ignoreDepthValues}h.isXRRenderTarget=!0,this.setFoveation(c),l=null,o=await i.requestReferenceSpace(s),i0.setContext(i),i0.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};function O(k){for(let Z=0;Z<k.removed.length;Z++){const a0=k.removed[Z],c0=w.indexOf(a0);c0>=0&&(w[c0]=null,E[c0].disconnect(a0))}for(let Z=0;Z<k.added.length;Z++){const a0=k.added[Z];let c0=w.indexOf(a0);if(c0===-1){for(let y0=0;y0<E.length;y0++)if(y0>=w.length){w.push(a0),c0=y0;break}else if(w[y0]===null){w[y0]=a0,c0=y0;break}if(c0===-1)break}const z=E[c0];z&&z.connect(a0)}}const W=new P,J=new P;function K(k,Z,a0){W.setFromMatrixPosition(Z.matrixWorld),J.setFromMatrixPosition(a0.matrixWorld);const c0=W.distanceTo(J),z=Z.projectionMatrix.elements,y0=a0.projectionMatrix.elements,v0=z[14]/(z[10]-1),r0=z[14]/(z[10]+1),x0=(z[9]+1)/z[5],F0=(z[9]-1)/z[5],m0=(z[8]-1)/z[0],T0=(y0[8]+1)/y0[0],X0=v0*m0,W0=v0*T0,$0=c0/(-m0+T0),Y0=$0*-m0;Z.matrixWorld.decompose(k.position,k.quaternion,k.scale),k.translateX(Y0),k.translateZ($0),k.matrixWorld.compose(k.position,k.quaternion,k.scale),k.matrixWorldInverse.copy(k.matrixWorld).invert();const O0=v0+$0,G0=r0+$0,s9=X0-Y0,b=W0+(c0-Y0),x=x0*r0/G0*O0,G=F0*r0/G0*O0;k.projectionMatrix.makePerspective(s9,b,x,G,O0,G0),k.projectionMatrixInverse.copy(k.projectionMatrix).invert()}function X(k,Z){Z===null?k.matrixWorld.copy(k.matrix):k.matrixWorld.multiplyMatrices(Z.matrixWorld,k.matrix),k.matrixWorldInverse.copy(k.matrixWorld).invert()}this.updateCamera=function(k){if(i===null)return;M.near=R.near=A.near=k.near,M.far=R.far=A.far=k.far,(T!==M.near||Y!==M.far)&&(i.updateRenderState({depthNear:M.near,depthFar:M.far}),T=M.near,Y=M.far);const Z=k.parent,a0=M.cameras;X(M,Z);for(let c0=0;c0<a0.length;c0++)X(a0[c0],Z);a0.length===2?K(M,A,R):M.projectionMatrix.copy(A.projectionMatrix),n0(k,M,Z)};function n0(k,Z,a0){a0===null?k.matrix.copy(Z.matrixWorld):(k.matrix.copy(a0.matrixWorld),k.matrix.invert(),k.matrix.multiply(Z.matrixWorld)),k.matrix.decompose(k.position,k.quaternion,k.scale),k.updateMatrixWorld(!0);const c0=k.children;for(let z=0,y0=c0.length;z<y0;z++)c0[z].updateMatrixWorld(!0);k.projectionMatrix.copy(Z.projectionMatrix),k.projectionMatrixInverse.copy(Z.projectionMatrixInverse),k.isPerspectiveCamera&&(k.fov=G8*2*Math.atan(1/k.projectionMatrix.elements[5]),k.zoom=1)}this.getCamera=function(){return M},this.getFoveation=function(){if(!(f===null&&m===null))return c},this.setFoveation=function(k){c=k,f!==null&&(f.fixedFoveation=k),m!==null&&m.fixedFoveation!==void 0&&(m.fixedFoveation=k)},this.getPlanes=function(){return v};let e0=null;function M0(k,Z){if(u=Z.getViewerPose(l||o),g=Z,u!==null){const a0=u.views;m!==null&&(e.setRenderTargetFramebuffer(h,m.framebuffer),e.setRenderTarget(h));let c0=!1;a0.length!==M.cameras.length&&(M.cameras.length=0,c0=!0);for(let z=0;z<a0.length;z++){const y0=a0[z];let v0=null;if(m!==null)v0=m.getViewport(y0);else{const x0=d.getViewSubImage(f,y0);v0=x0.viewport,z===0&&(e.setRenderTargetTextures(h,x0.colorTexture,f.ignoreDepthValues?void 0:x0.depthStencilTexture),e.setRenderTarget(h))}let r0=N[z];r0===void 0&&(r0=new S9,r0.layers.enable(z),r0.viewport=new H0,N[z]=r0),r0.matrix.fromArray(y0.transform.matrix),r0.matrix.decompose(r0.position,r0.quaternion,r0.scale),r0.projectionMatrix.fromArray(y0.projectionMatrix),r0.projectionMatrixInverse.copy(r0.projectionMatrix).invert(),r0.viewport.set(v0.x,v0.y,v0.width,v0.height),z===0&&(M.matrix.copy(r0.matrix),M.matrix.decompose(M.position,M.quaternion,M.scale)),c0===!0&&M.cameras.push(r0)}}for(let a0=0;a0<E.length;a0++){const c0=w[a0],z=E[a0];c0!==null&&z!==void 0&&z.update(c0,Z,l||o)}if(e0&&e0(k,Z),Z.detectedPlanes){n.dispatchEvent({type:"planesdetected",data:Z.detectedPlanes});let a0=null;for(const c0 of v)Z.detectedPlanes.has(c0)||(a0===null&&(a0=[]),a0.push(c0));if(a0!==null)for(const c0 of a0)v.delete(c0),y.delete(c0),n.dispatchEvent({type:"planeremoved",data:c0});for(const c0 of Z.detectedPlanes)if(!v.has(c0))v.add(c0),y.set(c0,Z.lastChangedTime),n.dispatchEvent({type:"planeadded",data:c0});else{const z=y.get(c0);c0.lastChangedTime>z&&(y.set(c0,c0.lastChangedTime),n.dispatchEvent({type:"planechanged",data:c0}))}}g=null}const i0=new $5;i0.setAnimationLoop(M0),this.setAnimationLoop=function(k){e0=k},this.dispose=function(){}}}function oi(a,e){function t(p,h){p.matrixAutoUpdate===!0&&p.updateMatrix(),h.value.copy(p.matrix)}function n(p,h){h.color.getRGB(p.fogColor.value,Y5(a)),h.isFog?(p.fogNear.value=h.near,p.fogFar.value=h.far):h.isFogExp2&&(p.fogDensity.value=h.density)}function i(p,h,E,w,v){h.isMeshBasicMaterial||h.isMeshLambertMaterial?r(p,h):h.isMeshToonMaterial?(r(p,h),d(p,h)):h.isMeshPhongMaterial?(r(p,h),u(p,h)):h.isMeshStandardMaterial?(r(p,h),f(p,h),h.isMeshPhysicalMaterial&&m(p,h,v)):h.isMeshMatcapMaterial?(r(p,h),g(p,h)):h.isMeshDepthMaterial?r(p,h):h.isMeshDistanceMaterial?(r(p,h),_(p,h)):h.isMeshNormalMaterial?r(p,h):h.isLineBasicMaterial?(o(p,h),h.isLineDashedMaterial&&s(p,h)):h.isPointsMaterial?c(p,h,E,w):h.isSpriteMaterial?l(p,h):h.isShadowMaterial?(p.color.value.copy(h.color),p.opacity.value=h.opacity):h.isShaderMaterial&&(h.uniformsNeedUpdate=!1)}function r(p,h){p.opacity.value=h.opacity,h.color&&p.diffuse.value.copy(h.color),h.emissive&&p.emissive.value.copy(h.emissive).multiplyScalar(h.emissiveIntensity),h.map&&(p.map.value=h.map,t(h.map,p.mapTransform)),h.alphaMap&&(p.alphaMap.value=h.alphaMap,t(h.alphaMap,p.alphaMapTransform)),h.bumpMap&&(p.bumpMap.value=h.bumpMap,t(h.bumpMap,p.bumpMapTransform),p.bumpScale.value=h.bumpScale,h.side===p9&&(p.bumpScale.value*=-1)),h.normalMap&&(p.normalMap.value=h.normalMap,t(h.normalMap,p.normalMapTransform),p.normalScale.value.copy(h.normalScale),h.side===p9&&p.normalScale.value.negate()),h.displacementMap&&(p.displacementMap.value=h.displacementMap,t(h.displacementMap,p.displacementMapTransform),p.displacementScale.value=h.displacementScale,p.displacementBias.value=h.displacementBias),h.emissiveMap&&(p.emissiveMap.value=h.emissiveMap,t(h.emissiveMap,p.emissiveMapTransform)),h.specularMap&&(p.specularMap.value=h.specularMap,t(h.specularMap,p.specularMapTransform)),h.alphaTest>0&&(p.alphaTest.value=h.alphaTest);const E=e.get(h).envMap;if(E&&(p.envMap.value=E,p.flipEnvMap.value=E.isCubeTexture&&E.isRenderTargetTexture===!1?-1:1,p.reflectivity.value=h.reflectivity,p.ior.value=h.ior,p.refractionRatio.value=h.refractionRatio),h.lightMap){p.lightMap.value=h.lightMap;const w=a.useLegacyLights===!0?Math.PI:1;p.lightMapIntensity.value=h.lightMapIntensity*w,t(h.lightMap,p.lightMapTransform)}h.aoMap&&(p.aoMap.value=h.aoMap,p.aoMapIntensity.value=h.aoMapIntensity,t(h.aoMap,p.aoMapTransform))}function o(p,h){p.diffuse.value.copy(h.color),p.opacity.value=h.opacity,h.map&&(p.map.value=h.map,t(h.map,p.mapTransform))}function s(p,h){p.dashSize.value=h.dashSize,p.totalSize.value=h.dashSize+h.gapSize,p.scale.value=h.scale}function c(p,h,E,w){p.diffuse.value.copy(h.color),p.opacity.value=h.opacity,p.size.value=h.size*E,p.scale.value=w*.5,h.map&&(p.map.value=h.map,t(h.map,p.uvTransform)),h.alphaMap&&(p.alphaMap.value=h.alphaMap),h.alphaTest>0&&(p.alphaTest.value=h.alphaTest)}function l(p,h){p.diffuse.value.copy(h.color),p.opacity.value=h.opacity,p.rotation.value=h.rotation,h.map&&(p.map.value=h.map,t(h.map,p.mapTransform)),h.alphaMap&&(p.alphaMap.value=h.alphaMap),h.alphaTest>0&&(p.alphaTest.value=h.alphaTest)}function u(p,h){p.specular.value.copy(h.specular),p.shininess.value=Math.max(h.shininess,1e-4)}function d(p,h){h.gradientMap&&(p.gradientMap.value=h.gradientMap)}function f(p,h){p.metalness.value=h.metalness,h.metalnessMap&&(p.metalnessMap.value=h.metalnessMap,t(h.metalnessMap,p.metalnessMapTransform)),p.roughness.value=h.roughness,h.roughnessMap&&(p.roughnessMap.value=h.roughnessMap,t(h.roughnessMap,p.roughnessMapTransform)),e.get(h).envMap&&(p.envMapIntensity.value=h.envMapIntensity)}function m(p,h,E){p.ior.value=h.ior,h.sheen>0&&(p.sheenColor.value.copy(h.sheenColor).multiplyScalar(h.sheen),p.sheenRoughness.value=h.sheenRoughness,h.sheenColorMap&&(p.sheenColorMap.value=h.sheenColorMap,t(h.sheenColorMap,p.sheenColorMapTransform)),h.sheenRoughnessMap&&(p.sheenRoughnessMap.value=h.sheenRoughnessMap,t(h.sheenRoughnessMap,p.sheenRoughnessMapTransform))),h.clearcoat>0&&(p.clearcoat.value=h.clearcoat,p.clearcoatRoughness.value=h.clearcoatRoughness,h.clearcoatMap&&(p.clearcoatMap.value=h.clearcoatMap,t(h.clearcoatMap,p.clearcoatMapTransform)),h.clearcoatRoughnessMap&&(p.clearcoatRoughnessMap.value=h.clearcoatRoughnessMap,t(h.clearcoatRoughnessMap,p.clearcoatRoughnessMapTransform)),h.clearcoatNormalMap&&(p.clearcoatNormalMap.value=h.clearcoatNormalMap,t(h.clearcoatNormalMap,p.clearcoatNormalMapTransform),p.clearcoatNormalScale.value.copy(h.clearcoatNormalScale),h.side===p9&&p.clearcoatNormalScale.value.negate())),h.iridescence>0&&(p.iridescence.value=h.iridescence,p.iridescenceIOR.value=h.iridescenceIOR,p.iridescenceThicknessMinimum.value=h.iridescenceThicknessRange[0],p.iridescenceThicknessMaximum.value=h.iridescenceThicknessRange[1],h.iridescenceMap&&(p.iridescenceMap.value=h.iridescenceMap,t(h.iridescenceMap,p.iridescenceMapTransform)),h.iridescenceThicknessMap&&(p.iridescenceThicknessMap.value=h.iridescenceThicknessMap,t(h.iridescenceThicknessMap,p.iridescenceThicknessMapTransform))),h.transmission>0&&(p.transmission.value=h.transmission,p.transmissionSamplerMap.value=E.texture,p.transmissionSamplerSize.value.set(E.width,E.height),h.transmissionMap&&(p.transmissionMap.value=h.transmissionMap,t(h.transmissionMap,p.transmissionMapTransform)),p.thickness.value=h.thickness,h.thicknessMap&&(p.thicknessMap.value=h.thicknessMap,t(h.thicknessMap,p.thicknessMapTransform)),p.attenuationDistance.value=h.attenuationDistance,p.attenuationColor.value.copy(h.attenuationColor)),p.specularIntensity.value=h.specularIntensity,p.specularColor.value.copy(h.specularColor),h.specularColorMap&&(p.specularColorMap.value=h.specularColorMap,t(h.specularColorMap,p.specularColorMapTransform)),h.specularIntensityMap&&(p.specularIntensityMap.value=h.specularIntensityMap,t(h.specularIntensityMap,p.specularIntensityMapTransform))}function g(p,h){h.matcap&&(p.matcap.value=h.matcap)}function _(p,h){const E=e.get(h).light;p.referencePosition.value.setFromMatrixPosition(E.matrixWorld),p.nearDistance.value=E.shadow.camera.near,p.farDistance.value=E.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function li(a,e,t,n){let i={},r={},o=[];const s=t.isWebGL2?a.getParameter(35375):0;function c(E,w){const v=w.program;n.uniformBlockBinding(E,v)}function l(E,w){let v=i[E.id];v===void 0&&(g(E),v=u(E),i[E.id]=v,E.addEventListener("dispose",p));const y=w.program;n.updateUBOMapping(E,y);const A=e.render.frame;r[E.id]!==A&&(f(E),r[E.id]=A)}function u(E){const w=d();E.__bindingPointIndex=w;const v=a.createBuffer(),y=E.__size,A=E.usage;return a.bindBuffer(35345,v),a.bufferData(35345,y,A),a.bindBuffer(35345,null),a.bindBufferBase(35345,w,v),v}function d(){for(let E=0;E<s;E++)if(o.indexOf(E)===-1)return o.push(E),E;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function f(E){const w=i[E.id],v=E.uniforms,y=E.__cache;a.bindBuffer(35345,w);for(let A=0,R=v.length;A<R;A++){const N=v[A];if(m(N,A,y)===!0){const M=N.__offset,T=Array.isArray(N.value)?N.value:[N.value];let Y=0;for(let B=0;B<T.length;B++){const I=T[B],O=_(I);typeof I=="number"?(N.__data[0]=I,a.bufferSubData(35345,M+Y,N.__data)):I.isMatrix3?(N.__data[0]=I.elements[0],N.__data[1]=I.elements[1],N.__data[2]=I.elements[2],N.__data[3]=I.elements[0],N.__data[4]=I.elements[3],N.__data[5]=I.elements[4],N.__data[6]=I.elements[5],N.__data[7]=I.elements[0],N.__data[8]=I.elements[6],N.__data[9]=I.elements[7],N.__data[10]=I.elements[8],N.__data[11]=I.elements[0]):(I.toArray(N.__data,Y),Y+=O.storage/Float32Array.BYTES_PER_ELEMENT)}a.bufferSubData(35345,M,N.__data)}}a.bindBuffer(35345,null)}function m(E,w,v){const y=E.value;if(v[w]===void 0){if(typeof y=="number")v[w]=y;else{const A=Array.isArray(y)?y:[y],R=[];for(let N=0;N<A.length;N++)R.push(A[N].clone());v[w]=R}return!0}else if(typeof y=="number"){if(v[w]!==y)return v[w]=y,!0}else{const A=Array.isArray(v[w])?v[w]:[v[w]],R=Array.isArray(y)?y:[y];for(let N=0;N<A.length;N++){const M=A[N];if(M.equals(R[N])===!1)return M.copy(R[N]),!0}}return!1}function g(E){const w=E.uniforms;let v=0;const y=16;let A=0;for(let R=0,N=w.length;R<N;R++){const M=w[R],T={boundary:0,storage:0},Y=Array.isArray(M.value)?M.value:[M.value];for(let B=0,I=Y.length;B<I;B++){const O=Y[B],W=_(O);T.boundary+=W.boundary,T.storage+=W.storage}if(M.__data=new Float32Array(T.storage/Float32Array.BYTES_PER_ELEMENT),M.__offset=v,R>0){A=v%y;const B=y-A;A!==0&&B-T.boundary<0&&(v+=y-A,M.__offset=v)}v+=T.storage}return A=v%y,A>0&&(v+=y-A),E.__size=v,E.__cache={},this}function _(E){const w={boundary:0,storage:0};return typeof E=="number"?(w.boundary=4,w.storage=4):E.isVector2?(w.boundary=8,w.storage=8):E.isVector3||E.isColor?(w.boundary=16,w.storage=12):E.isVector4?(w.boundary=16,w.storage=16):E.isMatrix3?(w.boundary=48,w.storage=48):E.isMatrix4?(w.boundary=64,w.storage=64):E.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",E),w}function p(E){const w=E.target;w.removeEventListener("dispose",p);const v=o.indexOf(w.__bindingPointIndex);o.splice(v,1),a.deleteBuffer(i[w.id]),delete i[w.id],delete r[w.id]}function h(){for(const E in i)a.deleteBuffer(i[E]);o=[],i={},r={}}return{bind:c,update:l,dispose:h}}function ci(){const a=c2("canvas");return a.style.display="block",a}class n3{constructor(e={}){const{canvas:t=ci(),context:n=null,depth:i=!0,stencil:r=!0,alpha:o=!1,antialias:s=!1,premultipliedAlpha:c=!0,preserveDrawingBuffer:l=!1,powerPreference:u="default",failIfMajorPerformanceCaveat:d=!1}=e;this.isWebGLRenderer=!0;let f;n!==null?f=n.getContextAttributes().alpha:f=o;let m=null,g=null;const _=[],p=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=g1,this.useLegacyLights=!0,this.toneMapping=Y9,this.toneMappingExposure=1;const h=this;let E=!1,w=0,v=0,y=null,A=-1,R=null;const N=new H0,M=new H0;let T=null,Y=t.width,B=t.height,I=1,O=null,W=null;const J=new H0(0,0,Y,B),K=new H0(0,0,Y,B);let X=!1;const n0=new j8;let e0=!1,M0=!1,i0=null;const k=new B0,Z=new P,a0={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function c0(){return y===null?I:1}let z=n;function y0(S,U){for(let V=0;V<S.length;V++){const D=S[V],q=t.getContext(D,U);if(q!==null)return q}return null}try{const S={alpha:!0,depth:i,stencil:r,antialias:s,premultipliedAlpha:c,preserveDrawingBuffer:l,powerPreference:u,failIfMajorPerformanceCaveat:d};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${W8}`),t.addEventListener("webglcontextlost",f0,!1),t.addEventListener("webglcontextrestored",b0,!1),t.addEventListener("webglcontextcreationerror",L0,!1),z===null){const U=["webgl2","webgl","experimental-webgl"];if(h.isWebGL1Renderer===!0&&U.shift(),z=y0(U,S),z===null)throw y0(U)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}z.getShaderPrecisionFormat===void 0&&(z.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(S){throw console.error("THREE.WebGLRenderer: "+S.message),S}let v0,r0,x0,F0,m0,T0,X0,W0,$0,Y0,O0,G0,s9,b,x,G,$,t0,o0,C,j,F,l0,d0;function p0(){v0=new vt(z),r0=new dt(z,v0,e),v0.init(r0),F=new ni(z,v0,r0),x0=new ei(z,v0,r0),F0=new yt,m0=new Gn,T0=new ti(z,v0,x0,m0,r0,F,F0),X0=new pt(h),W0=new xt(h),$0=new I6(z,r0),l0=new ut(z,v0,$0,r0),Y0=new Mt(z,$0,F0,l0),O0=new Tt(z,Y0,$0,F0),o0=new Et(z,r0,T0),G=new ft(m0),G0=new Bn(h,X0,W0,v0,r0,l0,G),s9=new oi(h,m0),b=new Vn,x=new Yn(v0,r0),t0=new ct(h,X0,W0,x0,O0,f,c),$=new Qn(h,O0,r0),d0=new li(z,F0,r0,x0),C=new ht(z,v0,F0,r0),j=new St(z,v0,F0,r0),F0.programs=G0.programs,h.capabilities=r0,h.extensions=v0,h.properties=m0,h.renderLists=b,h.shadowMap=$,h.state=x0,h.info=F0}p0();const u0=new ai(h,z);this.xr=u0,this.getContext=function(){return z},this.getContextAttributes=function(){return z.getContextAttributes()},this.forceContextLoss=function(){const S=v0.get("WEBGL_lose_context");S&&S.loseContext()},this.forceContextRestore=function(){const S=v0.get("WEBGL_lose_context");S&&S.restoreContext()},this.getPixelRatio=function(){return I},this.setPixelRatio=function(S){S!==void 0&&(I=S,this.setSize(Y,B,!1))},this.getSize=function(S){return S.set(Y,B)},this.setSize=function(S,U,V=!0){if(u0.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}Y=S,B=U,t.width=Math.floor(S*I),t.height=Math.floor(U*I),V===!0&&(t.style.width=S+"px",t.style.height=U+"px"),this.setViewport(0,0,S,U)},this.getDrawingBufferSize=function(S){return S.set(Y*I,B*I).floor()},this.setDrawingBufferSize=function(S,U,V){Y=S,B=U,I=V,t.width=Math.floor(S*V),t.height=Math.floor(U*V),this.setViewport(0,0,S,U)},this.getCurrentViewport=function(S){return S.copy(N)},this.getViewport=function(S){return S.copy(J)},this.setViewport=function(S,U,V,D){S.isVector4?J.set(S.x,S.y,S.z,S.w):J.set(S,U,V,D),x0.viewport(N.copy(J).multiplyScalar(I).floor())},this.getScissor=function(S){return S.copy(K)},this.setScissor=function(S,U,V,D){S.isVector4?K.set(S.x,S.y,S.z,S.w):K.set(S,U,V,D),x0.scissor(M.copy(K).multiplyScalar(I).floor())},this.getScissorTest=function(){return X},this.setScissorTest=function(S){x0.setScissorTest(X=S)},this.setOpaqueSort=function(S){O=S},this.setTransparentSort=function(S){W=S},this.getClearColor=function(S){return S.copy(t0.getClearColor())},this.setClearColor=function(){t0.setClearColor.apply(t0,arguments)},this.getClearAlpha=function(){return t0.getClearAlpha()},this.setClearAlpha=function(){t0.setClearAlpha.apply(t0,arguments)},this.clear=function(S=!0,U=!0,V=!0){let D=0;S&&(D|=16384),U&&(D|=256),V&&(D|=1024),z.clear(D)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",f0,!1),t.removeEventListener("webglcontextrestored",b0,!1),t.removeEventListener("webglcontextcreationerror",L0,!1),b.dispose(),x.dispose(),m0.dispose(),X0.dispose(),W0.dispose(),O0.dispose(),l0.dispose(),d0.dispose(),G0.dispose(),u0.dispose(),u0.removeEventListener("sessionstart",g0),u0.removeEventListener("sessionend",V0),i0&&(i0.dispose(),i0=null),q0.stop()};function f0(S){S.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),E=!0}function b0(){console.log("THREE.WebGLRenderer: Context Restored."),E=!1;const S=F0.autoReset,U=$.enabled,V=$.autoUpdate,D=$.needsUpdate,q=$.type;p0(),F0.autoReset=S,$.enabled=U,$.autoUpdate=V,$.needsUpdate=D,$.type=q}function L0(S){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",S.statusMessage)}function Z0(S){const U=S.target;U.removeEventListener("dispose",Z0),L(U)}function L(S){H(S),m0.remove(S)}function H(S){const U=m0.get(S).programs;U!==void 0&&(U.forEach(function(V){G0.releaseProgram(V)}),S.isShaderMaterial&&G0.releaseShaderCache(S))}this.renderBufferDirect=function(S,U,V,D,q,_0){U===null&&(U=a0);const S0=q.isMesh&&q.matrixWorld.determinant()<0,w0=a3(S,U,V,D,q);x0.setMaterial(D,S0);let A0=V.index,P0=1;D.wireframe===!0&&(A0=Y0.getWireframeAttribute(V),P0=2);const R0=V.drawRange,I0=V.attributes.position;let z0=R0.start*P0,c9=(R0.start+R0.count)*P0;_0!==null&&(z0=Math.max(z0,_0.start*P0),c9=Math.min(c9,(_0.start+_0.count)*P0)),A0!==null?(z0=Math.max(z0,0),c9=Math.min(c9,A0.count)):I0!=null&&(z0=Math.max(z0,0),c9=Math.min(c9,I0.count));const C9=c9-z0;if(C9<0||C9===1/0)return;l0.setup(q,D,w0,V,A0);let i1,J0=C;if(A0!==null&&(i1=$0.get(A0),J0=j,J0.setIndex(i1)),q.isMesh)D.wireframe===!0?(x0.setLineWidth(D.wireframeLinewidth*c0()),J0.setMode(1)):J0.setMode(4);else if(q.isLine){let N0=D.linewidth;N0===void 0&&(N0=1),x0.setLineWidth(N0*c0()),q.isLineSegments?J0.setMode(1):q.isLineLoop?J0.setMode(2):J0.setMode(3)}else q.isPoints?J0.setMode(0):q.isSprite&&J0.setMode(4);if(q.isInstancedMesh)J0.renderInstances(z0,C9,q.count);else if(V.isInstancedBufferGeometry){const N0=V._maxInstanceCount!==void 0?V._maxInstanceCount:1/0,Z2=Math.min(V.instanceCount,N0);J0.renderInstances(z0,C9,Z2)}else J0.render(z0,C9)},this.compile=function(S,U){function V(D,q,_0){D.transparent===!0&&D.side===j9&&D.forceSinglePass===!1?(D.side=p9,D.needsUpdate=!0,m2(D,q,_0),D.side=Z9,D.needsUpdate=!0,m2(D,q,_0),D.side=j9):m2(D,q,_0)}g=x.get(S),g.init(),p.push(g),S.traverseVisible(function(D){D.isLight&&D.layers.test(U.layers)&&(g.pushLight(D),D.castShadow&&g.pushShadow(D))}),g.setupLights(h.useLegacyLights),S.traverse(function(D){const q=D.material;if(q)if(Array.isArray(q))for(let _0=0;_0<q.length;_0++){const S0=q[_0];V(S0,S,D)}else V(q,S,D)}),p.pop(),g=null};let Q=null;function h0(S){Q&&Q(S)}function g0(){q0.stop()}function V0(){q0.start()}const q0=new $5;q0.setAnimationLoop(h0),typeof self<"u"&&q0.setContext(self),this.setAnimationLoop=function(S){Q=S,u0.setAnimationLoop(S),S===null?q0.stop():q0.start()},u0.addEventListener("sessionstart",g0),u0.addEventListener("sessionend",V0),this.render=function(S,U){if(U!==void 0&&U.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(E===!0)return;S.matrixWorldAutoUpdate===!0&&S.updateMatrixWorld(),U.parent===null&&U.matrixWorldAutoUpdate===!0&&U.updateMatrixWorld(),u0.enabled===!0&&u0.isPresenting===!0&&(u0.cameraAutoUpdate===!0&&u0.updateCamera(U),U=u0.getCamera()),S.isScene===!0&&S.onBeforeRender(h,S,U,y),g=x.get(S,p.length),g.init(),p.push(g),k.multiplyMatrices(U.projectionMatrix,U.matrixWorldInverse),n0.setFromProjectionMatrix(k),M0=this.localClippingEnabled,e0=G.init(this.clippingPlanes,M0),m=b.get(S,_.length),m.init(),_.push(m),a9(S,U,0,h.sortObjects),m.finish(),h.sortObjects===!0&&m.sort(O,W),e0===!0&&G.beginShadows();const V=g.state.shadowsArray;if($.render(V,S,U),e0===!0&&G.endShadows(),this.info.autoReset===!0&&this.info.reset(),t0.render(m,S),g.setupLights(h.useLegacyLights),U.isArrayCamera){const D=U.cameras;for(let q=0,_0=D.length;q<_0;q++){const S0=D[q];$9(m,S,S0,S0.viewport)}}else $9(m,S,U);y!==null&&(T0.updateMultisampleRenderTarget(y),T0.updateRenderTargetMipmap(y)),S.isScene===!0&&S.onAfterRender(h,S,U),l0.resetDefaultState(),A=-1,R=null,p.pop(),p.length>0?g=p[p.length-1]:g=null,_.pop(),_.length>0?m=_[_.length-1]:m=null};function a9(S,U,V,D){if(S.visible===!1)return;if(S.layers.test(U.layers)){if(S.isGroup)V=S.renderOrder;else if(S.isLOD)S.autoUpdate===!0&&S.update(U);else if(S.isLight)g.pushLight(S),S.castShadow&&g.pushShadow(S);else if(S.isSprite){if(!S.frustumCulled||n0.intersectsSprite(S)){D&&Z.setFromMatrixPosition(S.matrixWorld).applyMatrix4(k);const S0=O0.update(S),w0=S.material;w0.visible&&m.push(S,S0,w0,V,Z.z,null)}}else if((S.isMesh||S.isLine||S.isPoints)&&(S.isSkinnedMesh&&S.skeleton.frame!==F0.render.frame&&(S.skeleton.update(),S.skeleton.frame=F0.render.frame),!S.frustumCulled||n0.intersectsObject(S))){D&&Z.setFromMatrixPosition(S.matrixWorld).applyMatrix4(k);const S0=O0.update(S),w0=S.material;if(Array.isArray(w0)){const A0=S0.groups;for(let P0=0,R0=A0.length;P0<R0;P0++){const I0=A0[P0],z0=w0[I0.materialIndex];z0&&z0.visible&&m.push(S,S0,z0,V,Z.z,I0)}}else w0.visible&&m.push(S,S0,w0,V,Z.z,null)}}const _0=S.children;for(let S0=0,w0=_0.length;S0<w0;S0++)a9(_0[S0],U,V,D)}function $9(S,U,V,D){const q=S.opaque,_0=S.transmissive,S0=S.transparent;g.setupLightsView(V),e0===!0&&G.setGlobalState(h.clippingPlanes,V),_0.length>0&&K0(q,_0,U,V),D&&x0.viewport(N.copy(D)),q.length>0&&b9(q,U,V),_0.length>0&&b9(_0,U,V),S0.length>0&&b9(S0,U,V),x0.buffers.depth.setTest(!0),x0.buffers.depth.setMask(!0),x0.buffers.color.setMask(!0),x0.setPolygonOffset(!1)}function K0(S,U,V,D){if(i0===null){const w0=r0.isWebGL2;i0=new _1(1024,1024,{generateMipmaps:!0,type:v0.has("EXT_color_buffer_half_float")?o2:m1,minFilter:a2,samples:w0&&s===!0?4:0})}const q=h.getRenderTarget();h.setRenderTarget(i0),h.clear();const _0=h.toneMapping;h.toneMapping=Y9,b9(S,V,D),T0.updateMultisampleRenderTarget(i0),T0.updateRenderTargetMipmap(i0);let S0=!1;for(let w0=0,A0=U.length;w0<A0;w0++){const P0=U[w0],R0=P0.object,I0=P0.geometry,z0=P0.material,c9=P0.group;if(z0.side===j9&&R0.layers.test(D.layers)){const C9=z0.side;z0.side=p9,z0.needsUpdate=!0,N9(R0,V,D,I0,z0,c9),z0.side=C9,z0.needsUpdate=!0,S0=!0}}S0===!0&&(T0.updateMultisampleRenderTarget(i0),T0.updateRenderTargetMipmap(i0)),h.setRenderTarget(q),h.toneMapping=_0}function b9(S,U,V){const D=U.isScene===!0?U.overrideMaterial:null;for(let q=0,_0=S.length;q<_0;q++){const S0=S[q],w0=S0.object,A0=S0.geometry,P0=D===null?S0.material:D,R0=S0.group;w0.layers.test(V.layers)&&N9(w0,U,V,A0,P0,R0)}}function N9(S,U,V,D,q,_0){S.onBeforeRender(h,U,V,D,q,_0),S.modelViewMatrix.multiplyMatrices(V.matrixWorldInverse,S.matrixWorld),S.normalMatrix.getNormalMatrix(S.modelViewMatrix),q.onBeforeRender(h,U,V,D,S,_0),q.transparent===!0&&q.side===j9&&q.forceSinglePass===!1?(q.side=p9,q.needsUpdate=!0,h.renderBufferDirect(V,U,D,q,S,_0),q.side=Z9,q.needsUpdate=!0,h.renderBufferDirect(V,U,D,q,S,_0),q.side=j9):h.renderBufferDirect(V,U,D,q,S,_0),S.onAfterRender(h,U,V,D,q,_0)}function m2(S,U,V){U.isScene!==!0&&(U=a0);const D=m0.get(S),q=g.state.lights,_0=g.state.shadowsArray,S0=q.state.version,w0=G0.getParameters(S,q.state,_0,U,V),A0=G0.getProgramCacheKey(w0);let P0=D.programs;D.environment=S.isMeshStandardMaterial?U.environment:null,D.fog=U.fog,D.envMap=(S.isMeshStandardMaterial?W0:X0).get(S.envMap||D.environment),P0===void 0&&(S.addEventListener("dispose",Z0),P0=new Map,D.programs=P0);let R0=P0.get(A0);if(R0!==void 0){if(D.currentProgram===R0&&D.lightsStateVersion===S0)return K8(S,w0),R0}else w0.uniforms=G0.getUniforms(S),S.onBuild(V,w0,h),S.onBeforeCompile(w0,h),R0=G0.acquireProgram(w0,A0),P0.set(A0,R0),D.uniforms=w0.uniforms;const I0=D.uniforms;(!S.isShaderMaterial&&!S.isRawShaderMaterial||S.clipping===!0)&&(I0.clippingPlanes=G.uniform),K8(S,w0),D.needsLights=l3(S),D.lightsStateVersion=S0,D.needsLights&&(I0.ambientLightColor.value=q.state.ambient,I0.lightProbe.value=q.state.probe,I0.directionalLights.value=q.state.directional,I0.directionalLightShadows.value=q.state.directionalShadow,I0.spotLights.value=q.state.spot,I0.spotLightShadows.value=q.state.spotShadow,I0.rectAreaLights.value=q.state.rectArea,I0.ltc_1.value=q.state.rectAreaLTC1,I0.ltc_2.value=q.state.rectAreaLTC2,I0.pointLights.value=q.state.point,I0.pointLightShadows.value=q.state.pointShadow,I0.hemisphereLights.value=q.state.hemi,I0.directionalShadowMap.value=q.state.directionalShadowMap,I0.directionalShadowMatrix.value=q.state.directionalShadowMatrix,I0.spotShadowMap.value=q.state.spotShadowMap,I0.spotLightMatrix.value=q.state.spotLightMatrix,I0.spotLightMap.value=q.state.spotLightMap,I0.pointShadowMap.value=q.state.pointShadowMap,I0.pointShadowMatrix.value=q.state.pointShadowMatrix);const z0=R0.getUniforms(),c9=k2.seqWithValue(z0.seq,I0);return D.currentProgram=R0,D.uniformsList=c9,R0}function K8(S,U){const V=m0.get(S);V.outputEncoding=U.outputEncoding,V.instancing=U.instancing,V.skinning=U.skinning,V.morphTargets=U.morphTargets,V.morphNormals=U.morphNormals,V.morphColors=U.morphColors,V.morphTargetsCount=U.morphTargetsCount,V.numClippingPlanes=U.numClippingPlanes,V.numIntersection=U.numClipIntersection,V.vertexAlphas=U.vertexAlphas,V.vertexTangents=U.vertexTangents,V.toneMapping=U.toneMapping}function a3(S,U,V,D,q){U.isScene!==!0&&(U=a0),T0.resetTextureUnits();const _0=U.fog,S0=D.isMeshStandardMaterial?U.environment:null,w0=y===null?h.outputEncoding:y.isXRRenderTarget===!0?y.texture.encoding:g1,A0=(D.isMeshStandardMaterial?W0:X0).get(D.envMap||S0),P0=D.vertexColors===!0&&!!V.attributes.color&&V.attributes.color.itemSize===4,R0=!!D.normalMap&&!!V.attributes.tangent,I0=!!V.morphAttributes.position,z0=!!V.morphAttributes.normal,c9=!!V.morphAttributes.color,C9=D.toneMapped?h.toneMapping:Y9,i1=V.morphAttributes.position||V.morphAttributes.normal||V.morphAttributes.color,J0=i1!==void 0?i1.length:0,N0=m0.get(D),Z2=g.state.lights;if(e0===!0&&(M0===!0||S!==R)){const g9=S===R&&D.id===A;G.setState(D,S,g9)}let i9=!1;D.version===N0.__version?(N0.needsLights&&N0.lightsStateVersion!==Z2.state.version||N0.outputEncoding!==w0||q.isInstancedMesh&&N0.instancing===!1||!q.isInstancedMesh&&N0.instancing===!0||q.isSkinnedMesh&&N0.skinning===!1||!q.isSkinnedMesh&&N0.skinning===!0||N0.envMap!==A0||D.fog===!0&&N0.fog!==_0||N0.numClippingPlanes!==void 0&&(N0.numClippingPlanes!==G.numPlanes||N0.numIntersection!==G.numIntersection)||N0.vertexAlphas!==P0||N0.vertexTangents!==R0||N0.morphTargets!==I0||N0.morphNormals!==z0||N0.morphColors!==c9||N0.toneMapping!==C9||r0.isWebGL2===!0&&N0.morphTargetsCount!==J0)&&(i9=!0):(i9=!0,N0.__version=D.version);let r1=N0.currentProgram;i9===!0&&(r1=m2(D,U,q));let $8=!1,Z1=!1,K2=!1;const u9=r1.getUniforms(),s1=N0.uniforms;if(x0.useProgram(r1.program)&&($8=!0,Z1=!0,K2=!0),D.id!==A&&(A=D.id,Z1=!0),$8||R!==S){if(u9.setValue(z,"projectionMatrix",S.projectionMatrix),r0.logarithmicDepthBuffer&&u9.setValue(z,"logDepthBufFC",2/(Math.log(S.far+1)/Math.LN2)),R!==S&&(R=S,Z1=!0,K2=!0),D.isShaderMaterial||D.isMeshPhongMaterial||D.isMeshToonMaterial||D.isMeshStandardMaterial||D.envMap){const g9=u9.map.cameraPosition;g9!==void 0&&g9.setValue(z,Z.setFromMatrixPosition(S.matrixWorld))}(D.isMeshPhongMaterial||D.isMeshToonMaterial||D.isMeshLambertMaterial||D.isMeshBasicMaterial||D.isMeshStandardMaterial||D.isShaderMaterial)&&u9.setValue(z,"isOrthographic",S.isOrthographicCamera===!0),(D.isMeshPhongMaterial||D.isMeshToonMaterial||D.isMeshLambertMaterial||D.isMeshBasicMaterial||D.isMeshStandardMaterial||D.isShaderMaterial||D.isShadowMaterial||q.isSkinnedMesh)&&u9.setValue(z,"viewMatrix",S.matrixWorldInverse)}if(q.isSkinnedMesh){u9.setOptional(z,q,"bindMatrix"),u9.setOptional(z,q,"bindMatrixInverse");const g9=q.skeleton;g9&&(r0.floatVertexTextures?(g9.boneTexture===null&&g9.computeBoneTexture(),u9.setValue(z,"boneTexture",g9.boneTexture,T0),u9.setValue(z,"boneTextureSize",g9.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const $2=V.morphAttributes;if(($2.position!==void 0||$2.normal!==void 0||$2.color!==void 0&&r0.isWebGL2===!0)&&o0.update(q,V,r1),(Z1||N0.receiveShadow!==q.receiveShadow)&&(N0.receiveShadow=q.receiveShadow,u9.setValue(z,"receiveShadow",q.receiveShadow)),D.isMeshGouraudMaterial&&D.envMap!==null&&(s1.envMap.value=A0,s1.flipEnvMap.value=A0.isCubeTexture&&A0.isRenderTargetTexture===!1?-1:1),Z1&&(u9.setValue(z,"toneMappingExposure",h.toneMappingExposure),N0.needsLights&&o3(s1,K2),_0&&D.fog===!0&&s9.refreshFogUniforms(s1,_0),s9.refreshMaterialUniforms(s1,D,I,B,i0),k2.upload(z,N0.uniformsList,s1,T0)),D.isShaderMaterial&&D.uniformsNeedUpdate===!0&&(k2.upload(z,N0.uniformsList,s1,T0),D.uniformsNeedUpdate=!1),D.isSpriteMaterial&&u9.setValue(z,"center",q.center),u9.setValue(z,"modelViewMatrix",q.modelViewMatrix),u9.setValue(z,"normalMatrix",q.normalMatrix),u9.setValue(z,"modelMatrix",q.matrixWorld),D.isShaderMaterial||D.isRawShaderMaterial){const g9=D.uniformsGroups;for(let J2=0,c3=g9.length;J2<c3;J2++)if(r0.isWebGL2){const J8=g9[J2];d0.update(J8,r1),d0.bind(J8,r1)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return r1}function o3(S,U){S.ambientLightColor.needsUpdate=U,S.lightProbe.needsUpdate=U,S.directionalLights.needsUpdate=U,S.directionalLightShadows.needsUpdate=U,S.pointLights.needsUpdate=U,S.pointLightShadows.needsUpdate=U,S.spotLights.needsUpdate=U,S.spotLightShadows.needsUpdate=U,S.rectAreaLights.needsUpdate=U,S.hemisphereLights.needsUpdate=U}function l3(S){return S.isMeshLambertMaterial||S.isMeshToonMaterial||S.isMeshPhongMaterial||S.isMeshStandardMaterial||S.isShadowMaterial||S.isShaderMaterial&&S.lights===!0}this.getActiveCubeFace=function(){return w},this.getActiveMipmapLevel=function(){return v},this.getRenderTarget=function(){return y},this.setRenderTargetTextures=function(S,U,V){m0.get(S.texture).__webglTexture=U,m0.get(S.depthTexture).__webglTexture=V;const D=m0.get(S);D.__hasExternalTextures=!0,D.__hasExternalTextures&&(D.__autoAllocateDepthBuffer=V===void 0,D.__autoAllocateDepthBuffer||v0.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),D.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(S,U){const V=m0.get(S);V.__webglFramebuffer=U,V.__useDefaultFramebuffer=U===void 0},this.setRenderTarget=function(S,U=0,V=0){y=S,w=U,v=V;let D=!0,q=null,_0=!1,S0=!1;if(S){const A0=m0.get(S);A0.__useDefaultFramebuffer!==void 0?(x0.bindFramebuffer(36160,null),D=!1):A0.__webglFramebuffer===void 0?T0.setupRenderTarget(S):A0.__hasExternalTextures&&T0.rebindTextures(S,m0.get(S.texture).__webglTexture,m0.get(S.depthTexture).__webglTexture);const P0=S.texture;(P0.isData3DTexture||P0.isDataArrayTexture||P0.isCompressedArrayTexture)&&(S0=!0);const R0=m0.get(S).__webglFramebuffer;S.isWebGLCubeRenderTarget?(q=R0[U],_0=!0):r0.isWebGL2&&S.samples>0&&T0.useMultisampledRTT(S)===!1?q=m0.get(S).__webglMultisampledFramebuffer:q=R0,N.copy(S.viewport),M.copy(S.scissor),T=S.scissorTest}else N.copy(J).multiplyScalar(I).floor(),M.copy(K).multiplyScalar(I).floor(),T=X;if(x0.bindFramebuffer(36160,q)&&r0.drawBuffers&&D&&x0.drawBuffers(S,q),x0.viewport(N),x0.scissor(M),x0.setScissorTest(T),_0){const A0=m0.get(S.texture);z.framebufferTexture2D(36160,36064,34069+U,A0.__webglTexture,V)}else if(S0){const A0=m0.get(S.texture),P0=U||0;z.framebufferTextureLayer(36160,36064,A0.__webglTexture,V||0,P0)}A=-1},this.readRenderTargetPixels=function(S,U,V,D,q,_0,S0){if(!(S&&S.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let w0=m0.get(S).__webglFramebuffer;if(S.isWebGLCubeRenderTarget&&S0!==void 0&&(w0=w0[S0]),w0){x0.bindFramebuffer(36160,w0);try{const A0=S.texture,P0=A0.format,R0=A0.type;if(P0!==U9&&F.convert(P0)!==z.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const I0=R0===o2&&(v0.has("EXT_color_buffer_half_float")||r0.isWebGL2&&v0.has("EXT_color_buffer_float"));if(R0!==m1&&F.convert(R0)!==z.getParameter(35738)&&!(R0===f1&&(r0.isWebGL2||v0.has("OES_texture_float")||v0.has("WEBGL_color_buffer_float")))&&!I0){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}U>=0&&U<=S.width-D&&V>=0&&V<=S.height-q&&z.readPixels(U,V,D,q,F.convert(P0),F.convert(R0),_0)}finally{const A0=y!==null?m0.get(y).__webglFramebuffer:null;x0.bindFramebuffer(36160,A0)}}},this.copyFramebufferToTexture=function(S,U,V=0){const D=Math.pow(2,-V),q=Math.floor(U.image.width*D),_0=Math.floor(U.image.height*D);T0.setTexture2D(U,0),z.copyTexSubImage2D(3553,V,0,0,S.x,S.y,q,_0),x0.unbindTexture()},this.copyTextureToTexture=function(S,U,V,D=0){const q=U.image.width,_0=U.image.height,S0=F.convert(V.format),w0=F.convert(V.type);T0.setTexture2D(V,0),z.pixelStorei(37440,V.flipY),z.pixelStorei(37441,V.premultiplyAlpha),z.pixelStorei(3317,V.unpackAlignment),U.isDataTexture?z.texSubImage2D(3553,D,S.x,S.y,q,_0,S0,w0,U.image.data):U.isCompressedTexture?z.compressedTexSubImage2D(3553,D,S.x,S.y,U.mipmaps[0].width,U.mipmaps[0].height,S0,U.mipmaps[0].data):z.texSubImage2D(3553,D,S.x,S.y,S0,w0,U.image),D===0&&V.generateMipmaps&&z.generateMipmap(3553),x0.unbindTexture()},this.copyTextureToTexture3D=function(S,U,V,D,q=0){if(h.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const _0=S.max.x-S.min.x+1,S0=S.max.y-S.min.y+1,w0=S.max.z-S.min.z+1,A0=F.convert(D.format),P0=F.convert(D.type);let R0;if(D.isData3DTexture)T0.setTexture3D(D,0),R0=32879;else if(D.isDataArrayTexture)T0.setTexture2DArray(D,0),R0=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}z.pixelStorei(37440,D.flipY),z.pixelStorei(37441,D.premultiplyAlpha),z.pixelStorei(3317,D.unpackAlignment);const I0=z.getParameter(3314),z0=z.getParameter(32878),c9=z.getParameter(3316),C9=z.getParameter(3315),i1=z.getParameter(32877),J0=V.isCompressedTexture?V.mipmaps[0]:V.image;z.pixelStorei(3314,J0.width),z.pixelStorei(32878,J0.height),z.pixelStorei(3316,S.min.x),z.pixelStorei(3315,S.min.y),z.pixelStorei(32877,S.min.z),V.isDataTexture||V.isData3DTexture?z.texSubImage3D(R0,q,U.x,U.y,U.z,_0,S0,w0,A0,P0,J0.data):V.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),z.compressedTexSubImage3D(R0,q,U.x,U.y,U.z,_0,S0,w0,A0,J0.data)):z.texSubImage3D(R0,q,U.x,U.y,U.z,_0,S0,w0,A0,P0,J0),z.pixelStorei(3314,I0),z.pixelStorei(32878,z0),z.pixelStorei(3316,c9),z.pixelStorei(3315,C9),z.pixelStorei(32877,i1),q===0&&D.generateMipmaps&&z.generateMipmap(R0),x0.unbindTexture()},this.initTexture=function(S){S.isCubeTexture?T0.setTextureCube(S,0):S.isData3DTexture?T0.setTexture3D(S,0):S.isDataArrayTexture||S.isCompressedArrayTexture?T0.setTexture2DArray(S,0):T0.setTexture2D(S,0),x0.unbindTexture()},this.resetState=function(){w=0,v=0,y=null,x0.reset(),l0.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get physicallyCorrectLights(){return console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),!this.useLegacyLights}set physicallyCorrectLights(e){console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),this.useLegacyLights=!e}}class ui extends n3{}ui.prototype.isWebGL1Renderer=!0;class hi extends j0{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(e){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=e}}class s2 extends K9{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new D0(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const p5=new P,m5=new P,g5=new B0,L8=new X8,F2=new d2;class di extends j0{constructor(e=new y9,t=new s2){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,r=t.count;i<r;i++)p5.fromBufferAttribute(t,i-1),m5.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=p5.distanceTo(m5);e.setAttribute("lineDistance",new e9(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),F2.copy(n.boundingSphere),F2.applyMatrix4(i),F2.radius+=r,e.ray.intersectsSphere(F2)===!1)return;g5.copy(i).invert(),L8.copy(e.ray).applyMatrix4(g5);const s=r/((this.scale.x+this.scale.y+this.scale.z)/3),c=s*s,l=new P,u=new P,d=new P,f=new P,m=this.isLineSegments?2:1,g=n.index,p=n.attributes.position;if(g!==null){const h=Math.max(0,o.start),E=Math.min(g.count,o.start+o.count);for(let w=h,v=E-1;w<v;w+=m){const y=g.getX(w),A=g.getX(w+1);if(l.fromBufferAttribute(p,y),u.fromBufferAttribute(p,A),L8.distanceSqToSegment(l,u,f,d)>c)continue;f.applyMatrix4(this.matrixWorld);const N=e.ray.origin.distanceTo(f);N<e.near||N>e.far||t.push({distance:N,point:d.clone().applyMatrix4(this.matrixWorld),index:w,face:null,faceIndex:null,object:this})}}else{const h=Math.max(0,o.start),E=Math.min(p.count,o.start+o.count);for(let w=h,v=E-1;w<v;w+=m){if(l.fromBufferAttribute(p,w),u.fromBufferAttribute(p,w+1),L8.distanceSqToSegment(l,u,f,d)>c)continue;f.applyMatrix4(this.matrixWorld);const A=e.ray.origin.distanceTo(f);A<e.near||A>e.far||t.push({distance:A,point:d.clone().applyMatrix4(this.matrixWorld),index:w,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const s=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[s]=r}}}}}const _5=new P,x5=new P;class V8 extends di{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,r=t.count;i<r;i+=2)_5.fromBufferAttribute(t,i),x5.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+_5.distanceTo(x5);e.setAttribute("lineDistance",new e9(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class r2 extends K9{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new D0(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const v5=new B0,H8=new X8,z2=new d2,B2=new P;class P8 extends j0{constructor(e=new y9,t=new r2){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Points.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),z2.copy(n.boundingSphere),z2.applyMatrix4(i),z2.radius+=r,e.ray.intersectsSphere(z2)===!1)return;v5.copy(i).invert(),H8.copy(e.ray).applyMatrix4(v5);const s=r/((this.scale.x+this.scale.y+this.scale.z)/3),c=s*s,l=n.index,d=n.attributes.position;if(l!==null){const f=Math.max(0,o.start),m=Math.min(l.count,o.start+o.count);for(let g=f,_=m;g<_;g++){const p=l.getX(g);B2.fromBufferAttribute(d,p),M5(B2,p,c,i,e,t,this)}}else{const f=Math.max(0,o.start),m=Math.min(d.count,o.start+o.count);for(let g=f,_=m;g<_;g++)B2.fromBufferAttribute(d,g),M5(B2,g,c,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const s=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[s]=r}}}}}function M5(a,e,t,n,i,r,o){const s=H8.distanceSqToPoint(a);if(s<t){const c=new P;H8.closestPointToPoint(a,c),c.applyMatrix4(n);const l=i.ray.origin.distanceTo(c);if(l<i.near||l>i.far)return;r.push({distance:l,distanceToRay:Math.sqrt(s),point:c,index:e,face:null,object:o})}}class Z8 extends y9{constructor(e=1,t=32,n=16,i=0,r=Math.PI*2,o=0,s=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:r,thetaStart:o,thetaLength:s},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const c=Math.min(o+s,Math.PI);let l=0;const u=[],d=new P,f=new P,m=[],g=[],_=[],p=[];for(let h=0;h<=n;h++){const E=[],w=h/n;let v=0;h===0&&o===0?v=.5/t:h===n&&c===Math.PI&&(v=-.5/t);for(let y=0;y<=t;y++){const A=y/t;d.x=-e*Math.cos(i+A*r)*Math.sin(o+w*s),d.y=e*Math.cos(o+w*s),d.z=e*Math.sin(i+A*r)*Math.sin(o+w*s),g.push(d.x,d.y,d.z),f.copy(d).normalize(),_.push(f.x,f.y,f.z),p.push(A+v,1-w),E.push(l++)}u.push(E)}for(let h=0;h<n;h++)for(let E=0;E<t;E++){const w=u[h][E+1],v=u[h][E],y=u[h+1][E],A=u[h+1][E+1];(h!==0||o>0)&&m.push(w,v,A),(h!==n-1||c<Math.PI)&&m.push(v,y,A)}this.setIndex(m),this.setAttribute("position",new e9(g,3)),this.setAttribute("normal",new e9(_,3)),this.setAttribute("uv",new e9(p,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Z8(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class i3 extends K9{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new D0(16777215),this.specular=new D0(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new D0(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=z5,this.normalScale=new E0(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=q8,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}const H2={enabled:!1,files:{},add:function(a,e){this.enabled!==!1&&(this.files[a]=e)},get:function(a){if(this.enabled!==!1)return this.files[a]},remove:function(a){delete this.files[a]},clear:function(){this.files={}}};class fi{constructor(e,t,n){const i=this;let r=!1,o=0,s=0,c;const l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(u){s++,r===!1&&i.onStart!==void 0&&i.onStart(u,o,s),r=!0},this.itemEnd=function(u){o++,i.onProgress!==void 0&&i.onProgress(u,o,s),o===s&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(u){i.onError!==void 0&&i.onError(u)},this.resolveURL=function(u){return c?c(u):u},this.setURLModifier=function(u){return c=u,this},this.addHandler=function(u,d){return l.push(u,d),this},this.removeHandler=function(u){const d=l.indexOf(u);return d!==-1&&l.splice(d,2),this},this.getHandler=function(u){for(let d=0,f=l.length;d<f;d+=2){const m=l[d],g=l[d+1];if(m.global&&(m.lastIndex=0),m.test(u))return g}return null}}}const r3=new fi;class p2{constructor(e){this.manager=e!==void 0?e:r3,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,r){n.load(e,i,t,r)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const X9={};class pi extends Error{constructor(e,t){super(e),this.response=t}}class s3 extends p2{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=H2.get(e);if(r!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(r),this.manager.itemEnd(e)},0),r;if(X9[e]!==void 0){X9[e].push({onLoad:t,onProgress:n,onError:i});return}X9[e]=[],X9[e].push({onLoad:t,onProgress:n,onError:i});const o=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),s=this.mimeType,c=this.responseType;fetch(o).then(l=>{if(l.status===200||l.status===0){if(l.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||l.body===void 0||l.body.getReader===void 0)return l;const u=X9[e],d=l.body.getReader(),f=l.headers.get("Content-Length")||l.headers.get("X-File-Size"),m=f?parseInt(f):0,g=m!==0;let _=0;const p=new ReadableStream({start(h){E();function E(){d.read().then(({done:w,value:v})=>{if(w)h.close();else{_+=v.byteLength;const y=new ProgressEvent("progress",{lengthComputable:g,loaded:_,total:m});for(let A=0,R=u.length;A<R;A++){const N=u[A];N.onProgress&&N.onProgress(y)}h.enqueue(v),E()}})}}});return new Response(p)}else throw new pi(`fetch for "${l.url}" responded with ${l.status}: ${l.statusText}`,l)}).then(l=>{switch(c){case"arraybuffer":return l.arrayBuffer();case"blob":return l.blob();case"document":return l.text().then(u=>new DOMParser().parseFromString(u,s));case"json":return l.json();default:if(s===void 0)return l.text();{const d=/charset="?([^;"\s]*)"?/i.exec(s),f=d&&d[1]?d[1].toLowerCase():void 0,m=new TextDecoder(f);return l.arrayBuffer().then(g=>m.decode(g))}}}).then(l=>{H2.add(e,l);const u=X9[e];delete X9[e];for(let d=0,f=u.length;d<f;d++){const m=u[d];m.onLoad&&m.onLoad(l)}}).catch(l=>{const u=X9[e];if(u===void 0)throw this.manager.itemError(e),l;delete X9[e];for(let d=0,f=u.length;d<f;d++){const m=u[d];m.onError&&m.onError(l)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class mi extends p2{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,o=H2.get(e);if(o!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(o),r.manager.itemEnd(e)},0),o;const s=c2("img");function c(){u(),H2.add(e,this),t&&t(this),r.manager.itemEnd(e)}function l(d){u(),i&&i(d),r.manager.itemError(e),r.manager.itemEnd(e)}function u(){s.removeEventListener("load",c,!1),s.removeEventListener("error",l,!1)}return s.addEventListener("load",c,!1),s.addEventListener("error",l,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(s.crossOrigin=this.crossOrigin),r.manager.itemStart(e),s.src=e,s}}class gi extends p2{constructor(e){super(e)}load(e,t,n,i){const r=new m9,o=new mi(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(s){r.image=s,r.needsUpdate=!0,t!==void 0&&t(r)},n,i),r}}class _i extends j0{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new D0(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}const R8=new B0,S5=new P,y5=new P;class xi{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new E0(512,512),this.map=null,this.mapPass=null,this.matrix=new B0,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new j8,this._frameExtents=new E0(1,1),this._viewportCount=1,this._viewports=[new H0(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;S5.setFromMatrixPosition(e.matrixWorld),t.position.copy(S5),y5.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(y5),t.updateMatrixWorld(),R8.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(R8),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(R8)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}const b5=new B0,e2=new P,D8=new P;class vi extends xi{constructor(){super(new S9(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new E0(4,2),this._viewportCount=6,this._viewports=[new H0(2,1,1,1),new H0(0,1,1,1),new H0(3,1,1,1),new H0(1,1,1,1),new H0(3,0,1,1),new H0(1,0,1,1)],this._cubeDirections=[new P(1,0,0),new P(-1,0,0),new P(0,0,1),new P(0,0,-1),new P(0,1,0),new P(0,-1,0)],this._cubeUps=[new P(0,1,0),new P(0,1,0),new P(0,1,0),new P(0,1,0),new P(0,0,1),new P(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,r=e.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),e2.setFromMatrixPosition(e.matrixWorld),n.position.copy(e2),D8.copy(n.position),D8.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(D8),n.updateMatrixWorld(),i.makeTranslation(-e2.x,-e2.y,-e2.z),b5.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(b5)}}class Mi extends _i{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new vi}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class Si{static decodeText(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class w5{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(f9(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class yi extends A9{constructor(e,t,n){const i=new Z8(t,4,2),r=new X2({wireframe:!0,fog:!1,toneMapped:!1});super(i,r),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}class bi extends V8{constructor(e=10,t=10,n=4473924,i=8947848){n=new D0(n),i=new D0(i);const r=t/2,o=e/t,s=e/2,c=[],l=[];for(let f=0,m=0,g=-s;f<=t;f++,g+=o){c.push(-s,0,g,s,0,g),c.push(g,0,-s,g,0,s);const _=f===r?n:i;_.toArray(l,m),m+=3,_.toArray(l,m),m+=3,_.toArray(l,m),m+=3,_.toArray(l,m),m+=3}const u=new y9;u.setAttribute("position",new e9(c,3)),u.setAttribute("color",new e9(l,3));const d=new s2({vertexColors:!0,toneMapped:!1});super(u,d),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:W8}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=W8);class wi extends p2{constructor(e){super(e)}load(e,t,n,i){const r=this,o=this.path===""?Si.extractUrlBase(e):this.path,s=new s3(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(e,function(c){try{t(r.parse(c,o))}catch(l){i?i(l):console.error(l),r.manager.itemError(e)}},n,i)}setMaterialOptions(e){return this.materialOptions=e,this}parse(e,t){const n=e.split(`
`);let i={};const r=/\s+/,o={};for(let c=0;c<n.length;c++){let l=n[c];if(l=l.trim(),l.length===0||l.charAt(0)==="#")continue;const u=l.indexOf(" ");let d=u>=0?l.substring(0,u):l;d=d.toLowerCase();let f=u>=0?l.substring(u+1):"";if(f=f.trim(),d==="newmtl")i={name:f},o[f]=i;else if(d==="ka"||d==="kd"||d==="ks"||d==="ke"){const m=f.split(r,3);i[d]=[parseFloat(m[0]),parseFloat(m[1]),parseFloat(m[2])]}else i[d]=f}const s=new Ei(this.resourcePath||t,this.materialOptions);return s.setCrossOrigin(this.crossOrigin),s.setManager(this.manager),s.setMaterials(o),s}}class Ei{constructor(e="",t={}){this.baseUrl=e,this.options=t,this.materialsInfo={},this.materials={},this.materialsArray=[],this.nameLookup={},this.crossOrigin="anonymous",this.side=this.options.side!==void 0?this.options.side:Z9,this.wrap=this.options.wrap!==void 0?this.options.wrap:V2}setCrossOrigin(e){return this.crossOrigin=e,this}setManager(e){this.manager=e}setMaterials(e){this.materialsInfo=this.convert(e),this.materials={},this.materialsArray=[],this.nameLookup={}}convert(e){if(!this.options)return e;const t={};for(const n in e){const i=e[n],r={};t[n]=r;for(const o in i){let s=!0,c=i[o];const l=o.toLowerCase();switch(l){case"kd":case"ka":case"ks":this.options&&this.options.normalizeRGB&&(c=[c[0]/255,c[1]/255,c[2]/255]),this.options&&this.options.ignoreZeroRGBs&&c[0]===0&&c[1]===0&&c[2]===0&&(s=!1);break}s&&(r[l]=c)}}return t}preload(){for(const e in this.materialsInfo)this.create(e)}getIndex(e){return this.nameLookup[e]}getAsArray(){let e=0;for(const t in this.materialsInfo)this.materialsArray[e]=this.create(t),this.nameLookup[t]=e,e++;return this.materialsArray}create(e){return this.materials[e]===void 0&&this.createMaterial_(e),this.materials[e]}createMaterial_(e){const t=this,n=this.materialsInfo[e],i={name:e,side:this.side};function r(s,c){return typeof c!="string"||c===""?"":/^https?:\/\//i.test(c)?c:s+c}function o(s,c){if(i[s])return;const l=t.getTextureParams(c,i),u=t.loadTexture(r(t.baseUrl,l.url));u.repeat.copy(l.scale),u.offset.copy(l.offset),u.wrapS=t.wrap,u.wrapT=t.wrap,(s==="map"||s==="emissiveMap")&&(u.encoding=k0),i[s]=u}for(const s in n){const c=n[s];let l;if(c!=="")switch(s.toLowerCase()){case"kd":i.color=new D0().fromArray(c).convertSRGBToLinear();break;case"ks":i.specular=new D0().fromArray(c).convertSRGBToLinear();break;case"ke":i.emissive=new D0().fromArray(c).convertSRGBToLinear();break;case"map_kd":o("map",c);break;case"map_ks":o("specularMap",c);break;case"map_ke":o("emissiveMap",c);break;case"norm":o("normalMap",c);break;case"map_bump":case"bump":o("bumpMap",c);break;case"map_d":o("alphaMap",c),i.transparent=!0;break;case"ns":i.shininess=parseFloat(c);break;case"d":l=parseFloat(c),l<1&&(i.opacity=l,i.transparent=!0);break;case"tr":l=parseFloat(c),this.options&&this.options.invertTrProperty&&(l=1-l),l>0&&(i.opacity=1-l,i.transparent=!0);break}}return this.materials[e]=new i3(i),this.materials[e]}getTextureParams(e,t){const n={scale:new E0(1,1),offset:new E0(0,0)},i=e.split(/\s+/);let r;return r=i.indexOf("-bm"),r>=0&&(t.bumpScale=parseFloat(i[r+1]),i.splice(r,2)),r=i.indexOf("-s"),r>=0&&(n.scale.set(parseFloat(i[r+1]),parseFloat(i[r+2])),i.splice(r,4)),r=i.indexOf("-o"),r>=0&&(n.offset.set(parseFloat(i[r+1]),parseFloat(i[r+2])),i.splice(r,4)),n.url=i.join(" ").trim(),n}loadTexture(e,t,n,i,r){const o=this.manager!==void 0?this.manager:r3;let s=o.getHandler(e);s===null&&(s=new gi(o)),s.setCrossOrigin&&s.setCrossOrigin(this.crossOrigin);const c=s.load(e,n,i,r);return t!==void 0&&(c.mapping=t),c}}const Ti=/^[og]\s*(.+)?/,Ai=/^mtllib /,Ci=/^usemtl /,Li=/^usemap /,E5=/\s+/,T5=new P,I8=new P,A5=new P,C5=new P,E9=new P,G2=new D0;function Pi(){const a={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materials:{},materialLibraries:[],startObject:function(e,t){if(this.object&&this.object.fromDeclaration===!1){this.object.name=e,this.object.fromDeclaration=t!==!1;return}const n=this.object&&typeof this.object.currentMaterial=="function"?this.object.currentMaterial():void 0;if(this.object&&typeof this.object._finalize=="function"&&this.object._finalize(!0),this.object={name:e||"",fromDeclaration:t!==!1,geometry:{vertices:[],normals:[],colors:[],uvs:[],hasUVIndices:!1},materials:[],smooth:!0,startMaterial:function(i,r){const o=this._finalize(!1);o&&(o.inherited||o.groupCount<=0)&&this.materials.splice(o.index,1);const s={index:this.materials.length,name:i||"",mtllib:Array.isArray(r)&&r.length>0?r[r.length-1]:"",smooth:o!==void 0?o.smooth:this.smooth,groupStart:o!==void 0?o.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(c){const l={index:typeof c=="number"?c:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};return l.clone=this.clone.bind(l),l}};return this.materials.push(s),s},currentMaterial:function(){if(this.materials.length>0)return this.materials[this.materials.length-1]},_finalize:function(i){const r=this.currentMaterial();if(r&&r.groupEnd===-1&&(r.groupEnd=this.geometry.vertices.length/3,r.groupCount=r.groupEnd-r.groupStart,r.inherited=!1),i&&this.materials.length>1)for(let o=this.materials.length-1;o>=0;o--)this.materials[o].groupCount<=0&&this.materials.splice(o,1);return i&&this.materials.length===0&&this.materials.push({name:"",smooth:this.smooth}),r}},n&&n.name&&typeof n.clone=="function"){const i=n.clone(0);i.inherited=!0,this.object.materials.push(i)}this.objects.push(this.object)},finalize:function(){this.object&&typeof this.object._finalize=="function"&&this.object._finalize(!0)},parseVertexIndex:function(e,t){const n=parseInt(e,10);return(n>=0?n-1:n+t/3)*3},parseNormalIndex:function(e,t){const n=parseInt(e,10);return(n>=0?n-1:n+t/3)*3},parseUVIndex:function(e,t){const n=parseInt(e,10);return(n>=0?n-1:n+t/2)*2},addVertex:function(e,t,n){const i=this.vertices,r=this.object.geometry.vertices;r.push(i[e+0],i[e+1],i[e+2]),r.push(i[t+0],i[t+1],i[t+2]),r.push(i[n+0],i[n+1],i[n+2])},addVertexPoint:function(e){const t=this.vertices;this.object.geometry.vertices.push(t[e+0],t[e+1],t[e+2])},addVertexLine:function(e){const t=this.vertices;this.object.geometry.vertices.push(t[e+0],t[e+1],t[e+2])},addNormal:function(e,t,n){const i=this.normals,r=this.object.geometry.normals;r.push(i[e+0],i[e+1],i[e+2]),r.push(i[t+0],i[t+1],i[t+2]),r.push(i[n+0],i[n+1],i[n+2])},addFaceNormal:function(e,t,n){const i=this.vertices,r=this.object.geometry.normals;T5.fromArray(i,e),I8.fromArray(i,t),A5.fromArray(i,n),E9.subVectors(A5,I8),C5.subVectors(T5,I8),E9.cross(C5),E9.normalize(),r.push(E9.x,E9.y,E9.z),r.push(E9.x,E9.y,E9.z),r.push(E9.x,E9.y,E9.z)},addColor:function(e,t,n){const i=this.colors,r=this.object.geometry.colors;i[e]!==void 0&&r.push(i[e+0],i[e+1],i[e+2]),i[t]!==void 0&&r.push(i[t+0],i[t+1],i[t+2]),i[n]!==void 0&&r.push(i[n+0],i[n+1],i[n+2])},addUV:function(e,t,n){const i=this.uvs,r=this.object.geometry.uvs;r.push(i[e+0],i[e+1]),r.push(i[t+0],i[t+1]),r.push(i[n+0],i[n+1])},addDefaultUV:function(){const e=this.object.geometry.uvs;e.push(0,0),e.push(0,0),e.push(0,0)},addUVLine:function(e){const t=this.uvs;this.object.geometry.uvs.push(t[e+0],t[e+1])},addFace:function(e,t,n,i,r,o,s,c,l){const u=this.vertices.length;let d=this.parseVertexIndex(e,u),f=this.parseVertexIndex(t,u),m=this.parseVertexIndex(n,u);if(this.addVertex(d,f,m),this.addColor(d,f,m),s!==void 0&&s!==""){const g=this.normals.length;d=this.parseNormalIndex(s,g),f=this.parseNormalIndex(c,g),m=this.parseNormalIndex(l,g),this.addNormal(d,f,m)}else this.addFaceNormal(d,f,m);if(i!==void 0&&i!==""){const g=this.uvs.length;d=this.parseUVIndex(i,g),f=this.parseUVIndex(r,g),m=this.parseUVIndex(o,g),this.addUV(d,f,m),this.object.geometry.hasUVIndices=!0}else this.addDefaultUV()},addPointGeometry:function(e){this.object.geometry.type="Points";const t=this.vertices.length;for(let n=0,i=e.length;n<i;n++){const r=this.parseVertexIndex(e[n],t);this.addVertexPoint(r),this.addColor(r)}},addLineGeometry:function(e,t){this.object.geometry.type="Line";const n=this.vertices.length,i=this.uvs.length;for(let r=0,o=e.length;r<o;r++)this.addVertexLine(this.parseVertexIndex(e[r],n));for(let r=0,o=t.length;r<o;r++)this.addUVLine(this.parseUVIndex(t[r],i))}};return a.startObject("",!1),a}class Ri extends p2{constructor(e){super(e),this.materials=null}load(e,t,n,i){const r=this,o=new s3(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(s){try{t(r.parse(s))}catch(c){i?i(c):console.error(c),r.manager.itemError(e)}},n,i)}setMaterials(e){return this.materials=e,this}parse(e){const t=new Pi;e.indexOf(`\r
`)!==-1&&(e=e.replace(/\r\n/g,`
`)),e.indexOf(`\\
`)!==-1&&(e=e.replace(/\\\n/g,""));const n=e.split(`
`);let i=[];for(let s=0,c=n.length;s<c;s++){const l=n[s].trimStart();if(l.length===0)continue;const u=l.charAt(0);if(u!=="#")if(u==="v"){const d=l.split(E5);switch(d[0]){case"v":t.vertices.push(parseFloat(d[1]),parseFloat(d[2]),parseFloat(d[3])),d.length>=7?(G2.setRGB(parseFloat(d[4]),parseFloat(d[5]),parseFloat(d[6])).convertSRGBToLinear(),t.colors.push(G2.r,G2.g,G2.b)):t.colors.push(void 0,void 0,void 0);break;case"vn":t.normals.push(parseFloat(d[1]),parseFloat(d[2]),parseFloat(d[3]));break;case"vt":t.uvs.push(parseFloat(d[1]),parseFloat(d[2]));break}}else if(u==="f"){const f=l.slice(1).trim().split(E5),m=[];for(let _=0,p=f.length;_<p;_++){const h=f[_];if(h.length>0){const E=h.split("/");m.push(E)}}const g=m[0];for(let _=1,p=m.length-1;_<p;_++){const h=m[_],E=m[_+1];t.addFace(g[0],h[0],E[0],g[1],h[1],E[1],g[2],h[2],E[2])}}else if(u==="l"){const d=l.substring(1).trim().split(" ");let f=[];const m=[];if(l.indexOf("/")===-1)f=d;else for(let g=0,_=d.length;g<_;g++){const p=d[g].split("/");p[0]!==""&&f.push(p[0]),p[1]!==""&&m.push(p[1])}t.addLineGeometry(f,m)}else if(u==="p"){const f=l.slice(1).trim().split(" ");t.addPointGeometry(f)}else if((i=Ti.exec(l))!==null){const d=(" "+i[0].slice(1).trim()).slice(1);t.startObject(d)}else if(Ci.test(l))t.object.startMaterial(l.substring(7).trim(),t.materialLibraries);else if(Ai.test(l))t.materialLibraries.push(l.substring(7).trim());else if(Li.test(l))console.warn('THREE.OBJLoader: Rendering identifier "usemap" not supported. Textures must be defined in MTL files.');else if(u==="s"){if(i=l.split(" "),i.length>1){const f=i[1].trim().toLowerCase();t.object.smooth=f!=="0"&&f!=="off"}else t.object.smooth=!0;const d=t.object.currentMaterial();d&&(d.smooth=t.object.smooth)}else{if(l==="\0")continue;console.warn('THREE.OBJLoader: Unexpected line: "'+l+'"')}}t.finalize();const r=new i2;if(r.materialLibraries=[].concat(t.materialLibraries),!(t.objects.length===1&&t.objects[0].geometry.vertices.length===0)===!0)for(let s=0,c=t.objects.length;s<c;s++){const l=t.objects[s],u=l.geometry,d=l.materials,f=u.type==="Line",m=u.type==="Points";let g=!1;if(u.vertices.length===0)continue;const _=new y9;_.setAttribute("position",new e9(u.vertices,3)),u.normals.length>0&&_.setAttribute("normal",new e9(u.normals,3)),u.colors.length>0&&(g=!0,_.setAttribute("color",new e9(u.colors,3))),u.hasUVIndices===!0&&_.setAttribute("uv",new e9(u.uvs,2));const p=[];for(let E=0,w=d.length;E<w;E++){const v=d[E],y=v.name+"_"+v.smooth+"_"+g;let A=t.materials[y];if(this.materials!==null){if(A=this.materials.create(v.name),f&&A&&!(A instanceof s2)){const R=new s2;K9.prototype.copy.call(R,A),R.color.copy(A.color),A=R}else if(m&&A&&!(A instanceof r2)){const R=new r2({size:10,sizeAttenuation:!1});K9.prototype.copy.call(R,A),R.color.copy(A.color),R.map=A.map,A=R}}A===void 0&&(f?A=new s2:m?A=new r2({size:1,sizeAttenuation:!1}):A=new i3,A.name=v.name,A.flatShading=!v.smooth,A.vertexColors=g,t.materials[y]=A),p.push(A)}let h;if(p.length>1){for(let E=0,w=d.length;E<w;E++){const v=d[E];_.addGroup(v.groupStart,v.groupCount,E)}f?h=new V8(_,p):m?h=new P8(_,p):h=new A9(_,p)}else f?h=new V8(_,p[0]):m?h=new P8(_,p[0]):h=new A9(_,p[0]);h.name=l.name,r.add(h)}else if(t.vertices.length>0){const s=new r2({size:1,sizeAttenuation:!1}),c=new y9;c.setAttribute("position",new e9(t.vertices,3)),t.colors.length>0&&t.colors[0]!==void 0&&(c.setAttribute("color",new e9(t.colors,3)),s.vertexColors=!0);const l=new P8(c,s);r.add(l)}return r}}const L5={type:"change"},U8={type:"start"},P5={type:"end"};class Di extends M1{constructor(e,t){super(),this.object=e,this.domElement=t,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new P,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:S1.ROTATE,MIDDLE:S1.DOLLY,RIGHT:S1.PAN},this.touches={ONE:y1.ROTATE,TWO:y1.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return s.phi},this.getAzimuthalAngle=function(){return s.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(C){C.addEventListener("keydown",G0),this._domElementKeyEvents=C},this.stopListenToKeyEvents=function(){this._domElementKeyEvents.removeEventListener("keydown",G0),this._domElementKeyEvents=null},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(L5),n.update(),r=i.NONE},this.update=function(){const C=new P,j=new x1().setFromUnitVectors(e.up,new P(0,1,0)),F=j.clone().invert(),l0=new P,d0=new x1,p0=2*Math.PI;return function(){const f0=n.object.position;C.copy(f0).sub(n.target),C.applyQuaternion(j),s.setFromVector3(C),n.autoRotate&&r===i.NONE&&M(R()),n.enableDamping?(s.theta+=c.theta*n.dampingFactor,s.phi+=c.phi*n.dampingFactor):(s.theta+=c.theta,s.phi+=c.phi);let b0=n.minAzimuthAngle,L0=n.maxAzimuthAngle;return isFinite(b0)&&isFinite(L0)&&(b0<-Math.PI?b0+=p0:b0>Math.PI&&(b0-=p0),L0<-Math.PI?L0+=p0:L0>Math.PI&&(L0-=p0),b0<=L0?s.theta=Math.max(b0,Math.min(L0,s.theta)):s.theta=s.theta>(b0+L0)/2?Math.max(b0,s.theta):Math.min(L0,s.theta)),s.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,s.phi)),s.makeSafe(),s.radius*=l,s.radius=Math.max(n.minDistance,Math.min(n.maxDistance,s.radius)),n.enableDamping===!0?n.target.addScaledVector(u,n.dampingFactor):n.target.add(u),C.setFromSpherical(s),C.applyQuaternion(F),f0.copy(n.target).add(C),n.object.lookAt(n.target),n.enableDamping===!0?(c.theta*=1-n.dampingFactor,c.phi*=1-n.dampingFactor,u.multiplyScalar(1-n.dampingFactor)):(c.set(0,0,0),u.set(0,0,0)),l=1,d||l0.distanceToSquared(n.object.position)>o||8*(1-d0.dot(n.object.quaternion))>o?(n.dispatchEvent(L5),l0.copy(n.object.position),d0.copy(n.object.quaternion),d=!1,!0):!1}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",x),n.domElement.removeEventListener("pointerdown",T0),n.domElement.removeEventListener("pointercancel",W0),n.domElement.removeEventListener("wheel",O0),n.domElement.removeEventListener("pointermove",X0),n.domElement.removeEventListener("pointerup",W0),n._domElementKeyEvents!==null&&(n._domElementKeyEvents.removeEventListener("keydown",G0),n._domElementKeyEvents=null)};const n=this,i={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let r=i.NONE;const o=1e-6,s=new w5,c=new w5;let l=1;const u=new P;let d=!1;const f=new E0,m=new E0,g=new E0,_=new E0,p=new E0,h=new E0,E=new E0,w=new E0,v=new E0,y=[],A={};function R(){return 2*Math.PI/60/60*n.autoRotateSpeed}function N(){return Math.pow(.95,n.zoomSpeed)}function M(C){c.theta-=C}function T(C){c.phi-=C}const Y=function(){const C=new P;return function(F,l0){C.setFromMatrixColumn(l0,0),C.multiplyScalar(-F),u.add(C)}}(),B=function(){const C=new P;return function(F,l0){n.screenSpacePanning===!0?C.setFromMatrixColumn(l0,1):(C.setFromMatrixColumn(l0,0),C.crossVectors(n.object.up,C)),C.multiplyScalar(F),u.add(C)}}(),I=function(){const C=new P;return function(F,l0){const d0=n.domElement;if(n.object.isPerspectiveCamera){const p0=n.object.position;C.copy(p0).sub(n.target);let u0=C.length();u0*=Math.tan(n.object.fov/2*Math.PI/180),Y(2*F*u0/d0.clientHeight,n.object.matrix),B(2*l0*u0/d0.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(Y(F*(n.object.right-n.object.left)/n.object.zoom/d0.clientWidth,n.object.matrix),B(l0*(n.object.top-n.object.bottom)/n.object.zoom/d0.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function O(C){n.object.isPerspectiveCamera?l/=C:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom*C)),n.object.updateProjectionMatrix(),d=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function W(C){n.object.isPerspectiveCamera?l*=C:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/C)),n.object.updateProjectionMatrix(),d=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function J(C){f.set(C.clientX,C.clientY)}function K(C){E.set(C.clientX,C.clientY)}function X(C){_.set(C.clientX,C.clientY)}function n0(C){m.set(C.clientX,C.clientY),g.subVectors(m,f).multiplyScalar(n.rotateSpeed);const j=n.domElement;M(2*Math.PI*g.x/j.clientHeight),T(2*Math.PI*g.y/j.clientHeight),f.copy(m),n.update()}function e0(C){w.set(C.clientX,C.clientY),v.subVectors(w,E),v.y>0?O(N()):v.y<0&&W(N()),E.copy(w),n.update()}function M0(C){p.set(C.clientX,C.clientY),h.subVectors(p,_).multiplyScalar(n.panSpeed),I(h.x,h.y),_.copy(p),n.update()}function i0(C){C.deltaY<0?W(N()):C.deltaY>0&&O(N()),n.update()}function k(C){let j=!1;switch(C.code){case n.keys.UP:C.ctrlKey||C.metaKey||C.shiftKey?T(2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):I(0,n.keyPanSpeed),j=!0;break;case n.keys.BOTTOM:C.ctrlKey||C.metaKey||C.shiftKey?T(-2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):I(0,-n.keyPanSpeed),j=!0;break;case n.keys.LEFT:C.ctrlKey||C.metaKey||C.shiftKey?M(2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):I(n.keyPanSpeed,0),j=!0;break;case n.keys.RIGHT:C.ctrlKey||C.metaKey||C.shiftKey?M(-2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):I(-n.keyPanSpeed,0),j=!0;break}j&&(C.preventDefault(),n.update())}function Z(){if(y.length===1)f.set(y[0].pageX,y[0].pageY);else{const C=.5*(y[0].pageX+y[1].pageX),j=.5*(y[0].pageY+y[1].pageY);f.set(C,j)}}function a0(){if(y.length===1)_.set(y[0].pageX,y[0].pageY);else{const C=.5*(y[0].pageX+y[1].pageX),j=.5*(y[0].pageY+y[1].pageY);_.set(C,j)}}function c0(){const C=y[0].pageX-y[1].pageX,j=y[0].pageY-y[1].pageY,F=Math.sqrt(C*C+j*j);E.set(0,F)}function z(){n.enableZoom&&c0(),n.enablePan&&a0()}function y0(){n.enableZoom&&c0(),n.enableRotate&&Z()}function v0(C){if(y.length==1)m.set(C.pageX,C.pageY);else{const F=o0(C),l0=.5*(C.pageX+F.x),d0=.5*(C.pageY+F.y);m.set(l0,d0)}g.subVectors(m,f).multiplyScalar(n.rotateSpeed);const j=n.domElement;M(2*Math.PI*g.x/j.clientHeight),T(2*Math.PI*g.y/j.clientHeight),f.copy(m)}function r0(C){if(y.length===1)p.set(C.pageX,C.pageY);else{const j=o0(C),F=.5*(C.pageX+j.x),l0=.5*(C.pageY+j.y);p.set(F,l0)}h.subVectors(p,_).multiplyScalar(n.panSpeed),I(h.x,h.y),_.copy(p)}function x0(C){const j=o0(C),F=C.pageX-j.x,l0=C.pageY-j.y,d0=Math.sqrt(F*F+l0*l0);w.set(0,d0),v.set(0,Math.pow(w.y/E.y,n.zoomSpeed)),O(v.y),E.copy(w)}function F0(C){n.enableZoom&&x0(C),n.enablePan&&r0(C)}function m0(C){n.enableZoom&&x0(C),n.enableRotate&&v0(C)}function T0(C){n.enabled!==!1&&(y.length===0&&(n.domElement.setPointerCapture(C.pointerId),n.domElement.addEventListener("pointermove",X0),n.domElement.addEventListener("pointerup",W0)),G(C),C.pointerType==="touch"?s9(C):$0(C))}function X0(C){n.enabled!==!1&&(C.pointerType==="touch"?b(C):Y0(C))}function W0(C){$(C),y.length===0&&(n.domElement.releasePointerCapture(C.pointerId),n.domElement.removeEventListener("pointermove",X0),n.domElement.removeEventListener("pointerup",W0)),n.dispatchEvent(P5),r=i.NONE}function $0(C){let j;switch(C.button){case 0:j=n.mouseButtons.LEFT;break;case 1:j=n.mouseButtons.MIDDLE;break;case 2:j=n.mouseButtons.RIGHT;break;default:j=-1}switch(j){case S1.DOLLY:if(n.enableZoom===!1)return;K(C),r=i.DOLLY;break;case S1.ROTATE:if(C.ctrlKey||C.metaKey||C.shiftKey){if(n.enablePan===!1)return;X(C),r=i.PAN}else{if(n.enableRotate===!1)return;J(C),r=i.ROTATE}break;case S1.PAN:if(C.ctrlKey||C.metaKey||C.shiftKey){if(n.enableRotate===!1)return;J(C),r=i.ROTATE}else{if(n.enablePan===!1)return;X(C),r=i.PAN}break;default:r=i.NONE}r!==i.NONE&&n.dispatchEvent(U8)}function Y0(C){switch(r){case i.ROTATE:if(n.enableRotate===!1)return;n0(C);break;case i.DOLLY:if(n.enableZoom===!1)return;e0(C);break;case i.PAN:if(n.enablePan===!1)return;M0(C);break}}function O0(C){n.enabled===!1||n.enableZoom===!1||r!==i.NONE||(C.preventDefault(),n.dispatchEvent(U8),i0(C),n.dispatchEvent(P5))}function G0(C){n.enabled===!1||n.enablePan===!1||k(C)}function s9(C){switch(t0(C),y.length){case 1:switch(n.touches.ONE){case y1.ROTATE:if(n.enableRotate===!1)return;Z(),r=i.TOUCH_ROTATE;break;case y1.PAN:if(n.enablePan===!1)return;a0(),r=i.TOUCH_PAN;break;default:r=i.NONE}break;case 2:switch(n.touches.TWO){case y1.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;z(),r=i.TOUCH_DOLLY_PAN;break;case y1.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;y0(),r=i.TOUCH_DOLLY_ROTATE;break;default:r=i.NONE}break;default:r=i.NONE}r!==i.NONE&&n.dispatchEvent(U8)}function b(C){switch(t0(C),r){case i.TOUCH_ROTATE:if(n.enableRotate===!1)return;v0(C),n.update();break;case i.TOUCH_PAN:if(n.enablePan===!1)return;r0(C),n.update();break;case i.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;F0(C),n.update();break;case i.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;m0(C),n.update();break;default:r=i.NONE}}function x(C){n.enabled!==!1&&C.preventDefault()}function G(C){y.push(C)}function $(C){delete A[C.pointerId];for(let j=0;j<y.length;j++)if(y[j].pointerId==C.pointerId){y.splice(j,1);return}}function t0(C){let j=A[C.pointerId];j===void 0&&(j=new E0,A[C.pointerId]=j),j.set(C.pageX,C.pageY)}function o0(C){const j=C.pointerId===y[0].pointerId?y[1]:y[0];return A[j.pointerId]}n.domElement.addEventListener("contextmenu",x),n.domElement.addEventListener("pointerdown",T0),n.domElement.addEventListener("pointercancel",W0),n.domElement.addEventListener("wheel",O0,{passive:!1}),this.update()}}function R5(){var a=[[-0,0],[1113e-8,-1113e-8],[4456e-8,-4456e-8],[10038e-8,-10038e-8],[17864e-8,-17864e-8],[27944e-8,-27944e-8],[40283e-8,-40283e-8],[54889e-8,-54889e-8],[71768e-8,-71768e-8],[90926e-8,-90926e-8],[.0011237,-.0011237],[.00136105,-.00136105],[.00162138,-.00162138],[.00190473,-.00190473],[.00221115,-.00221115],[.0025407,-.0025407],[.00289341,-.00289341],[.00326934,-.00326934],[.00366853,-.00366853],[.00409101,-.00409101],[.00453682,-.00453682],[.005006,-.005006],[.00549857,-.00549857],[.00601457,-.00601457],[.00655402,-.00655402],[.00711695,-.00711695],[.00770338,-.00770338],[.00831332,-.00831332],[.0089468,-.0089468],[.00960383,-.00960383],[.01028442,-.01028442],[.01098857,-.01098857],[.01171631,-.01171631],[.01246762,-.01246762],[.01324252,-.01324252],[.014041,-.014041],[.01486306,-.01486306],[.01570869,-.01570869],[.01657789,-.01657789],[.01747064,-.01747064],[.01838693,-.01838693],[.01932675,-.01932675],[.02029008,-.02029008],[.02127689,-.02127689],[.02228717,-.02228717],[.02332089,-.02332089],[.02437802,-.02437802],[.02545853,-.02545853],[.02656239,-.02656239],[.02768956,-.02768956],[.02884,-.02884],[.03001368,-.03001368],[.03121056,-.03121056],[.03243057,-.03243057],[.03367369,-.03367369],[.03493986,-.03493986],[.03622903,-.03622903],[.03754113,-.03754113],[.03887613,-.03887613],[.04023394,-.04023394],[.04161452,-.04161452],[.04301781,-.04301781],[.04444372,-.04444372],[.04589219,-.04589219],[.04736316,-.04736316],[.04885655,-.04885655],[.05037228,-.05037228],[.05191027,-.05191027],[.05347044,-.05347044],[.05505272,-.05505272],[.05665701,-.05665701],[.05828322,-.05828322],[.05993127,-.05993127],[.06160107,-.06160107],[.06329251,-.06329251],[.06500551,-.06500551],[.06673997,-.06673997],[.06849577,-.06849577],[.07027283,-.07027283],[.07207103,-.07207103],[.07389027,-.07389027],[.07573043,-.07573043],[.07759141,-.07759141],[.07947309,-.07947309],[.08137536,-.08137536],[.08329809,-.08329809],[.08524117,-.08524117],[.08720447,-.08720447],[.08918787,-.08918787],[.09119125,-.09119125],[.09321447,-.09321447],[.0952574,-.0952574],[.09731992,-.09731992],[.09940188,-.09940188],[.10150316,-.10150316],[.10362361,-.10362361],[.10576309,-.10576309],[.10792147,-.10792147],[.11009859,-.11009859],[.11229432,-.11229432],[.1145085,-.1145085],[.11674099,-.11674099],[.11899164,-.11899164],[.12126029,-.12126029],[.12354679,-.12354679],[.12585098,-.12585098],[.12817271,-.12817271],[.13051181,-.13051181],[.13286814,-.13286814],[.13524151,-.13524151],[.13763178,-.13763178],[.14003877,-.14003877],[.14246232,-.14246232],[.14490226,-.14490226],[.14735843,-.14735843],[.14983064,-.14983064],[.15231873,-.15231873],[.15482252,-.15482252],[.15734184,-.15734184],[.15987651,-.15987651],[.16242635,-.16242635],[.16499119,-.16499119],[.16757085,-.16757085],[.17016513,-.17016513],[.17277387,-.17277387],[.17539688,-.17539688],[.17803397,-.17803397],[.18068495,-.18068495],[.18334965,-.18334965],[.18602786,-.18602786],[.18871941,-.18871941],[.19142411,-.19142411],[.19414176,-.19414176],[.19687217,-.19687217],[.19961514,-.19961514],[.2023705,-.2023705],[.20513803,-.20513803],[.20791756,-.20791756],[.21070888,-.21070888],[.21351179,-.21351179],[.2163261,-.2163261],[.21915162,-.21915162],[.22198813,-.22198813],[.22483546,-.22483546],[.22769339,-.22769339],[.23056173,-.23056173],[.23344028,-.23344028],[.23632883,-.23632883],[.2392272,-.2392272],[.24213516,-.24213516],[.24505253,-.24505253],[.24797911,-.24797911],[.25091469,-.25091469],[.25385906,-.25385906],[.25681203,-.25681203],[.2597734,-.2597734],[.26274296,-.26274296],[.2657205,-.2657205],[.26870584,-.26870584],[.27169876,-.27169876],[.27469906,-.27469906],[.27770653,-.27770653],[.28072099,-.28072099],[.28374222,-.28374222],[.28677002,-.28677002],[.28980418,-.28980418],[.29284452,-.29284452],[.29589082,-.29589082],[.29894289,-.29894289],[.30200052,-.30200052],[.30506352,-.30506352],[.30813168,-.30813168],[.3112048,-.3112048],[.31428268,-.31428268],[.31736513,-.31736513],[.32045194,-.32045194],[.32354292,-.32354292],[.32663787,-.32663787],[.3297366,-.3297366],[.3328389,-.3328389],[.33594458,-.33594458],[.33905345,-.33905345],[.34216532,-.34216532],[.34527998,-.34527998],[.34839724,-.34839724],[.35151692,-.35151692],[.35463883,-.35463883],[.35776276,-.35776276],[.36088854,-.36088854],[.36401597,-.36401597],[.36714487,-.36714487],[.37027505,-.37027505],[.37340632,-.37340632],[.3765385,-.3765385],[.37967141,-.37967141],[.38280485,-.38280485],[.38593866,-.38593866],[.38907265,-.38907265],[.39220664,-.39220664],[.39534044,-.39534044],[.3984739,-.3984739],[.40160682,-.40160682],[.40473903,-.40473903],[.40787037,-.40787037],[.41100064,-.41100064],[.4141297,-.4141297],[.41725736,-.41725736],[.42038346,-.42038346],[.42350782,-.42350782],[.42663029,-.42663029],[.4297507,-.4297507],[.43286888,-.43286888],[.43598467,-.43598467],[.43909792,-.43909792],[.44220845,-.44220845],[.44531612,-.44531612],[.44842077,-.44842077],[.45152224,-.45152224],[.45462039,-.45462039],[.45771504,-.45771504],[.46080607,-.46080607],[.46389331,-.46389331],[.46697662,-.46697662],[.47005585,-.47005585],[.47313087,-.47313087],[.47620151,-.47620151],[.47926766,-.47926766],[.48232915,-.48232915],[.48538586,-.48538586],[.48843765,-.48843765],[.49148438,-.49148438],[.49452593,-.49452593],[.49756215,-.49756215],[.50059291,-.50059291],[.5036181,-.5036181],[.50663757,-.50663757],[.50965121,-.50965121],[.51265889,-.51265889],[.51566049,-.51566049],[.51865588,-.51865588],[.52164496,-.52164496],[.52462759,-.52462759],[.52760367,-.52760367],[.53057308,-.53057308],[.5335357,-.5335357],[.53649143,-.53649143],[.53944016,-.53944016],[.54238178,-.54238178],[.54531619,-.54531619],[.54824327,-.54824327],[.55116293,-.55116293],[.55407506,-.55407506],[.55697957,-.55697957],[.55987635,-.55987635],[.56276532,-.56276532],[.56564637,-.56564637],[.56851942,-.56851942],[.57138437,-.57138437],[.57424113,-.57424113],[.57708961,-.57708961],[.57992974,-.57992974],[.58276141,-.58276141],[.58558456,-.58558456],[.58839909,-.58839909],[.59120494,-.59120494],[.59400201,-.59400201],[.59679023,-.59679023],[.59956954,-.59956954],[.60233984,-.60233984],[.60510108,-.60510108],[.60785318,-.60785318],[.61059607,-.61059607],[.61332969,-.61332969],[.61605396,-.61605396],[.61876883,-.61876883],[.62147423,-.62147423],[.6241701,-.6241701],[.62685639,-.62685639],[.62953302,-.62953302],[.63219995,-.63219995],[.63485712,-.63485712],[.63750447,-.63750447],[.64014196,-.64014196],[.64276953,-.64276953],[.64538713,-.64538713],[.64799472,-.64799472],[.65059225,-.65059225],[.65317967,-.65317967],[.65575693,-.65575693],[.65832401,-.65832401],[.66088085,-.66088085],[.66342742,-.66342742],[.66596368,-.66596368],[.66848958,-.66848958],[.67100511,-.67100511],[.67351021,-.67351021],[.67600486,-.67600486],[.67848903,-.67848903],[.68096269,-.68096269],[.6834258,-.6834258],[.68587834,-.68587834],[.68832028,-.68832028],[.6907516,-.6907516],[.69317228,-.69317228],[.69558228,-.69558228],[.6979816,-.6979816],[.7003702,-.7003702],[.70274807,-.70274807],[.7051152,-.7051152],[.70747156,-.70747156],[.70981713,-.70981713],[.71215192,-.71215192],[.71447589,-.71447589],[.71678904,-.71678904],[.71909136,-.71909136],[.72138283,-.72138283],[.72366346,-.72366346],[.72593322,-.72593322],[.72819212,-.72819212],[.73044014,-.73044014],[.73267729,-.73267729],[.73490356,-.73490356],[.73711894,-.73711894],[.73932344,-.73932344],[.74151704,-.74151704],[.74369977,-.74369977],[.74587161,-.74587161],[.74803256,-.74803256],[.75018263,-.75018263],[.75232183,-.75232183],[.75445015,-.75445015],[.75656761,-.75656761],[.75867421,-.75867421],[.76076996,-.76076996],[.76285486,-.76285486],[.76492893,-.76492893],[.76699218,-.76699218],[.76904461,-.76904461],[.77108624,-.77108624],[.77311707,-.77311707],[.77513714,-.77513714],[.77714644,-.77714644],[.77914499,-.77914499],[.78113281,-.78113281],[.78310991,-.78310991],[.78507632,-.78507632],[.78703204,-.78703204],[.78897711,-.78897711],[.79091152,-.79091152],[.79283532,-.79283532],[.79474851,-.79474851],[.79665112,-.79665112],[.79854317,-.79854317],[.80042469,-.80042469],[.80229569,-.80229569],[.80415619,-.80415619],[.80600624,-.80600624],[.80784584,-.80784584],[.80967502,-.80967502],[.81149382,-.81149382],[.81330226,-.81330226],[.81510035,-.81510035],[.81688815,-.81688815],[.81866566,-.81866566],[.82043292,-.82043292],[.82218996,-.82218996],[.82393681,-.82393681],[.82567351,-.82567351],[.82740007,-.82740007],[.82911653,-.82911653],[.83082293,-.83082293],[.8325193,-.8325193],[.83420567,-.83420567],[.83588207,-.83588207],[.83754853,-.83754853],[.8392051,-.8392051],[.8408518,-.8408518],[.84248868,-.84248868],[.84411576,-.84411576],[.84573309,-.84573309],[.84734069,-.84734069],[.84893861,-.84893861],[.85052688,-.85052688],[.85210554,-.85210554],[.85367463,-.85367463],[.85523418,-.85523418],[.85678424,-.85678424],[.85832485,-.85832485],[.85985603,-.85985603],[.86137784,-.86137784],[.86289031,-.86289031],[.86439348,-.86439348],[.8658874,-.8658874],[.86737209,-.86737209],[.86884761,-.86884761],[.870314,-.870314],[.8717713,-.8717713],[.87321954,-.87321954],[.87465877,-.87465877],[.87608904,-.87608904],[.87751039,-.87751039],[.87892285,-.87892285],[.88032648,-.88032648],[.88172131,-.88172131],[.88310739,-.88310739],[.88448476,-.88448476],[.88585348,-.88585348],[.88721357,-.88721357],[.88856509,-.88856509],[.88990807,-.88990807],[.89124258,-.89124258],[.89256864,-.89256864],[.89388631,-.89388631],[.89519563,-.89519563],[.89649665,-.89649665],[.89778941,-.89778941],[.89907395,-.89907395],[.90035033,-.90035033],[.9016186,-.9016186],[.90287878,-.90287878],[.90413094,-.90413094],[.90537512,-.90537512],[.90661137,-.90661137],[.90783973,-.90783973],[.90906025,-.90906025],[.91027298,-.91027298],[.91147797,-.91147797],[.91267525,-.91267525],[.91386489,-.91386489],[.91504692,-.91504692],[.9162214,-.9162214],[.91738837,-.91738837],[.91854788,-.91854788],[.91969998,-.91969998],[.92084472,-.92084472],[.92198214,-.92198214],[.9231123,-.9231123],[.92423523,-.92423523],[.925351,-.925351],[.92645965,-.92645965],[.92756122,-.92756122],[.92865577,-.92865577],[.92974334,-.92974334],[.93082399,-.93082399],[.93189775,-.93189775],[.93296469,-.93296469],[.93402485,-.93402485],[.93507827,-.93507827],[.93612502,-.93612502],[.93716513,-.93716513],[.93819865,-.93819865],[.93922564,-.93922564],[.94024614,-.94024614],[.94126021,-.94126021],[.94226789,-.94226789],[.94326922,-.94326922],[.94426427,-.94426427],[.94525308,-.94525308],[.9462357,-.9462357],[.94721217,-.94721217],[.94818256,-.94818256],[.9491469,-.9491469],[.95010524,-.95010524],[.95105764,-.95105764],[.95200415,-.95200415],[.95294481,-.95294481],[.95387968,-.95387968],[.95480879,-.95480879],[.95573221,-.95573221],[.95664998,-.95664998],[.95756216,-.95756216],[.95846878,-.95846878],[.9593699,-.9593699],[.96026557,-.96026557],[.96115584,-.96115584],[.96204076,-.96204076],[.96292037,-.96292037],[.96379474,-.96379474],[.96466389,-.96466389],[.96552789,-.96552789],[.96638679,-.96638679],[.96724063,-.96724063],[.96808946,-.96808946],[.96893334,-.96893334],[.9697723,-.9697723],[.97060641,-.97060641],[.9714357,-.9714357],[.97226024,-.97226024],[.97308006,-.97308006],[.97389522,-.97389522],[.97470576,-.97470576],[.97551174,-.97551174],[.9763132,-.9763132],[.9771102,-.9771102],[.97790277,-.97790277],[.97869098,-.97869098],[.97947487,-.97947487],[.98025448,-.98025448],[.98102987,-.98102987],[.98180109,-.98180109],[.98256818,-.98256818],[.9833312,-.9833312],[.98409018,-.98409018],[.98484519,-.98484519],[.98559627,-.98559627],[.98634346,-.98634346],[.98708682,-.98708682],[.98782639,-.98782639],[.98856223,-.98856223],[.98929438,-.98929438],[.99002289,-.99002289],[.99074781,-.99074781],[.99146918,-.99146918],[.99218706,-.99218706],[.99290149,-.99290149],[.99361252,-.99361252],[.9943202,-.9943202],[.99502458,-.99502458],[.9957257,-.9957257],[.99642362,-.99642362],[.99711837,-.99711837],[.99781002,-.99781002],[.9984986,-.9984986],[.99918417,-.99918417],[.99986677,-.99986677],[1.00054645,-1.00054645],[1.00122326,-1.00122326],[1.00189724,-1.00189724],[1.00256845,-1.00256845],[1.00323692,-1.00323692],[1.00390272,-1.00390272],[1.00456588,-1.00456588],[1.00522646,-1.00522646],[1.00588449,-1.00588449],[1.00654003,-1.00654003],[1.00719313,-1.00719313],[1.00784383,-1.00784383],[1.00849218,-1.00849218],[1.00913823,-1.00913823],[1.00978202,-1.00978202],[1.0104236,-1.0104236],[1.01106302,-1.01106302],[1.01170032,-1.01170032],[1.01233556,-1.01233556],[1.01296877,-1.01296877],[1.01360001,-1.01360001],[1.01422933,-1.01422933],[1.01485676,-1.01485676],[1.01548236,-1.01548236],[1.01610617,-1.01610617],[1.01672824,-1.01672824],[1.01734862,-1.01734862],[1.01796735,-1.01796735],[1.01858448,-1.01858448],[1.01920006,-1.01920006],[1.01981412,-1.01981412],[1.02042673,-1.02042673],[1.02103792,-1.02103792],[1.02164774,-1.02164774],[1.02225624,-1.02225624],[1.02286347,-1.02286347],[1.02346946,-1.02346946],[1.02407427,-1.02407427],[1.02467794,-1.02467794],[1.02528052,-1.02528052],[1.02588206,-1.02588206],[1.0264826,-1.0264826],[1.02708218,-1.02708218],[1.02768085,-1.02768085],[1.02827867,-1.02827867],[1.02887567,-1.02887567],[1.0294719,-1.0294719],[1.0300674,-1.0300674],[1.03066223,-1.03066223],[1.03125642,-1.03125642],[1.03185003,-1.03185003],[1.03244309,-1.03244309],[1.03303566,-1.03303566],[1.03362778,-1.03362778],[1.0342195,-1.0342195],[1.03481086,-1.03481086],[1.0354019,-1.0354019],[1.03599268,-1.03599268],[1.03658324,-1.03658324],[1.03717361,-1.03717361],[1.03776386,-1.03776386],[1.03835402,-1.03835402],[1.03894414,-1.03894414],[1.03953426,-1.03953426],[1.04012443,-1.04012443],[1.0407147,-1.0407147],[1.04130511,-1.04130511],[1.04189571,-1.04189571],[1.04248653,-1.04248653],[1.04307763,-1.04307763],[1.04366905,-1.04366905],[1.04426084,-1.04426084],[1.04485303,-1.04485303],[1.04544569,-1.04544569],[1.04603884,-1.04603884],[1.04663254,-1.04663254],[1.04722683,-1.04722683],[1.04782176,-1.04782176],[1.04841737,-1.04841737],[1.0490137,-1.0490137],[1.0496108,-1.0496108],[1.05020872,-1.05020872],[1.0508075,-1.0508075],[1.05140718,-1.05140718],[1.05200782,-1.05200782],[1.05260944,-1.05260944],[1.05321211,-1.05321211],[1.05381586,-1.05381586],[1.05442074,-1.05442074],[1.0550268,-1.0550268],[1.05563407,-1.05563407],[1.0562426,-1.0562426],[1.05685244,-1.05685244],[1.05746364,-1.05746364],[1.05807623,-1.05807623],[1.05869026,-1.05869026],[1.05930577,-1.05930577],[1.05992282,-1.05992282],[1.06054144,-1.06054144],[1.06116169,-1.06116169],[1.06178359,-1.06178359],[1.06240721,-1.06240721],[1.06303258,-1.06303258],[1.06365974,-1.06365974],[1.06428875,-1.06428875],[1.06491965,-1.06491965],[1.06555248,-1.06555248],[1.06618728,-1.06618728],[1.0668241,-1.0668241],[1.06746299,-1.06746299],[1.06810399,-1.06810399],[1.06874714,-1.06874714],[1.06939249,-1.06939249],[1.07004008,-1.07004008],[1.07068996,-1.07068996],[1.07134218,-1.07134218],[1.07199676,-1.07199676],[1.07265377,-1.07265377],[1.07331325,-1.07331325],[1.07397523,-1.07397523],[1.07463977,-1.07463977],[1.07530691,-1.07530691],[1.07597669,-1.07597669],[1.07664916,-1.07664916],[1.07732436,-1.07732436],[1.07800233,-1.07800233],[1.07868313,-1.07868313],[1.0793668,-1.0793668],[1.08005337,-1.08005337],[1.08074291,-1.08074291],[1.08143544,-1.08143544],[1.08213101,-1.08213101],[1.08282967,-1.08282967],[1.08353147,-1.08353147],[1.08423644,-1.08423644],[1.08494464,-1.08494464],[1.08565611,-1.08565611],[1.08637088,-1.08637088],[1.08708902,-1.08708902],[1.08781055,-1.08781055],[1.08853553,-1.08853553],[1.089264,-1.089264],[1.08999601,-1.08999601],[1.0907316,-1.0907316],[1.09147081,-1.09147081],[1.09221369,-1.09221369],[1.09296029,-1.09296029],[1.09371065,-1.09371065],[1.09446481,-1.09446481],[1.09522282,-1.09522282],[1.09598473,-1.09598473],[1.09675058,-1.09675058],[1.09752041,-1.09752041],[1.09829427,-1.09829427],[1.09907221,-1.09907221],[1.09985426,-1.09985426],[1.10064048,-1.10064048],[1.10143092,-1.10143092],[1.1022256,-1.1022256],[1.10302459,-1.10302459],[1.10382793,-1.10382793],[1.10463565,-1.10463565],[1.10544781,-1.10544781],[1.10626446,-1.10626446],[1.10708563,-1.10708563],[1.10791138,-1.10791138],[1.10874175,-1.10874175],[1.10957678,-1.10957678],[1.11041652,-1.11041652],[1.11126101,-1.11126101],[1.11211031,-1.11211031],[1.11296446,-1.11296446],[1.1138235,-1.1138235],[1.11468748,-1.11468748],[1.11555644,-1.11555644],[1.11643044,-1.11643044],[1.11730951,-1.11730951],[1.11819371,-1.11819371],[1.11908308,-1.11908308],[1.11997766,-1.11997766],[1.12087751,-1.12087751],[1.12178267,-1.12178267],[1.12269318,-1.12269318],[1.12360909,-1.12360909],[1.12453045,-1.12453045],[1.12545731,-1.12545731],[1.12638971,-1.12638971],[1.1273277,-1.1273277],[1.12827133,-1.12827133],[1.12922064,-1.12922064],[1.13017568,-1.13017568],[1.13113649,-1.13113649],[1.13210313,-1.13210313],[1.13307565,-1.13307565],[1.13405408,-1.13405408],[1.13503848,-1.13503848],[1.13602889,-1.13602889],[1.13702537,-1.13702537],[1.13802795,-1.13802795],[1.1390367,-1.1390367],[1.14005164,-1.14005164],[1.14107285,-1.14107285],[1.14210035,-1.14210035],[1.14313421,-1.14313421],[1.14417446,-1.14417446],[1.14522116,-1.14522116],[1.14627436,-1.14627436],[1.1473341,-1.1473341],[1.14840043,-1.14840043],[1.14947341,-1.14947341],[1.15055307,-1.15055307],[1.15163948,-1.15163948],[1.15273268,-1.15273268],[1.15383271,-1.15383271],[1.15493963,-1.15493963],[1.1560535,-1.1560535],[1.15717434,-1.15717434],[1.15830223,-1.15830223],[1.15943721,-1.15943721],[1.16057932,-1.16057932],[1.16172862,-1.16172862],[1.16288516,-1.16288516],[1.16404898,-1.16404898],[1.16522015,-1.16522015],[1.16639871,-1.16639871],[1.16758471,-1.16758471],[1.1687782,-1.1687782],[1.16997924,-1.16997924],[1.17118787,-1.17118787],[1.17240415,-1.17240415],[1.17362812,-1.17362812],[1.17485985,-1.17485985],[1.17609938,-1.17609938],[1.17734677,-1.17734677],[1.17860206,-1.17860206],[1.17986532,-1.17986532],[1.18113658,-1.18113658],[1.18241591,-1.18241591],[1.18370336,-1.18370336],[1.18499899,-1.18499899],[1.18630283,-1.18630283],[1.18761496,-1.18761496],[1.18893542,-1.18893542],[1.19026427,-1.19026427],[1.19160156,-1.19160156],[1.19294734,-1.19294734],[1.19430168,-1.19430168],[1.19566462,-1.19566462],[1.19703622,-1.19703622],[1.19841654,-1.19841654],[1.19980562,-1.19980562],[1.20120354,-1.20120354],[1.20261033,-1.20261033],[1.20402607,-1.20402607],[1.2054508,-1.2054508],[1.20688458,-1.20688458],[1.20832747,-1.20832747],[1.20977952,-1.20977952],[1.2112408,-1.2112408],[1.21271136,-1.21271136],[1.21419125,-1.21419125],[1.21568055,-1.21568055],[1.21717929,-1.21717929],[1.21868755,-1.21868755],[1.22020538,-1.22020538],[1.22173284,-1.22173284],[1.22326998,-1.22326998],[1.22481688,-1.22481688],[1.22637359,-1.22637359],[1.22794016,-1.22794016],[1.22951666,-1.22951666],[1.23110315,-1.23110315],[1.2326997,-1.2326997],[1.23430635,-1.23430635],[1.23592318,-1.23592318],[1.23755024,-1.23755024],[1.2391876,-1.2391876],[1.24083532,-1.24083532],[1.24249346,-1.24249346],[1.24416208,-1.24416208],[1.24584125,-1.24584125],[1.24753104,-1.24753104],[1.2492315,-1.2492315],[1.25094269,-1.25094269],[1.2526647,-1.2526647],[1.25439757,-1.25439757],[1.25614137,-1.25614137],[1.25789617,-1.25789617],[1.25966204,-1.25966204],[1.26143904,-1.26143904],[1.26322724,-1.26322724],[1.2650267,-1.2650267],[1.2668375,-1.2668375],[1.26865969,-1.26865969],[1.27049335,-1.27049335],[1.27233854,-1.27233854],[1.27419534,-1.27419534],[1.27606382,-1.27606382],[1.27794403,-1.27794403],[1.27983606,-1.27983606],[1.28173997,-1.28173997],[1.28365583,-1.28365583],[1.28558372,-1.28558372],[1.2875237,-1.2875237],[1.28947585,-1.28947585],[1.29144023,-1.29144023],[1.29341693,-1.29341693],[1.29540601,-1.29540601],[1.29740755,-1.29740755],[1.29942162,-1.29942162],[1.3014483,-1.3014483],[1.30348765,-1.30348765],[1.30553976,-1.30553976],[1.3076047,-1.3076047],[1.30968255,-1.30968255],[1.31177338,-1.31177338],[1.31387726,-1.31387726],[1.31599429,-1.31599429],[1.31812452,-1.31812452],[1.32026805,-1.32026805],[1.32242495,-1.32242495],[1.3245953,-1.3245953],[1.32677918,-1.32677918],[1.32897666,-1.32897666],[1.33118783,-1.33118783],[1.33341278,-1.33341278],[1.33565157,-1.33565157],[1.3379043,-1.3379043],[1.34017104,-1.34017104],[1.34245187,-1.34245187],[1.34474689,-1.34474689],[1.34705618,-1.34705618],[1.34937981,-1.34937981],[1.35171787,-1.35171787],[1.35407045,-1.35407045],[1.35643764,-1.35643764],[1.35881952,-1.35881952],[1.36121617,-1.36121617],[1.36362769,-1.36362769],[1.36605416,-1.36605416],[1.36849566,-1.36849566],[1.3709523,-1.3709523],[1.37342416,-1.37342416],[1.37591132,-1.37591132],[1.37841388,-1.37841388],[1.38093193,-1.38093193],[1.38346556,-1.38346556],[1.38601486,-1.38601486],[1.38857992,-1.38857992],[1.39116084,-1.39116084],[1.39375771,-1.39375771],[1.39637063,-1.39637063],[1.39899968,-1.39899968],[1.40164497,-1.40164497],[1.40430659,-1.40430659],[1.40698463,-1.40698463],[1.4096792,-1.4096792],[1.41239038,-1.41239038],[1.41511828,-1.41511828],[1.417863,-1.417863],[1.42062463,-1.42062463],[1.42340328,-1.42340328],[1.42619904,-1.42619904],[1.42901201,-1.42901201],[1.4318423,-1.4318423],[1.43469,-1.43469],[1.43755522,-1.43755522],[1.44043806,-1.44043806],[1.44333863,-1.44333863],[1.44625702,-1.44625702],[1.44919335,-1.44919335],[1.45214771,-1.45214771],[1.45512022,-1.45512022],[1.45811097,-1.45811097],[1.46112007,-1.46112007],[1.46414764,-1.46414764],[1.46719377,-1.46719377],[1.47025858,-1.47025858],[1.47334217,-1.47334217],[1.47644466,-1.47644466],[1.47956614,-1.47956614],[1.48270674,-1.48270674],[1.48586656,-1.48586656],[1.48904571,-1.48904571],[1.49224431,-1.49224431],[1.49546246,-1.49546246],[1.49870028,-1.49870028],[1.50195788,-1.50195788],[1.50523538,-1.50523538],[1.50853288,-1.50853288],[1.5118505,-1.5118505],[1.51518835,-1.51518835],[1.51854656,-1.51854656],[1.52192523,-1.52192523],[1.52532448,-1.52532448],[1.52874443,-1.52874443],[1.53218519,-1.53218519],[1.53564688,-1.53564688],[1.53912962,-1.53912962],[1.54263352,-1.54263352],[1.5461587,-1.5461587],[1.54970528,-1.54970528],[1.55327338,-1.55327338],[1.55686312,-1.55686312],[1.56047461,-1.56047461],[1.56410797,-1.56410797],[1.56776333,-1.56776333],[1.57144081,-1.57144081],[1.57514051,-1.57514051],[1.57886257,-1.57886257],[1.58260711,-1.58260711],[1.58637423,-1.58637423],[1.59016407,-1.59016407],[1.59397675,-1.59397675],[1.59781238,-1.59781238],[1.60167109,-1.60167109],[1.60555299,-1.60555299],[1.60945821,-1.60945821],[1.61338687,-1.61338687],[1.61733909,-1.61733909],[1.62131498,-1.62131498],[1.62531468,-1.62531468],[1.6293383,-1.6293383],[1.63338596,-1.63338596],[1.63745778,-1.63745778],[1.64155388,-1.64155388],[1.64567438,-1.64567438],[1.6498194,-1.6498194],[1.65398906,-1.65398906],[1.65818348,-1.65818348],[1.66240277,-1.66240277],[1.66664706,-1.66664706],[1.67091647,-1.67091647],[1.6752111,-1.6752111],[1.67953108,-1.67953108],[1.68387652,-1.68387652],[1.68824754,-1.68824754],[1.69264425,-1.69264425],[1.69706678,-1.69706678],[1.70151522,-1.70151522],[1.70598969,-1.70598969],[1.71049032,-1.71049032],[1.71501719,-1.71501719],[1.71957044,-1.71957044],[1.72415016,-1.72415016],[1.72875647,-1.72875647],[1.73338947,-1.73338947],[1.73804927,-1.73804927],[1.74273597,-1.74273597],[1.74744968,-1.74744968],[1.7521905,-1.7521905],[1.75695853,-1.75695853],[1.76175387,-1.76175387],[1.76657661,-1.76657661],[1.77142687,-1.77142687],[1.77630472,-1.77630472],[1.78121027,-1.78121027],[1.78614361,-1.78614361],[1.79110482,-1.79110482],[1.796094,-1.796094],[1.80111123,-1.80111123],[1.80615659,-1.80615659],[1.81123017,-1.81123017],[1.81633205,-1.81633205],[1.82146231,-1.82146231],[1.82662102,-1.82662102],[1.83180825,-1.83180825],[1.83702408,-1.83702408],[1.84226857,-1.84226857],[1.8475418,-1.8475418],[1.85284381,-1.85284381],[1.85817468,-1.85817468],[1.86353447,-1.86353447],[1.86892321,-1.86892321],[1.87434098,-1.87434098]];return a}function Ii(){var a=[[-.78539816,.78539816],[-.78538695,.78539826],[-.78535326,.78539853],[-.78529706,.78539899],[-.78521829,.78539962],[-.78511688,.78540044],[-.7849928,.78540143],[-.78484599,.78540259],[-.78467639,.78540393],[-.78448396,.78540544],[-.78426866,.78540712],[-.78403042,.78540896],[-.78376921,.78541097],[-.78348499,.78541314],[-.7831777,.78541548],[-.7828473,.78541797],[-.78249376,.78542062],[-.78211703,.78542343],[-.78171707,.78542639],[-.78129384,.78542951],[-.7808473,.78543277],[-.78037742,.78543618],[-.77988416,.78543974],[-.77936749,.78544345],[-.77882736,.7854473],[-.77826376,.78545129],[-.77767664,.78545542],[-.77706598,.78545968],[-.77643175,.78546409],[-.77577391,.78546862],[-.77509244,.78547329],[-.77438731,.78547809],[-.77365849,.78548302],[-.77290597,.78548807],[-.77212971,.78549325],[-.7713297,.78549856],[-.77050591,.78550398],[-.76965833,.78550952],[-.76878692,.78551518],[-.76789167,.78552096],[-.76697257,.78552685],[-.7660296,.78553285],[-.76506273,.78553897],[-.76407197,.78554519],[-.76305728,.78555152],[-.76201866,.78555795],[-.7609561,.78556449],[-.75986959,.78557112],[-.75875911,.78557786],[-.75762465,.7855847],[-.75646621,.78559163],[-.75528379,.78559866],[-.75407736,.78560578],[-.75284694,.78561299],[-.75159251,.78562029],[-.75031407,.78562767],[-.74901162,.78563515],[-.74768515,.7856427],[-.74633467,.78565034],[-.74496018,.78565806],[-.74356167,.78566586],[-.74213916,.78567374],[-.74069263,.78568169],[-.73922211,.78568972],[-.73772758,.78569782],[-.73620907,.78570599],[-.73466656,.78571422],[-.73310008,.78572253],[-.73150963,.7857309],[-.72989523,.78573934],[-.72825687,.78574784],[-.72659458,.7857564],[-.72490836,.78576502],[-.72319823,.7857737],[-.72146421,.78578243],[-.7197063,.78579122],[-.71792453,.78580006],[-.71611891,.78580896],[-.71428945,.7858179],[-.71243619,.7858269],[-.71055914,.78583594],[-.70865831,.78584503],[-.70673373,.78585416],[-.70478543,.78586334],[-.70281342,.78587256],[-.70081774,.78588181],[-.6987984,.78589111],[-.69675543,.78590045],[-.69468886,.78590982],[-.69259871,.78591922],[-.69048502,.78592866],[-.68834782,.78593813],[-.68618713,.78594764],[-.68400298,.78595717],[-.68179542,.78596673],[-.67956446,.78597632],[-.67731016,.78598593],[-.67503253,.78599557],[-.67273162,.78600523],[-.67040746,.78601492],[-.6680601,.78602462],[-.66568956,.78603435],[-.66329589,.78604409],[-.66087913,.78605386],[-.65843932,.78606364],[-.6559765,.78607343],[-.65349071,.78608324],[-.650982,.78609306],[-.64845041,.7861029],[-.64589599,.78611275],[-.64331878,.7861226],[-.64071883,.78613247],[-.63809619,.78614235],[-.63545091,.78615223],[-.63278303,.78616212],[-.6300926,.78617202],[-.62737969,.78618192],[-.62464433,.78619183],[-.62188658,.78620173],[-.6191065,.78621165],[-.61630414,.78622156],[-.61347955,.78623148],[-.61063279,.78624139],[-.60776392,.78625131],[-.604873,.78626122],[-.60196008,.78627113],[-.59902523,.78628104],[-.5960685,.78629095],[-.59308995,.78630085],[-.59008965,.78631075],[-.58706766,.78632065],[-.58402405,.78633053],[-.58095887,.78634042],[-.57787219,.7863503],[-.57476408,.78636017],[-.5716346,.78637003],[-.56848383,.78637989],[-.56531182,.78638973],[-.56211866,.78639957],[-.5589044,.78640941],[-.55566912,.78641923],[-.55241289,.78642904],[-.54913579,.78643885],[-.54583788,.78644864],[-.54251924,.78645843],[-.53917994,.7864682],[-.53582007,.78647796],[-.53243968,.78648772],[-.52903887,.78649746],[-.52561771,.78650719],[-.52217627,.78651692],[-.51871465,.78652663],[-.5152329,.78653633],[-.51173113,.78654602],[-.5082094,.7865557],[-.5046678,.78656537],[-.50110641,.78657503],[-.49752532,.78658467],[-.4939246,.78659431],[-.49030435,.78660394],[-.48666466,.78661356],[-.48300559,.78662317],[-.47932726,.78663277],[-.47562973,.78664236],[-.4719131,.78665195],[-.46817746,.78666152],[-.4644229,.78667109],[-.46064951,.78668065],[-.45685738,.7866902],[-.4530466,.78669975],[-.44921726,.78670929],[-.44536946,.78671882],[-.4415033,.78672835],[-.43761886,.78673788],[-.43371624,.7867474],[-.42979554,.78675692],[-.42585685,.78676643],[-.42190028,.78677595],[-.41792591,.78678546],[-.41393386,.78679498],[-.40992421,.78680449],[-.40589706,.786814],[-.40185252,.78682352],[-.3977907,.78683304],[-.39371168,.78684257],[-.38961557,.7868521],[-.38550248,.78686163],[-.3813725,.78687117],[-.37722575,.78688072],[-.37306233,.78689028],[-.36888233,.78689985],[-.36468588,.78690943],[-.36047307,.78691902],[-.35624401,.78692863],[-.35199881,.78693825],[-.34773758,.78694788],[-.34346042,.78695754],[-.33916745,.78696721],[-.33485877,.7869769],[-.3305345,.78698661],[-.32619474,.78699634],[-.32183961,.7870061],[-.31746922,.78701588],[-.31308367,.78702569],[-.30868309,.78703553],[-.30426759,.78704539],[-.29983728,.78705529],[-.29539227,.78706522],[-.29093268,.78707518],[-.28645863,.78708518],[-.28197023,.78709522],[-.27746759,.7871053],[-.27295083,.78711541],[-.26842008,.78712557],[-.26387544,.78713578],[-.25931703,.78714603],[-.25474498,.78715633],[-.2501594,.78716667],[-.24556041,.78717707],[-.24094813,.78718752],[-.23632268,.78719803],[-.23168417,.7872086],[-.22703274,.78721922],[-.2223685,.78722991],[-.21769157,.78724066],[-.21300207,.78725147],[-.20830013,.78726236],[-.20358586,.78727331],[-.19885939,.78728433],[-.19412085,.78729543],[-.18937035,.7873066],[-.18460802,.78731785],[-.17983398,.78732918],[-.17504836,.7873406],[-.17025128,.7873521],[-.16544286,.78736369],[-.16062323,.78737536],[-.15579251,.78738713],[-.15095084,.78739899],[-.14609832,.78741095],[-.1412351,.78742301],[-.13636129,.78743517],[-.13147702,.78744744],[-.12658242,.78745981],[-.12167762,.78747229],[-.11676273,.78748488],[-.11183788,.78749759],[-.10690321,.78751041],[-.10195884,.78752335],[-.09700489,.78753642],[-.0920415,.7875496],[-.08706879,.78756292],[-.08208688,.78757637],[-.0770959,.78758994],[-.07209599,.78760366],[-.06708726,.78761751],[-.06206985,.7876315],[-.05704389,.78764564],[-.05200949,.78765992],[-.04696679,.78767436],[-.04191591,.78768894],[-.03685699,.78770368],[-.03179015,.78771858],[-.02671551,.78773363],[-.02163321,.78774886],[-.01654337,.78776424],[-.01144611,.7877798],[-.00634158,.78779553],[-.00122988,.78781144],[.00388885,.78782752],[.00901448,.78784379],[.01414688,.78786023],[.01928594,.78787687],[.02443152,.7878937],[.0295835,.78791072],[.03474176,.78792794],[.03990615,.78794535],[.04507657,.78796297],[.05025289,.7879808],[.05543497,.78799883],[.06062269,.78801708],[.06581594,.78803554],[.07101458,.78805422],[.07621849,.78807312],[.08142754,.78809225],[.08664162,.78811161],[.09186059,.78813119],[.09708434,.78815101],[.10231274,.78817107],[.10754567,.78819137],[.112783,.78821191],[.11802462,.7882327],[.1232704,.78825374],[.12852022,.78827503],[.13377395,.78829658],[.13903149,.7883184],[.1442927,.78834047],[.14955747,.78836281],[.15482568,.78838542],[.1600972,.78840831],[.16537192,.78843147],[.17064973,.78845491],[.17593049,.78847863],[.1812141,.78850264],[.18650044,.78852695],[.19178939,.78855154],[.19708083,.78857643],[.20237465,.78860162],[.20767074,.78862711],[.21296897,.78865291],[.21826923,.78867902],[.22357142,.78870544],[.22887541,.78873218],[.23418109,.78875924],[.23948835,.78878662],[.24479709,.78881433],[.25010718,.78884237],[.25541851,.78887074],[.26073098,.78889945],[.26604448,.78892849],[.2713589,.78895788],[.27667413,.78898762],[.28199005,.7890177],[.28730657,.78904814],[.29262358,.78907894],[.29794097,.78911009],[.30325863,.78914161],[.30857647,.78917349],[.31389437,.78920574],[.31921223,.78923836],[.32452995,.78927136],[.32984743,.78930474],[.33516457,.7893385],[.34048126,.78937265],[.3457974,.78940719],[.35111289,.78944212],[.35642765,.78947744],[.36174155,.78951316],[.36705452,.78954929],[.37236645,.78958581],[.37767724,.78962275],[.38298681,.7896601],[.38829505,.78969786],[.39360186,.78973604],[.39890717,.78977465],[.40421087,.78981367],[.40951288,.78985313],[.41481309,.78989301],[.42011142,.78993333],[.42540779,.78997408],[.43070209,.79001527],[.43599425,.79005691],[.44128418,.79009899],[.44657178,.79014152],[.45185697,.7901845],[.45713967,.79022794],[.4624198,.79027184],[.46769726,.7903162],[.47297197,.79036102],[.47824386,.7904063],[.48351284,.79045206],[.48877883,.79049829],[.49404175,.790545],[.49930152,.79059219],[.50455806,.79063985],[.5098113,.79068801],[.51506115,.79073665],[.52030755,.79078578],[.52555041,.7908354],[.53078966,.79088552],[.53602523,.79093614],[.54125704,.79098726],[.54648502,.79103888],[.5517091,.79109102],[.55692922,.79114366],[.56214529,.79119681],[.56735725,.79125048],[.57256504,.79130467],[.57776857,.79135938],[.5829678,.79141462],[.58816265,.79147038],[.59335305,.79152667],[.59853894,.79158349],[.60372026,.79164084],[.60889695,.79169873],[.61406894,.79175716],[.61923617,.79181614],[.62439858,.79187565],[.62955611,.79193572],[.6347087,.79199633],[.6398563,.7920575],[.64499884,.79211922],[.65013627,.79218149],[.65526854,.79224433],[.66039558,.79230773],[.66551734,.79237169],[.67063378,.79243622],[.67574483,.79250131],[.68085044,.79256698],[.68595057,.79263322],[.69104516,.79270004],[.69613417,.79276743],[.70121753,.79283541],[.70629521,.79290397],[.71136716,.79297311],[.71643333,.79304283],[.72149367,.79311315],[.72654814,.79318406],[.73159669,.79325556],[.73663929,.79332766],[.74167588,.79340035],[.74670642,.79347364],[.75173087,.79354754],[.75674919,.79362204],[.76176135,.79369714],[.76676729,.79377285],[.77176698,.79384917],[.77676039,.7939261],[.78174747,.79400365],[.78672818,.7940818],[.7917025,.79416058],[.79667038,.79423998],[.8016318,.79431999],[.8065867,.79440063],[.81153508,.79448189],[.81647687,.79456378],[.82141207,.7946463],[.82634063,.79472944],[.83126252,.79481322],[.83617772,.79489763],[.84108619,.79498268],[.84598791,.79506836],[.85088284,.79515467],[.85577095,.79524163],[.86065223,.79532923],[.86552664,.79541747],[.87039415,.79550636],[.87525475,.79559589],[.8801084,.79568607],[.88495509,.79577689],[.88979478,.79586837],[.89462746,.7959605],[.8994531,.79605328],[.90427168,.79614671],[.90908317,.7962408],[.91388757,.79633555],[.91868484,.79643095],[.92347497,.79652702],[.92825793,.79662374],[.93303371,.79672113],[.9378023,.79681918],[.94256366,.7969179],[.94731779,.79701728],[.95206467,.79711733],[.95680427,.79721805],[.9615366,.79731943],[.96626162,.79742149],[.97097933,.79752421],[.97568971,.79762762],[.98039275,.79773169],[.98508843,.79783644],[.98977674,.79794186],[.99445767,.79804796],[.9991312,.79815474],[1.00379733,.7982622],[1.00845604,.79837034],[1.01310732,.79847915],[1.01775116,.79858865],[1.02238756,.79869883],[1.02701649,.7988097],[1.03163796,.79892124],[1.03625195,.79903348],[1.04085846,.7991464],[1.04545748,.79926],[1.05004899,.79937429],[1.054633,.79948927],[1.05920949,.79960494],[1.06377846,.7997213],[1.06833991,.79983835],[1.07289382,.79995609],[1.07744019,.80007452],[1.08197902,.80019364],[1.0865103,.80031345],[1.09103402,.80043396],[1.09555019,.80055516],[1.1000588,.80067706],[1.10455984,.80079965],[1.10905332,.80092294],[1.11353922,.80104692],[1.11801755,.8011716],[1.1224883,.80129697],[1.12695148,.80142305],[1.13140707,.80154982],[1.13585509,.80167728],[1.14029551,.80180545],[1.14472836,.80193432],[1.14915362,.80206388],[1.15357129,.80219415],[1.15798138,.80232512],[1.16238388,.80245678],[1.1667788,.80258915],[1.17116612,.80272222],[1.17554587,.80285598],[1.17991803,.80299045],[1.1842826,.80312563],[1.18863959,.8032615],[1.19298901,.80339807],[1.19733084,.80353535],[1.20166509,.80367333],[1.20599177,.80381201],[1.21031087,.8039514],[1.2146224,.80409149],[1.21892636,.80423228],[1.22322275,.80437377],[1.22751158,.80451597],[1.23179285,.80465887],[1.23606655,.80480247],[1.2403327,.80494678],[1.2445913,.80509179],[1.24884235,.8052375],[1.25308586,.80538391],[1.25732182,.80553103],[1.26155024,.80567885],[1.26577112,.80582738],[1.26998448,.80597661],[1.27419031,.80612654],[1.27838861,.80627717],[1.2825794,.8064285],[1.28676267,.80658054],[1.29093842,.80673328],[1.29510668,.80688672],[1.29926743,.80704086],[1.30342068,.80719571],[1.30756644,.80735125],[1.31170471,.8075075],[1.31583549,.80766445],[1.3199588,.80782209],[1.32407463,.80798044],[1.32818299,.80813949],[1.33228388,.80829924],[1.33637731,.80845969],[1.34046329,.80862083],[1.34454182,.80878268],[1.34861289,.80894522],[1.35267653,.80910846],[1.35673273,.8092724],[1.36078149,.80943704],[1.36482283,.80960237],[1.36885675,.8097684],[1.37288324,.80993512],[1.37690232,.81010254],[1.380914,.81027066],[1.38491826,.81043947],[1.38891513,.81060897],[1.3929046,.81077917],[1.39688669,.81095006],[1.40086138,.81112164],[1.40482869,.81129392],[1.40878863,.81146688],[1.41274119,.81164054],[1.41668638,.81181489],[1.4206242,.81198992],[1.42455467,.81216565],[1.42847778,.81234206],[1.43239353,.81251917],[1.43630194,.81269695],[1.44020299,.81287543],[1.44409671,.81305459],[1.44798309,.81323444],[1.45186214,.81341497],[1.45573385,.81359618],[1.45959823,.81377808],[1.46345529,.81396066],[1.46730503,.81414392],[1.47114745,.81432786],[1.47498256,.81451248],[1.47881035,.81469778],[1.48263083,.81488376],[1.486444,.81507042],[1.49024987,.81525775],[1.49404843,.81544576],[1.49783969,.81563445],[1.50162366,.81582381],[1.50540032,.81601384],[1.5091697,.81620455],[1.51293177,.81639593],[1.51668656,.81658798],[1.52043405,.8167807],[1.52417425,.81697409],[1.52790717,.81716815],[1.53163279,.81736287],[1.53535113,.81755826],[1.53906218,.81775432],[1.54276595,.81795104],[1.54646243,.81814843],[1.55015162,.81834647],[1.55383353,.81854518],[1.55750815,.81874455],[1.56117548,.81894458],[1.56483552,.81914527],[1.56848828,.81934662],[1.57213374,.81954862],[1.57577191,.81975128],[1.57940279,.8199546],[1.58302638,.82015856],[1.58664267,.82036318],[1.59025166,.82056846],[1.59385336,.82077438],[1.59744775,.82098095],[1.60103483,.82118817],[1.60461461,.82139604],[1.60818708,.82160455],[1.61175223,.82181371],[1.61531007,.82202351],[1.61886058,.82223395],[1.62240377,.82244504],[1.62593963,.82265676],[1.62946816,.82286913],[1.63298935,.82308213],[1.6365032,.82329577],[1.6400097,.82351004],[1.64350885,.82372495],[1.64700065,.8239405],[1.65048508,.82415667],[1.65396214,.82437347],[1.65743183,.82459091],[1.66089413,.82480897],[1.66434905,.82502766],[1.66779658,.82524698],[1.6712367,.82546692],[1.67466942,.82568748],[1.67809472,.82590867],[1.6815126,.82613047],[1.68492305,.8263529],[1.68832606,.82657594],[1.69172162,.8267996],[1.69510972,.82702388],[1.69849037,.82724877],[1.70186354,.82747427],[1.70522922,.82770038],[1.70858742,.8279271],[1.71193811,.82815444],[1.71528129,.82838238],[1.71861694,.82861092],[1.72194507,.82884007],[1.72526565,.82906983],[1.72857868,.82930018],[1.73188414,.82953114],[1.73518202,.82976269],[1.73847232,.82999484],[1.74175501,.83022759],[1.74503009,.83046093],[1.74829755,.83069487],[1.75155737,.8309294],[1.75480953,.83116452],[1.75805403,.83140022],[1.76129085,.83163652],[1.76451998,.8318734],[1.76774141,.83211087],[1.77095511,.83234891],[1.77416108,.83258755],[1.7773593,.83282676],[1.78054975,.83306655],[1.78373243,.83330691],[1.78690731,.83354785],[1.79007437,.83378937],[1.79323361,.83403146],[1.79638501,.83427412],[1.79952854,.83451735],[1.8026642,.83476114],[1.80579196,.83500551],[1.80891181,.83525044],[1.81202373,.83549593],[1.81512771,.83574198],[1.81822371,.83598859],[1.82131174,.83623577],[1.82439175,.8364835],[1.82746375,.83673178],[1.83052771,.83698062],[1.8335836,.83723001],[1.83663142,.83747995],[1.83967113,.83773044],[1.84270273,.83798148],[1.84572618,.83823307],[1.84874147,.83848519],[1.85174858,.83873787],[1.85474748,.83899108],[1.85773816,.83924483],[1.86072059,.83949912],[1.86369475,.83975394],[1.86666061,.8400093],[1.86961816,.8402652],[1.87256738,.84052162],[1.87550823,.84077857],[1.8784407,.84103605],[1.88136476,.84129406],[1.88428039,.84155259],[1.88718756,.84181164],[1.89008625,.84207122],[1.89297643,.84233131],[1.89585809,.84259193],[1.89873119,.84285305],[1.90159571,.8431147],[1.90445162,.84337685],[1.9072989,.84363952],[1.91013752,.84390269],[1.91296746,.84416638],[1.91578868,.84443056],[1.91860117,.84469526],[1.92140489,.84496045],[1.92419981,.84522615],[1.92698591,.84549234],[1.92976317,.84575903],[1.93253154,.84602622],[1.93529101,.8462939],[1.93804155,.84656207],[1.94078312,.84683073],[1.9435157,.84709988],[1.94623926,.84736952],[1.94895376,.84763964],[1.95165919,.84791024],[1.9543555,.84818133],[1.95704266,.8484529],[1.95972066,.84872494],[1.96238945,.84899746],[1.965049,.84927045],[1.96769929,.84954392],[1.97034028,.84981785],[1.97297194,.85009226],[1.97559423,.85036713],[1.97820714,.85064247],[1.98081061,.85091827],[1.98340463,.85119453],[1.98598915,.85147125],[1.98856414,.85174843],[1.99112958,.85202607],[1.99368542,.85230416],[1.99623164,.8525827],[1.99876819,.8528617],[2.00129505,.85314114],[2.00381217,.85342103],[2.00631953,.85370136],[2.00881709,.85398214],[2.01130482,.85426336],[2.01378267,.85454502],[2.01625062,.85482712],[2.01870862,.85510966],[2.02115665,.85539263],[2.02359466,.85567603],[2.02602262,.85595986],[2.02844049,.85624412],[2.03084823,.85652881],[2.03324581,.85681392],[2.03563319,.85709946],[2.03801033,.85738542],[2.0403772,.85767179],[2.04273375,.85795859],[2.04507996,.8582458],[2.04741577,.85853343],[2.04974115,.85882146],[2.05205606,.85910991],[2.05436047,.85939877],[2.05665433,.85968803],[2.05893761,.8599777],[2.06121026,.86026777],[2.06347225,.86055824],[2.06572353,.86084911],[2.06796407,.86114038],[2.07019382,.86143204],[2.07241274,.8617241],[2.0746208,.86201655],[2.07681796,.86230939],[2.07900416,.86260262],[2.08117937,.86289623],[2.08334356,.86319023],[2.08549667,.86348461],[2.08763866,.86377937],[2.0897695,.86407451],[2.09188915,.86437003],[2.09399755,.86466592],[2.09609466,.86496219],[2.09818046,.86525882],[2.10025488,.86555583],[2.10231789,.8658532],[2.10436945,.86615094],[2.1064095,.86644904],[2.10843802,.86674751],[2.11045495,.86704633],[2.11246026,.86734552],[2.11445389,.86764506],[2.1164358,.86794495],[2.11840596,.8682452],[2.12036431,.86854579],[2.12231081,.86884674],[2.12424541,.86914803],[2.12616808,.86944967],[2.12807876,.86975165],[2.12997741,.87005397],[2.13186399,.87035664],[2.13373845,.87065964],[2.13560075,.87096297],[2.13745083,.87126664],[2.13928866,.87157064],[2.14111419,.87187497],[2.14292737,.87217963],[2.14472816,.87248462],[2.1465165,.87278993],[2.14829236,.87309557],[2.15005569,.87340152],[2.15180644,.8737078],[2.15354456,.87401439],[2.15527001,.87432129],[2.15698274,.87462851],[2.15868271,.87493604],[2.16036986,.87524389],[2.16204415,.87555203],[2.16370553,.87586049],[2.16535396,.87616925],[2.16698938,.87647831],[2.16861176,.87678767],[2.17022103,.87709733],[2.17181716,.87740729],[2.1734001,.87771754],[2.17496979,.87802809],[2.1765262,.87833892],[2.17806927,.87865005],[2.17959895,.87896146],[2.1811152,.87927316],[2.18261796,.87958514],[2.1841072,.87989741],[2.18558286,.88020995],[2.18704489,.88052277],[2.18849324,.88083587],[2.18992787,.88114925],[2.19134872,.88146289],[2.19275575,.88177681],[2.19414891,.882091],[2.19552815,.88240545],[2.19689342,.88272017],[2.19824468,.88303515],[2.19958186,.88335039],[2.20090493,.8836659],[2.20221384,.88398166],[2.20350853,.88429768],[2.20478895,.88461395],[2.20605507,.88493048],[2.20730682,.88524725],[2.20854416,.88556428],[2.20976704,.88588155],[2.2109754,.88619907],[2.21216921,.88651683],[2.21334841,.88683483],[2.21451295,.88715307],[2.21566279,.88747156],[2.21679786,.88779027],[2.21791813,.88810922],[2.21902354,.88842841],[2.22011405,.88874782],[2.2211896,.88906746],[2.22225015,.88938733],[2.22329564,.88970743],[2.22432603,.89002775],[2.22534126,.89034829],[2.22634129,.89066905],[2.22732607,.89099003],[2.22829555,.89131123],[2.22924968,.89163264],[2.2301884,.89195426],[2.23111168,.89227609],[2.23201946,.89259813],[2.23291169,.89292038],[2.23378832,.89324284],[2.2346493,.8935655],[2.23549459,.89388836],[2.23632413,.89421142],[2.23713788,.89453468],[2.23793578,.89485814],[2.23871779,.89518179],[2.23948386,.89550563],[2.24023393,.89582967],[2.24096797,.89615389],[2.24168592,.8964783],[2.24238773,.8968029],[2.24307336,.89712768],[2.24374275,.89745265],[2.24439586,.89777779],[2.24503263,.89810312],[2.24565303,.89842862],[2.246257,.89875429],[2.24684449,.89908014],[2.24741546,.89940616],[2.24796985,.89973235],[2.24850763,.90005871],[2.24902873,.90038524],[2.24953312,.90071192],[2.25002075,.90103878],[2.25049156,.90136579],[2.25094552,.90169296],[2.25138257,.90202029],[2.25180266,.90234778],[2.25220576,.90267541],[2.25259181,.90300321],[2.25296076,.90333115],[2.25331257,.90365924],[2.2536472,.90398747],[2.25396459,.90431585],[2.25426471,.90464438],[2.25454749,.90497305],[2.25481291,.90530185],[2.2550609,.9056308],[2.25529144,.90595988],[2.25550446,.90628909],[2.25569993,.90661844],[2.2558778,.90694791],[2.25603803,.90727752],[2.25618057,.90760725],[2.25630537,.90793711],[2.2564124,.9082671],[2.25650161,.9085972],[2.25657294,.90892743],[2.25662637,.90925777],[2.25666185,.90958823],[2.25667932,.90991881],[2.25667876,.9102495],[2.25666012,.9105803],[2.25662334,.91091121],[2.2565684,.91124222],[2.25649525,.91157335],[2.25640385,.91190457],[2.25629415,.9122359],[2.25616611,.91256733],[2.2560197,.91289886],[2.25585487,.91323049],[2.25567157,.91356221],[2.25546978,.91389403],[2.25524945,.91422593],[2.25501053,.91455793],[2.254753,.91489002],[2.2544768,.91522219],[2.25418191,.91555444],[2.25386828,.91588678],[2.25353587,.9162192],[2.25318464,.9165517],[2.25281457,.91688428],[2.2524256,.91721693],[2.2520177,.91754966],[2.25159084,.91788246],[2.25114497,.91821533],[2.25068007,.91854827],[2.25019609,.91888127],[2.249693,.91921434],[2.24917077,.91954747],[2.24862935,.91988066],[2.24806872,.92021392],[2.24748883,.92054723],[2.24688966,.92088059],[2.24627118,.92121401],[2.24563334,.92154749],[2.24497612,.92188101],[2.24429948,.92221458],[2.24360339,.9225482],[2.24288782,.92288186],[2.24215274,.92321557],[2.24139812,.92354931],[2.24062392,.9238831],[2.23983012,.92421693],[2.23901668,.92455079],[2.23818359,.92488468],[2.2373308,.9252186],[2.23645829,.92555256],[2.23556604,.92588655],[2.23465401,.92622056],[2.23372217,.92655459],[2.23277051,.92688865],[2.231799,.92722273],[2.2308076,.92755683],[2.2297963,.92789094],[2.22876507,.92822507],[2.22771389,.92855922],[2.22664273,.92889337],[2.22555157,.92922754],[2.22444038,.92956171],[2.22330915,.92989589],[2.22215785,.93023007],[2.22098647,.93056426],[2.21979498,.93089844],[2.21858336,.93123263],[2.21735159,.93156681],[2.21609966,.93190098],[2.21482754,.93223515],[2.21353523,.93256931],[2.21222269,.93290345],[2.21088992,.93323759],[2.20953689,.9335717],[2.20816361,.9339058],[2.20677004,.93423989],[2.20535617,.93457395],[2.203922,.93490799],[2.20246751,.935242],[2.20099269,.93557599],[2.19949752,.93590995],[2.19798199,.93624388],[2.19644611,.93657777],[2.19488984,.93691163],[2.1933132,.93724546],[2.19171616,.93757924],[2.19009873,.93791299],[2.18846088,.93824669],[2.18680263,.93858035],[2.18512396,.93891396],[2.18342487,.93924753],[2.18170536,.93958104],[2.17996542,.9399145],[2.17820505,.94024791],[2.17642424,.94058126],[2.17462301,.94091455],[2.17280134,.94124779],[2.17095924,.94158096],[2.16909671,.94191406],[2.16721375,.9422471],[2.16531037,.94258007],[2.16338657,.94291297],[2.16144235,.9432458],[2.15947772,.94357855],[2.15749268,.94391123],[2.15548725,.94424383],[2.15346144,.94457634],[2.15141524,.94490878],[2.14934867,.94524113],[2.14726174,.94557339],[2.14515447,.94590557],[2.14302686,.94623765],[2.14087893,.94656964],[2.13871069,.94690154],[2.13652216,.94723333],[2.13431336,.94756503],[2.13208429,.94789663],[2.12983499,.94822813],[2.12756546,.94855951],[2.12527573,.9488908],[2.12296582,.94922197],[2.12063575,.94955303],[2.11828554,.94988397],[2.11591523,.9502148],[2.11352482,.95054552],[2.11111435,.95087611],[2.10868385,.95120658],[2.10623334,.95153693],[2.10376285,.95186714],[2.10127241,.95219724],[2.09876206,.9525272],[2.09623182,.95285702],[2.09368173,.95318672],[2.09111182,.95351627],[2.08852212,.95384569],[2.08591268,.95417496],[2.08328353,.95450409],[2.08063472,.95483308],[2.07796627,.95516192],[2.07527823,.95549061],[2.07257064,.95581915],[2.06984355,.95614753],[2.06709699,.95647576],[2.06433103,.95680382],[2.06154569,.95713173],[2.05874103,.95745948],[2.0559171,.95778706],[2.05307395,.95811447],[2.05021162,.95844172],[2.04733018,.9587688],[2.04442968,.9590957],[2.04151016,.95942242],[2.03857169,.95974897],[2.03561433,.96007534],[2.03263813,.96040153],[2.02964315,.96072753],[2.02662945,.96105335],[2.0235971,.96137898],[2.02054617,.96170442],[2.0174767,.96202967],[2.01438878,.96235472],[2.01128246,.96267958],[2.00815783,.96300424],[2.00501494,.96332869],[2.00185387,.96365295],[1.9986747,.963977],[1.99547749,.96430084],[1.99226232,.96462448],[1.98902927,.9649479],[1.98577842,.96527111],[1.98250985,.96559411],[1.97922364,.96591688],[1.97591986,.96623944],[1.97259861,.96656178],[1.96925998,.96688389],[1.96590403,.96720578],[1.96253087,.96752744],[1.95914059,.96784887],[1.95573327,.96817007],[1.952309,.96849104],[1.94886789,.96881177],[1.94541003,.96913226],[1.9419355,.96945251],[1.93844442,.96977252],[1.93493687,.97009229],[1.93141297,.97041181],[1.92787281,.97073109],[1.9243165,.97105011],[1.92074414,.97136889],[1.91715584,.97168741],[1.9135517,.97200567],[1.90993185,.97232368],[1.90629639,.97264143],[1.90264542,.97295892],[1.89897908,.97327614],[1.89529746,.9735931],[1.8916007,.9739098],[1.88788891,.97422622],[1.8841622,.97454238],[1.88042071,.97485826],[1.87666455,.97517387],[1.87289385,.9754892],[1.86910874,.97580426],[1.86530934,.97611904],[1.86149579,.97643353],[1.85766822,.97674775],[1.85382675,.97706168],[1.84997153,.97737532],[1.84610268,.97768868],[1.84222036,.97800174],[1.83832469,.97831452],[1.83441581,.978627],[1.83049388,.97893919],[1.82655903,.97925109],[1.8226114,.97956268],[1.81865116,.97987398],[1.81467843,.98018497],[1.81069338,.98049567],[1.80669616,.98080606],[1.80268692,.98111614],[1.79866581,.98142592],[1.79463299,.98173539],[1.79058862,.98204456],[1.78653286,.98235341],[1.78246586,.98266195],[1.77838781,.98297017],[1.77429884,.98327808],[1.77019914,.98358568],[1.76608887,.98389295],[1.7619682,.98419991],[1.7578373,.98450655],[1.75369635,.98481287],[1.74954551,.98511886],[1.74538496,.98542454],[1.74121488,.98572988],[1.73703545,.9860349],[1.73284684,.9863396],[1.72864925,.98664397],[1.72444285,.986948],[1.72022782,.98725171],[1.71600436,.98755509],[1.71177266,.98785814],[1.70753289,.98816085],[1.70328525,.98846323],[1.69902994,.98876527],[1.69476715,.98906698],[1.69049708,.98936835],[1.68621991,.98966939],[1.68193585,.98997009],[1.67764511,.99027045],[1.67334788,.99057047],[1.66904436,.99087015],[1.66473476,.99116949],[1.66041929,.99146849],[1.65609814,.99176715],[1.65177155,.99206547],[1.6474397,.99236344],[1.64310282,.99266108],[1.63876111,.99295836],[1.6344148,.99325531],[1.6300641,.99355191],[1.62570922,.99384816],[1.62135039,.99414408],[1.61698782,.99443964],[1.61262175,.99473486],[1.60825238,.99502974],[1.60387994,.99532427],[1.59950467,.99561845],[1.59512679,.99591229],[1.59074652,.99620578],[1.5863641,.99649893],[1.58197975,.99679173],[1.57759372,.99708418],[1.57320623,.99737629],[1.56881751,.99766805],[1.56442781,.99795947],[1.56003737,.99825055],[1.55564641,.99854127],[1.55125519,.99883166],[1.54686394,.9991217],[1.5424729,.99941139],[1.53808232,.99970074],[1.53369244,.99998975],[1.52930351,1.00027842],[1.52491578,1.00056674],[1.52052948,1.00085473],[1.51614488,1.00114237],[1.51176222,1.00142967],[1.50738176,1.00171663],[1.50300374,1.00200326],[1.49862842,1.00228954],[1.49425605,1.00257549],[1.48988689,1.0028611],[1.48552119,1.00314637],[1.48115922,1.00343131],[1.47680122,1.00371592],[1.47244747,1.0040002],[1.46809821,1.00428414],[1.46375372,1.00456775],[1.45941424,1.00485103],[1.45508005,1.00513399],[1.4507514,1.00541661],[1.44642857,1.00569891],[1.44211181,1.00598089],[1.43780139,1.00626254],[1.43349759,1.00654387],[1.42920065,1.00682488],[1.42491086,1.00710557],[1.42062849,1.00738594],[1.41635379,1.007666],[1.41208704,1.00794574],[1.40782851,1.00822516],[1.40357848,1.00850428],[1.39933721,1.00878309],[1.39510497,1.00906158],[1.39088204,1.00933978],[1.3866687,1.00961766],[1.3824652,1.00989525],[1.37827184,1.01017253],[1.37408887,1.01044951],[1.36991659,1.0107262],[1.36575526,1.01100259],[1.36160515,1.01127869],[1.35746655,1.0115545],[1.35333973,1.01183001],[1.34922497,1.01210524],[1.34512254,1.01238019],[1.34103272,1.01265485],[1.33695579,1.01292924],[1.33289202,1.01320334],[1.32884169,1.01347717],[1.32480508,1.01375073],[1.32078247,1.01402401],[1.31677414,1.01429703],[1.31278035,1.01456978],[1.3088014,1.01484226],[1.30483755,1.01511449],[1.30088909,1.01538645],[1.29695629,1.01565816],[1.29303944,1.01592962],[1.2891388,1.01620082],[1.28525465,1.01647178],[1.28138728,1.01674249],[1.27753696,1.01701296],[1.27370397,1.01728319],[1.26988858,1.01755318],[1.26609106,1.01782294],[1.26231171,1.01809246],[1.25855078,1.01836176],[1.25480856,1.01863083],[1.25108531,1.01889968],[1.24738133,1.01916831],[1.24369687,1.01943672],[1.24003221,1.01970492],[1.23638763,1.01997291],[1.2327634,1.02024069],[1.22915979,1.02050827],[1.22557707,1.02077565],[1.22201551,1.02104283],[1.21847538,1.02130981],[1.21495695,1.0215766],[1.2114605,1.02184321],[1.20798628,1.02210963],[1.20453457,1.02237587],[1.20110563,1.02264193],[1.19769973,1.02290781],[1.19431713,1.02317352],[1.1909581,1.02343907],[1.1876229,1.02370445],[1.18431179,1.02396967],[1.18102504,1.02423474],[1.1777629,1.02449964],[1.17452564,1.0247644],[1.1713135,1.02502901],[1.16812676,1.02529348],[1.16496567,1.02555781],[1.16183047,1.025822],[1.15872143,1.02608606],[1.1556388,1.02634999],[1.15258283,1.0266138],[1.14955377,1.02687748],[1.14655187,1.02714105],[1.14357739,1.0274045],[1.14063055,1.02766785],[1.13771162,1.02793108],[1.13482083,1.02819421],[1.13195843,1.02845725],[1.12912466,1.02872019],[1.12631976,1.02898303],[1.12354397,1.02924579],[1.12079753,1.02950847],[1.11808067,1.02977107],[1.11539362,1.03003359],[1.11273662,1.03029604],[1.1101099,1.03055842],[1.1075137,1.03082074],[1.10494823,1.03108299],[1.10241372,1.03134519],[1.0999104,1.03160734],[1.0974385,1.03186944],[1.09499823,1.0321315],[1.09258981,1.03239351],[1.09021346,1.03265549],[1.0878694,1.03291744],[1.08555784,1.03317936],[1.083279,1.03344125],[1.08103308,1.03370313],[1.0788203,1.03396499],[1.07664086,1.03422683],[1.07449496,1.03448867],[1.07238281,1.03475051],[1.07030462,1.03501234],[1.06826057,1.03527418],[1.06625088,1.03553603],[1.06427572,1.03579789],[1.06233531,1.03605976],[1.06042982,1.03632166],[1.05855944,1.03658358],[1.05672437,1.03684553],[1.05492479,1.03710752],[1.05316089,1.03736954],[1.05143283,1.0376316],[1.04974081,1.03789371],[1.048085,1.03815587],[1.04646556,1.03841808],[1.04488269,1.03868035],[1.04333653,1.03894269],[1.04182727,1.03920509],[1.04035506,1.03946756],[1.03892008,1.0397301],[1.03752247,1.03999273],[1.03616241,1.04025543],[1.03484003,1.04051823],[1.03355551,1.04078111],[1.03230899,1.0410441],[1.03110061,1.04130718],[1.02993053,1.04157036],[1.02879889,1.04183366],[1.02770583,1.04209707],[1.02665149,1.04236059],[1.025636,1.04262424],[1.02465951,1.04288801],[1.02372213,1.04315191],[1.02282401,1.04341594],[1.02196526,1.04368011],[1.02114601,1.04394443],[1.02036639,1.04420889],[1.01962651,1.0444735],[1.01892648,1.04473827],[1.01826643,1.04500319],[1.01764646,1.04526828],[1.01706667,1.04553354],[1.01652719,1.04579896],[1.0160281,1.04606457],[1.01556951,1.04633035],[1.01515152,1.04659632],[1.01477421,1.04686248],[1.01443769,1.04712883],[1.01414205,1.04739538],[1.01388736,1.04766213],[1.01367371,1.04792908],[1.01350119,1.04819625],[1.01336987,1.04846363],[1.01327983,1.04873123],[1.01323114,1.04899905],[1.01322387,1.04926709],[1.01325809,1.04953537],[1.01333385,1.04980389],[1.01345123,1.05007264],[1.01361028,1.05034164],[1.01381106,1.05061088],[1.01405361,1.05088038],[1.01433799,1.05115014],[1.01466425,1.05142015],[1.01503243,1.05169043],[1.01544257,1.05196098],[1.0158947,1.05223181],[1.01638887,1.05250291],[1.0169251,1.05277429],[1.01750343,1.05304596],[1.01812388,1.05331793],[1.01878647,1.05359018],[1.01949122,1.05386274],[1.02023815,1.0541356],[1.02102728,1.05440876],[1.02185861,1.05468224],[1.02273216,1.05495604],[1.02364792,1.05523015],[1.02460591,1.05550459],[1.02560611,1.05577936],[1.02664853,1.05605446],[1.02773316,1.0563299],[1.02885998,1.05660568],[1.03002899,1.05688181],[1.03124016,1.05715828],[1.03249349,1.05743512],[1.03378893,1.05771231],[1.03512648,1.05798986],[1.03650609,1.05826778],[1.03792775,1.05854607],[1.0393914,1.05882474],[1.04089702,1.05910379],[1.04244456,1.05938322],[1.04403398,1.05966304],[1.04566523,1.05994325],[1.04733826,1.06022386],[1.04905302,1.06050488],[1.05080944,1.06078629],[1.05260747,1.06106812],[1.05444704,1.06135036],[1.05632809,1.06163302],[1.05825054,1.0619161],[1.06021433,1.06219961],[1.06221938,1.06248355],[1.0642656,1.06276793],[1.06635292,1.06305274],[1.06848125,1.063338],[1.07065049,1.06362371],[1.07286057,1.06390987],[1.07511137,1.06419648],[1.07740281,1.06448356],[1.07973478,1.0647711],[1.08210718,1.06505911],[1.08451989,1.06534759],[1.08697281,1.06563655],[1.08946583,1.065926],[1.09199881,1.06621593],[1.09457165,1.06650635],[1.09718422,1.06679726],[1.09983639,1.06708867],[1.10252802,1.06738059],[1.105259,1.06767301],[1.10802917,1.06796595],[1.1108384,1.06825939],[1.11368655,1.06855336],[1.11657346,1.06884786],[1.119499,1.06914288],[1.122463,1.06943843],[1.12546531,1.06973452],[1.12850576,1.07003115],[1.13158421,1.07032832],[1.13470048,1.07062605],[1.1378544,1.07092432],[1.1410458,1.07122315],[1.14427451,1.07152255],[1.14754035,1.0718225],[1.15084313,1.07212303],[1.15418267,1.07242413],[1.15755879,1.07272581],[1.16097129,1.07302807],[1.16441998,1.07333091],[1.16790466,1.07363435],[1.17142513,1.07393837],[1.17498119,1.074243],[1.17857264,1.07454822],[1.18219925,1.07485405],[1.18586083,1.07516049],[1.18955715,1.07546754],[1.193288,1.07577521],[1.19705315,1.0760835],[1.20085238,1.07639241],[1.20468547,1.07670196],[1.20855218,1.07701213],[1.21245228,1.07732294],[1.21638552,1.07763439],[1.22035169,1.07794649],[1.22435052,1.07825923],[1.22838177,1.07857262],[1.23244521,1.07888667],[1.23654057,1.07920138],[1.24066759,1.07951675],[1.24482604,1.07983278],[1.24901564,1.08014949],[1.25323613,1.08046686],[1.25748724,1.08078492],[1.26176872,1.08110365],[1.26608028,1.08142307],[1.27042165,1.08174317],[1.27479256,1.08206396],[1.27919272,1.08238545],[1.28362186,1.08270764],[1.28807969,1.08303052],[1.29256592,1.08335411],[1.29708027,1.08367841],[1.30162243,1.08400342],[1.30619211,1.08432914],[1.31078902,1.08465558],[1.31541286,1.08498273],[1.32006331,1.08531061],[1.32474008,1.08563922],[1.32944286,1.08596855],[1.33417133,1.08629862],[1.33892519,1.08662942],[1.34370411,1.08696096],[1.34850778,1.08729324],[1.35333587,1.08762627],[1.35818807,1.08796004],[1.36306405,1.08829456],[1.36796348,1.08862983],[1.37288603,1.08896585],[1.37783137,1.08930263],[1.38279916,1.08964017],[1.38778906,1.08997848],[1.39280075,1.09031755],[1.39783387,1.09065738],[1.40288808,1.09099798],[1.40796303,1.09133936],[1.41305839,1.09168151],[1.41817379,1.09202443],[1.42330889,1.09236814],[1.42846333,1.09271262],[1.43363675,1.09305788],[1.43882881,1.09340393],[1.44403913,1.09375077],[1.44926736,1.09409839],[1.45451313,1.0944468],[1.45977608,1.09479601],[1.46505584,1.09514601],[1.47035203,1.0954968],[1.4756643,1.09584839],[1.48099226,1.09620078],[1.48633555,1.09655396],[1.49169378,1.09690795],[1.49706658,1.09726274],[1.50245357,1.09761833],[1.50785436,1.09797473],[1.51326859,1.09833194],[1.51869585,1.09868995],[1.52413577,1.09904877],[1.52958796,1.0994084],[1.53505203,1.09976884],[1.54052759,1.10013008],[1.54601426,1.10049215],[1.55151163,1.10085502],[1.55701931,1.1012187],[1.56253692,1.1015832],[1.56806405,1.10194852],[1.57360031,1.10231465],[1.5791453,1.10268159],[1.58469862,1.10304935],[1.59025987,1.10341792],[1.59582865,1.10378731],[1.60140455,1.10415752],[1.60698717,1.10452854],[1.61257612,1.10490038],[1.61817098,1.10527303],[1.62377134,1.1056465],[1.62937681,1.10602078],[1.63498697,1.10639588],[1.64060142,1.10677179],[1.64621974,1.10714852],[1.65184153,1.10752606],[1.65746638,1.10790442],[1.66309388,1.10828358],[1.66872361,1.10866356],[1.67435517,1.10904435],[1.67998814,1.10942595],[1.6856221,1.10980836],[1.69125666,1.11019158],[1.69689139,1.1105756],[1.70252588,1.11096044],[1.70815971,1.11134607],[1.71379248,1.11173251],[1.71942376,1.11211975],[1.72505315,1.1125078],[1.73068023,1.11289664],[1.73630458,1.11328628],[1.7419258,1.11367671],[1.74754346,1.11406795],[1.75315715,1.11445997],[1.75876646,1.11485279],[1.76437097,1.11524639],[1.76997027,1.11564078],[1.77556395,1.11603596],[1.78115158,1.11643192],[1.78673277,1.11682866],[1.79230708,1.11722618],[1.79787412,1.11762448],[1.80343347,1.11802355],[1.80898472,1.1184234],[1.81452746,1.11882401],[1.82006127,1.11922539],[1.82558574,1.11962754],[1.83110047,1.12003044],[1.83660504,1.12043411],[1.84209906,1.12083853],[1.8475821,1.12124371],[1.85305376,1.12164964],[1.85851364,1.12205631],[1.86396133,1.12246374],[1.86939642,1.1228719],[1.87481852,1.1232808],[1.88022721,1.12369044],[1.8856221,1.12410081],[1.89100279,1.12451191],[1.89636887,1.12492374],[1.90171995,1.12533629],[1.90705563,1.12574956],[1.9123755,1.12616355],[1.91767919,1.12657824],[1.92296628,1.12699365],[1.9282364,1.12740977],[1.93348913,1.12782658],[1.93872411,1.12824409],[1.94394093,1.1286623],[1.94913921,1.1290812],[1.95431855,1.12950079],[1.95947859,1.12992106],[1.96461893,1.13034201],[1.96973918,1.13076363],[1.97483898,1.13118593],[1.97991793,1.13160889],[1.98497567,1.13203252],[1.99001182,1.13245681],[1.99502599,1.13288175],[2.00001782,1.13330734],[2.00498694,1.13373359],[2.00993298,1.13416047],[2.01485557,1.13458799],[2.01975435,1.13501615],[2.02462894,1.13544494],[2.029479,1.13587436],[2.03430415,1.13630439],[2.03910404,1.13673505],[2.04387832,1.13716631],[2.04862662,1.13759819],[2.0533486,1.13803067],[2.05804391,1.13846375],[2.06271219,1.13889742],[2.0673531,1.13933169],[2.0719663,1.13976654],[2.07655144,1.14020197],[2.08110819,1.14063798],[2.0856362,1.14107457],[2.09013514,1.14151172],[2.09460468,1.14194943],[2.09904448,1.14238771],[2.10345422,1.14282654],[2.10783356,1.14326591],[2.11218219,1.14370584],[2.11649978,1.1441463],[2.12078601,1.1445873],[2.12504056,1.14502883],[2.12926313,1.14547089],[2.13345338,1.14591347],[2.13761102,1.14635656],[2.14173574,1.14680017],[2.14582723,1.14724429],[2.14988518,1.14768891],[2.15390931,1.14813402],[2.1578993,1.14857963],[2.16185486,1.14902573],[2.1657757,1.14947232],[2.16966154,1.14991938],[2.17351207,1.15036692],[2.17732702,1.15081492],[2.1811061,1.1512634],[2.18484903,1.15171233],[2.18855554,1.15216172],[2.19222534,1.15261156],[2.19585818,1.15306185],[2.19945377,1.15351257],[2.20301185,1.15396374],[2.20653216,1.15441534],[2.21001444,1.15486736],[2.21345842,1.15531981],[2.21686385,1.15577268],[2.22023048,1.15622596],[2.22355805,1.15667965],[2.22684632,1.15713374],[2.23009505,1.15758824],[2.23330398,1.15804313],[2.23647289,1.15849841],[2.23960154,1.15895407],[2.24268969,1.15941012],[2.24573711,1.15986654],[2.24874357,1.16032334],[2.25170885,1.1607805],[2.25463272,1.16123803],[2.25751498,1.16169592]];return a}function Ui(){var a=[[-.78539816,.78539816],[-.78539826,.78538695],[-.78539853,.78535326],[-.78539899,.78529706],[-.78539962,.78521829],[-.78540044,.78511688],[-.78540143,.7849928],[-.78540259,.78484599],[-.78540393,.78467639],[-.78540544,.78448396],[-.78540712,.78426866],[-.78540896,.78403042],[-.78541097,.78376921],[-.78541314,.78348499],[-.78541548,.7831777],[-.78541797,.7828473],[-.78542062,.78249376],[-.78542343,.78211703],[-.78542639,.78171707],[-.78542951,.78129384],[-.78543277,.7808473],[-.78543618,.78037742],[-.78543974,.77988416],[-.78544345,.77936749],[-.7854473,.77882736],[-.78545129,.77826376],[-.78545542,.77767664],[-.78545968,.77706598],[-.78546409,.77643175],[-.78546862,.77577391],[-.78547329,.77509244],[-.78547809,.77438731],[-.78548302,.77365849],[-.78548807,.77290597],[-.78549325,.77212971],[-.78549856,.7713297],[-.78550398,.77050591],[-.78550952,.76965833],[-.78551518,.76878692],[-.78552096,.76789167],[-.78552685,.76697257],[-.78553285,.7660296],[-.78553897,.76506273],[-.78554519,.76407197],[-.78555152,.76305728],[-.78555795,.76201866],[-.78556449,.7609561],[-.78557112,.75986959],[-.78557786,.75875911],[-.7855847,.75762465],[-.78559163,.75646621],[-.78559866,.75528379],[-.78560578,.75407736],[-.78561299,.75284694],[-.78562029,.75159251],[-.78562767,.75031407],[-.78563515,.74901162],[-.7856427,.74768515],[-.78565034,.74633467],[-.78565806,.74496018],[-.78566586,.74356167],[-.78567374,.74213916],[-.78568169,.74069263],[-.78568972,.73922211],[-.78569782,.73772758],[-.78570599,.73620907],[-.78571422,.73466656],[-.78572253,.73310008],[-.7857309,.73150963],[-.78573934,.72989523],[-.78574784,.72825687],[-.7857564,.72659458],[-.78576502,.72490836],[-.7857737,.72319823],[-.78578243,.72146421],[-.78579122,.7197063],[-.78580006,.71792453],[-.78580896,.71611891],[-.7858179,.71428945],[-.7858269,.71243619],[-.78583594,.71055914],[-.78584503,.70865831],[-.78585416,.70673373],[-.78586334,.70478543],[-.78587256,.70281342],[-.78588181,.70081774],[-.78589111,.6987984],[-.78590045,.69675543],[-.78590982,.69468886],[-.78591922,.69259871],[-.78592866,.69048502],[-.78593813,.68834782],[-.78594764,.68618713],[-.78595717,.68400298],[-.78596673,.68179542],[-.78597632,.67956446],[-.78598593,.67731016],[-.78599557,.67503253],[-.78600523,.67273162],[-.78601492,.67040746],[-.78602462,.6680601],[-.78603435,.66568956],[-.78604409,.66329589],[-.78605386,.66087913],[-.78606364,.65843932],[-.78607343,.6559765],[-.78608324,.65349071],[-.78609306,.650982],[-.7861029,.64845041],[-.78611275,.64589599],[-.7861226,.64331878],[-.78613247,.64071883],[-.78614235,.63809619],[-.78615223,.63545091],[-.78616212,.63278303],[-.78617202,.6300926],[-.78618192,.62737969],[-.78619183,.62464433],[-.78620173,.62188658],[-.78621165,.6191065],[-.78622156,.61630414],[-.78623148,.61347955],[-.78624139,.61063279],[-.78625131,.60776392],[-.78626122,.604873],[-.78627113,.60196008],[-.78628104,.59902523],[-.78629095,.5960685],[-.78630085,.59308995],[-.78631075,.59008965],[-.78632065,.58706766],[-.78633053,.58402405],[-.78634042,.58095887],[-.7863503,.57787219],[-.78636017,.57476408],[-.78637003,.5716346],[-.78637989,.56848383],[-.78638973,.56531182],[-.78639957,.56211866],[-.78640941,.5589044],[-.78641923,.55566912],[-.78642904,.55241289],[-.78643885,.54913579],[-.78644864,.54583788],[-.78645843,.54251924],[-.7864682,.53917994],[-.78647796,.53582007],[-.78648772,.53243968],[-.78649746,.52903887],[-.78650719,.52561771],[-.78651692,.52217627],[-.78652663,.51871465],[-.78653633,.5152329],[-.78654602,.51173113],[-.7865557,.5082094],[-.78656537,.5046678],[-.78657503,.50110641],[-.78658467,.49752532],[-.78659431,.4939246],[-.78660394,.49030435],[-.78661356,.48666466],[-.78662317,.48300559],[-.78663277,.47932726],[-.78664236,.47562973],[-.78665195,.4719131],[-.78666152,.46817746],[-.78667109,.4644229],[-.78668065,.46064951],[-.7866902,.45685738],[-.78669975,.4530466],[-.78670929,.44921726],[-.78671882,.44536946],[-.78672835,.4415033],[-.78673788,.43761886],[-.7867474,.43371624],[-.78675692,.42979554],[-.78676643,.42585685],[-.78677595,.42190028],[-.78678546,.41792591],[-.78679498,.41393386],[-.78680449,.40992421],[-.786814,.40589706],[-.78682352,.40185252],[-.78683304,.3977907],[-.78684257,.39371168],[-.7868521,.38961557],[-.78686163,.38550248],[-.78687117,.3813725],[-.78688072,.37722575],[-.78689028,.37306233],[-.78689985,.36888233],[-.78690943,.36468588],[-.78691902,.36047307],[-.78692863,.35624401],[-.78693825,.35199881],[-.78694788,.34773758],[-.78695754,.34346042],[-.78696721,.33916745],[-.7869769,.33485877],[-.78698661,.3305345],[-.78699634,.32619474],[-.7870061,.32183961],[-.78701588,.31746922],[-.78702569,.31308367],[-.78703553,.30868309],[-.78704539,.30426759],[-.78705529,.29983728],[-.78706522,.29539227],[-.78707518,.29093268],[-.78708518,.28645863],[-.78709522,.28197023],[-.7871053,.27746759],[-.78711541,.27295083],[-.78712557,.26842008],[-.78713578,.26387544],[-.78714603,.25931703],[-.78715633,.25474498],[-.78716667,.2501594],[-.78717707,.24556041],[-.78718752,.24094813],[-.78719803,.23632268],[-.7872086,.23168417],[-.78721922,.22703274],[-.78722991,.2223685],[-.78724066,.21769157],[-.78725147,.21300207],[-.78726236,.20830013],[-.78727331,.20358586],[-.78728433,.19885939],[-.78729543,.19412085],[-.7873066,.18937035],[-.78731785,.18460802],[-.78732918,.17983398],[-.7873406,.17504836],[-.7873521,.17025128],[-.78736369,.16544286],[-.78737536,.16062323],[-.78738713,.15579251],[-.78739899,.15095084],[-.78741095,.14609832],[-.78742301,.1412351],[-.78743517,.13636129],[-.78744744,.13147702],[-.78745981,.12658242],[-.78747229,.12167762],[-.78748488,.11676273],[-.78749759,.11183788],[-.78751041,.10690321],[-.78752335,.10195884],[-.78753642,.09700489],[-.7875496,.0920415],[-.78756292,.08706879],[-.78757637,.08208688],[-.78758994,.0770959],[-.78760366,.07209599],[-.78761751,.06708726],[-.7876315,.06206985],[-.78764564,.05704389],[-.78765992,.05200949],[-.78767436,.04696679],[-.78768894,.04191591],[-.78770368,.03685699],[-.78771858,.03179015],[-.78773363,.02671551],[-.78774886,.02163321],[-.78776424,.01654337],[-.7877798,.01144611],[-.78779553,.00634158],[-.78781144,.00122988],[-.78782752,-.00388885],[-.78784379,-.00901448],[-.78786023,-.01414688],[-.78787687,-.01928594],[-.7878937,-.02443152],[-.78791072,-.0295835],[-.78792794,-.03474176],[-.78794535,-.03990615],[-.78796297,-.04507657],[-.7879808,-.05025289],[-.78799883,-.05543497],[-.78801708,-.06062269],[-.78803554,-.06581594],[-.78805422,-.07101458],[-.78807312,-.07621849],[-.78809225,-.08142754],[-.78811161,-.08664162],[-.78813119,-.09186059],[-.78815101,-.09708434],[-.78817107,-.10231274],[-.78819137,-.10754567],[-.78821191,-.112783],[-.7882327,-.11802462],[-.78825374,-.1232704],[-.78827503,-.12852022],[-.78829658,-.13377395],[-.7883184,-.13903149],[-.78834047,-.1442927],[-.78836281,-.14955747],[-.78838542,-.15482568],[-.78840831,-.1600972],[-.78843147,-.16537192],[-.78845491,-.17064973],[-.78847863,-.17593049],[-.78850264,-.1812141],[-.78852695,-.18650044],[-.78855154,-.19178939],[-.78857643,-.19708083],[-.78860162,-.20237465],[-.78862711,-.20767074],[-.78865291,-.21296897],[-.78867902,-.21826923],[-.78870544,-.22357142],[-.78873218,-.22887541],[-.78875924,-.23418109],[-.78878662,-.23948835],[-.78881433,-.24479709],[-.78884237,-.25010718],[-.78887074,-.25541851],[-.78889945,-.26073098],[-.78892849,-.26604448],[-.78895788,-.2713589],[-.78898762,-.27667413],[-.7890177,-.28199005],[-.78904814,-.28730657],[-.78907894,-.29262358],[-.78911009,-.29794097],[-.78914161,-.30325863],[-.78917349,-.30857647],[-.78920574,-.31389437],[-.78923836,-.31921223],[-.78927136,-.32452995],[-.78930474,-.32984743],[-.7893385,-.33516457],[-.78937265,-.34048126],[-.78940719,-.3457974],[-.78944212,-.35111289],[-.78947744,-.35642765],[-.78951316,-.36174155],[-.78954929,-.36705452],[-.78958581,-.37236645],[-.78962275,-.37767724],[-.7896601,-.38298681],[-.78969786,-.38829505],[-.78973604,-.39360186],[-.78977465,-.39890717],[-.78981367,-.40421087],[-.78985313,-.40951288],[-.78989301,-.41481309],[-.78993333,-.42011142],[-.78997408,-.42540779],[-.79001527,-.43070209],[-.79005691,-.43599425],[-.79009899,-.44128418],[-.79014152,-.44657178],[-.7901845,-.45185697],[-.79022794,-.45713967],[-.79027184,-.4624198],[-.7903162,-.46769726],[-.79036102,-.47297197],[-.7904063,-.47824386],[-.79045206,-.48351284],[-.79049829,-.48877883],[-.790545,-.49404175],[-.79059219,-.49930152],[-.79063985,-.50455806],[-.79068801,-.5098113],[-.79073665,-.51506115],[-.79078578,-.52030755],[-.7908354,-.52555041],[-.79088552,-.53078966],[-.79093614,-.53602523],[-.79098726,-.54125704],[-.79103888,-.54648502],[-.79109102,-.5517091],[-.79114366,-.55692922],[-.79119681,-.56214529],[-.79125048,-.56735725],[-.79130467,-.57256504],[-.79135938,-.57776857],[-.79141462,-.5829678],[-.79147038,-.58816265],[-.79152667,-.59335305],[-.79158349,-.59853894],[-.79164084,-.60372026],[-.79169873,-.60889695],[-.79175716,-.61406894],[-.79181614,-.61923617],[-.79187565,-.62439858],[-.79193572,-.62955611],[-.79199633,-.6347087],[-.7920575,-.6398563],[-.79211922,-.64499884],[-.79218149,-.65013627],[-.79224433,-.65526854],[-.79230773,-.66039558],[-.79237169,-.66551734],[-.79243622,-.67063378],[-.79250131,-.67574483],[-.79256698,-.68085044],[-.79263322,-.68595057],[-.79270004,-.69104516],[-.79276743,-.69613417],[-.79283541,-.70121753],[-.79290397,-.70629521],[-.79297311,-.71136716],[-.79304283,-.71643333],[-.79311315,-.72149367],[-.79318406,-.72654814],[-.79325556,-.73159669],[-.79332766,-.73663929],[-.79340035,-.74167588],[-.79347364,-.74670642],[-.79354754,-.75173087],[-.79362204,-.75674919],[-.79369714,-.76176135],[-.79377285,-.76676729],[-.79384917,-.77176698],[-.7939261,-.77676039],[-.79400365,-.78174747],[-.7940818,-.78672818],[-.79416058,-.7917025],[-.79423998,-.79667038],[-.79431999,-.8016318],[-.79440063,-.8065867],[-.79448189,-.81153508],[-.79456378,-.81647687],[-.7946463,-.82141207],[-.79472944,-.82634063],[-.79481322,-.83126252],[-.79489763,-.83617772],[-.79498268,-.84108619],[-.79506836,-.84598791],[-.79515467,-.85088284],[-.79524163,-.85577095],[-.79532923,-.86065223],[-.79541747,-.86552664],[-.79550636,-.87039415],[-.79559589,-.87525475],[-.79568607,-.8801084],[-.79577689,-.88495509],[-.79586837,-.88979478],[-.7959605,-.89462746],[-.79605328,-.8994531],[-.79614671,-.90427168],[-.7962408,-.90908317],[-.79633555,-.91388757],[-.79643095,-.91868484],[-.79652702,-.92347497],[-.79662374,-.92825793],[-.79672113,-.93303371],[-.79681918,-.9378023],[-.7969179,-.94256366],[-.79701728,-.94731779],[-.79711733,-.95206467],[-.79721805,-.95680427],[-.79731943,-.9615366],[-.79742149,-.96626162],[-.79752421,-.97097933],[-.79762762,-.97568971],[-.79773169,-.98039275],[-.79783644,-.98508843],[-.79794186,-.98977674],[-.79804796,-.99445767],[-.79815474,-.9991312],[-.7982622,-1.00379733],[-.79837034,-1.00845604],[-.79847915,-1.01310732],[-.79858865,-1.01775116],[-.79869883,-1.02238756],[-.7988097,-1.02701649],[-.79892124,-1.03163796],[-.79903348,-1.03625195],[-.7991464,-1.04085846],[-.79926,-1.04545748],[-.79937429,-1.05004899],[-.79948927,-1.054633],[-.79960494,-1.05920949],[-.7997213,-1.06377846],[-.79983835,-1.06833991],[-.79995609,-1.07289382],[-.80007452,-1.07744019],[-.80019364,-1.08197902],[-.80031345,-1.0865103],[-.80043396,-1.09103402],[-.80055516,-1.09555019],[-.80067706,-1.1000588],[-.80079965,-1.10455984],[-.80092294,-1.10905332],[-.80104692,-1.11353922],[-.8011716,-1.11801755],[-.80129697,-1.1224883],[-.80142305,-1.12695148],[-.80154982,-1.13140707],[-.80167728,-1.13585509],[-.80180545,-1.14029551],[-.80193432,-1.14472836],[-.80206388,-1.14915362],[-.80219415,-1.15357129],[-.80232512,-1.15798138],[-.80245678,-1.16238388],[-.80258915,-1.1667788],[-.80272222,-1.17116612],[-.80285598,-1.17554587],[-.80299045,-1.17991803],[-.80312563,-1.1842826],[-.8032615,-1.18863959],[-.80339807,-1.19298901],[-.80353535,-1.19733084],[-.80367333,-1.20166509],[-.80381201,-1.20599177],[-.8039514,-1.21031087],[-.80409149,-1.2146224],[-.80423228,-1.21892636],[-.80437377,-1.22322275],[-.80451597,-1.22751158],[-.80465887,-1.23179285],[-.80480247,-1.23606655],[-.80494678,-1.2403327],[-.80509179,-1.2445913],[-.8052375,-1.24884235],[-.80538391,-1.25308586],[-.80553103,-1.25732182],[-.80567885,-1.26155024],[-.80582738,-1.26577112],[-.80597661,-1.26998448],[-.80612654,-1.27419031],[-.80627717,-1.27838861],[-.8064285,-1.2825794],[-.80658054,-1.28676267],[-.80673328,-1.29093842],[-.80688672,-1.29510668],[-.80704086,-1.29926743],[-.80719571,-1.30342068],[-.80735125,-1.30756644],[-.8075075,-1.31170471],[-.80766445,-1.31583549],[-.80782209,-1.3199588],[-.80798044,-1.32407463],[-.80813949,-1.32818299],[-.80829924,-1.33228388],[-.80845969,-1.33637731],[-.80862083,-1.34046329],[-.80878268,-1.34454182],[-.80894522,-1.34861289],[-.80910846,-1.35267653],[-.8092724,-1.35673273],[-.80943704,-1.36078149],[-.80960237,-1.36482283],[-.8097684,-1.36885675],[-.80993512,-1.37288324],[-.81010254,-1.37690232],[-.81027066,-1.380914],[-.81043947,-1.38491826],[-.81060897,-1.38891513],[-.81077917,-1.3929046],[-.81095006,-1.39688669],[-.81112164,-1.40086138],[-.81129392,-1.40482869],[-.81146688,-1.40878863],[-.81164054,-1.41274119],[-.81181489,-1.41668638],[-.81198992,-1.4206242],[-.81216565,-1.42455467],[-.81234206,-1.42847778],[-.81251917,-1.43239353],[-.81269695,-1.43630194],[-.81287543,-1.44020299],[-.81305459,-1.44409671],[-.81323444,-1.44798309],[-.81341497,-1.45186214],[-.81359618,-1.45573385],[-.81377808,-1.45959823],[-.81396066,-1.46345529],[-.81414392,-1.46730503],[-.81432786,-1.47114745],[-.81451248,-1.47498256],[-.81469778,-1.47881035],[-.81488376,-1.48263083],[-.81507042,-1.486444],[-.81525775,-1.49024987],[-.81544576,-1.49404843],[-.81563445,-1.49783969],[-.81582381,-1.50162366],[-.81601384,-1.50540032],[-.81620455,-1.5091697],[-.81639593,-1.51293177],[-.81658798,-1.51668656],[-.8167807,-1.52043405],[-.81697409,-1.52417425],[-.81716815,-1.52790717],[-.81736287,-1.53163279],[-.81755826,-1.53535113],[-.81775432,-1.53906218],[-.81795104,-1.54276595],[-.81814843,-1.54646243],[-.81834647,-1.55015162],[-.81854518,-1.55383353],[-.81874455,-1.55750815],[-.81894458,-1.56117548],[-.81914527,-1.56483552],[-.81934662,-1.56848828],[-.81954862,-1.57213374],[-.81975128,-1.57577191],[-.8199546,-1.57940279],[-.82015856,-1.58302638],[-.82036318,-1.58664267],[-.82056846,-1.59025166],[-.82077438,-1.59385336],[-.82098095,-1.59744775],[-.82118817,-1.60103483],[-.82139604,-1.60461461],[-.82160455,-1.60818708],[-.82181371,-1.61175223],[-.82202351,-1.61531007],[-.82223395,-1.61886058],[-.82244504,-1.62240377],[-.82265676,-1.62593963],[-.82286913,-1.62946816],[-.82308213,-1.63298935],[-.82329577,-1.6365032],[-.82351004,-1.6400097],[-.82372495,-1.64350885],[-.8239405,-1.64700065],[-.82415667,-1.65048508],[-.82437347,-1.65396214],[-.82459091,-1.65743183],[-.82480897,-1.66089413],[-.82502766,-1.66434905],[-.82524698,-1.66779658],[-.82546692,-1.6712367],[-.82568748,-1.67466942],[-.82590867,-1.67809472],[-.82613047,-1.6815126],[-.8263529,-1.68492305],[-.82657594,-1.68832606],[-.8267996,-1.69172162],[-.82702388,-1.69510972],[-.82724877,-1.69849037],[-.82747427,-1.70186354],[-.82770038,-1.70522922],[-.8279271,-1.70858742],[-.82815444,-1.71193811],[-.82838238,-1.71528129],[-.82861092,-1.71861694],[-.82884007,-1.72194507],[-.82906983,-1.72526565],[-.82930018,-1.72857868],[-.82953114,-1.73188414],[-.82976269,-1.73518202],[-.82999484,-1.73847232],[-.83022759,-1.74175501],[-.83046093,-1.74503009],[-.83069487,-1.74829755],[-.8309294,-1.75155737],[-.83116452,-1.75480953],[-.83140022,-1.75805403],[-.83163652,-1.76129085],[-.8318734,-1.76451998],[-.83211087,-1.76774141],[-.83234891,-1.77095511],[-.83258755,-1.77416108],[-.83282676,-1.7773593],[-.83306655,-1.78054975],[-.83330691,-1.78373243],[-.83354785,-1.78690731],[-.83378937,-1.79007437],[-.83403146,-1.79323361],[-.83427412,-1.79638501],[-.83451735,-1.79952854],[-.83476114,-1.8026642],[-.83500551,-1.80579196],[-.83525044,-1.80891181],[-.83549593,-1.81202373],[-.83574198,-1.81512771],[-.83598859,-1.81822371],[-.83623577,-1.82131174],[-.8364835,-1.82439175],[-.83673178,-1.82746375],[-.83698062,-1.83052771],[-.83723001,-1.8335836],[-.83747995,-1.83663142],[-.83773044,-1.83967113],[-.83798148,-1.84270273],[-.83823307,-1.84572618],[-.83848519,-1.84874147],[-.83873787,-1.85174858],[-.83899108,-1.85474748],[-.83924483,-1.85773816],[-.83949912,-1.86072059],[-.83975394,-1.86369475],[-.8400093,-1.86666061],[-.8402652,-1.86961816],[-.84052162,-1.87256738],[-.84077857,-1.87550823],[-.84103605,-1.8784407],[-.84129406,-1.88136476],[-.84155259,-1.88428039],[-.84181164,-1.88718756],[-.84207122,-1.89008625],[-.84233131,-1.89297643],[-.84259193,-1.89585809],[-.84285305,-1.89873119],[-.8431147,-1.90159571],[-.84337685,-1.90445162],[-.84363952,-1.9072989],[-.84390269,-1.91013752],[-.84416638,-1.91296746],[-.84443056,-1.91578868],[-.84469526,-1.91860117],[-.84496045,-1.92140489],[-.84522615,-1.92419981],[-.84549234,-1.92698591],[-.84575903,-1.92976317],[-.84602622,-1.93253154],[-.8462939,-1.93529101],[-.84656207,-1.93804155],[-.84683073,-1.94078312],[-.84709988,-1.9435157],[-.84736952,-1.94623926],[-.84763964,-1.94895376],[-.84791024,-1.95165919],[-.84818133,-1.9543555],[-.8484529,-1.95704266],[-.84872494,-1.95972066],[-.84899746,-1.96238945],[-.84927045,-1.965049],[-.84954392,-1.96769929],[-.84981785,-1.97034028],[-.85009226,-1.97297194],[-.85036713,-1.97559423],[-.85064247,-1.97820714],[-.85091827,-1.98081061],[-.85119453,-1.98340463],[-.85147125,-1.98598915],[-.85174843,-1.98856414],[-.85202607,-1.99112958],[-.85230416,-1.99368542],[-.8525827,-1.99623164],[-.8528617,-1.99876819],[-.85314114,-2.00129505],[-.85342103,-2.00381217],[-.85370136,-2.00631953],[-.85398214,-2.00881709],[-.85426336,-2.01130482],[-.85454502,-2.01378267],[-.85482712,-2.01625062],[-.85510966,-2.01870862],[-.85539263,-2.02115665],[-.85567603,-2.02359466],[-.85595986,-2.02602262],[-.85624412,-2.02844049],[-.85652881,-2.03084823],[-.85681392,-2.03324581],[-.85709946,-2.03563319],[-.85738542,-2.03801033],[-.85767179,-2.0403772],[-.85795859,-2.04273375],[-.8582458,-2.04507996],[-.85853343,-2.04741577],[-.85882146,-2.04974115],[-.85910991,-2.05205606],[-.85939877,-2.05436047],[-.85968803,-2.05665433],[-.8599777,-2.05893761],[-.86026777,-2.06121026],[-.86055824,-2.06347225],[-.86084911,-2.06572353],[-.86114038,-2.06796407],[-.86143204,-2.07019382],[-.8617241,-2.07241274],[-.86201655,-2.0746208],[-.86230939,-2.07681796],[-.86260262,-2.07900416],[-.86289623,-2.08117937],[-.86319023,-2.08334356],[-.86348461,-2.08549667],[-.86377937,-2.08763866],[-.86407451,-2.0897695],[-.86437003,-2.09188915],[-.86466592,-2.09399755],[-.86496219,-2.09609466],[-.86525882,-2.09818046],[-.86555583,-2.10025488],[-.8658532,-2.10231789],[-.86615094,-2.10436945],[-.86644904,-2.1064095],[-.86674751,-2.10843802],[-.86704633,-2.11045495],[-.86734552,-2.11246026],[-.86764506,-2.11445389],[-.86794495,-2.1164358],[-.8682452,-2.11840596],[-.86854579,-2.12036431],[-.86884674,-2.12231081],[-.86914803,-2.12424541],[-.86944967,-2.12616808],[-.86975165,-2.12807876],[-.87005397,-2.12997741],[-.87035664,-2.13186399],[-.87065964,-2.13373845],[-.87096297,-2.13560075],[-.87126664,-2.13745083],[-.87157064,-2.13928866],[-.87187497,-2.14111419],[-.87217963,-2.14292737],[-.87248462,-2.14472816],[-.87278993,-2.1465165],[-.87309557,-2.14829236],[-.87340152,-2.15005569],[-.8737078,-2.15180644],[-.87401439,-2.15354456],[-.87432129,-2.15527001],[-.87462851,-2.15698274],[-.87493604,-2.15868271],[-.87524389,-2.16036986],[-.87555203,-2.16204415],[-.87586049,-2.16370553],[-.87616925,-2.16535396],[-.87647831,-2.16698938],[-.87678767,-2.16861176],[-.87709733,-2.17022103],[-.87740729,-2.17181716],[-.87771754,-2.1734001],[-.87802809,-2.17496979],[-.87833892,-2.1765262],[-.87865005,-2.17806927],[-.87896146,-2.17959895],[-.87927316,-2.1811152],[-.87958514,-2.18261796],[-.87989741,-2.1841072],[-.88020995,-2.18558286],[-.88052277,-2.18704489],[-.88083587,-2.18849324],[-.88114925,-2.18992787],[-.88146289,-2.19134872],[-.88177681,-2.19275575],[-.882091,-2.19414891],[-.88240545,-2.19552815],[-.88272017,-2.19689342],[-.88303515,-2.19824468],[-.88335039,-2.19958186],[-.8836659,-2.20090493],[-.88398166,-2.20221384],[-.88429768,-2.20350853],[-.88461395,-2.20478895],[-.88493048,-2.20605507],[-.88524725,-2.20730682],[-.88556428,-2.20854416],[-.88588155,-2.20976704],[-.88619907,-2.2109754],[-.88651683,-2.21216921],[-.88683483,-2.21334841],[-.88715307,-2.21451295],[-.88747156,-2.21566279],[-.88779027,-2.21679786],[-.88810922,-2.21791813],[-.88842841,-2.21902354],[-.88874782,-2.22011405],[-.88906746,-2.2211896],[-.88938733,-2.22225015],[-.88970743,-2.22329564],[-.89002775,-2.22432603],[-.89034829,-2.22534126],[-.89066905,-2.22634129],[-.89099003,-2.22732607],[-.89131123,-2.22829555],[-.89163264,-2.22924968],[-.89195426,-2.2301884],[-.89227609,-2.23111168],[-.89259813,-2.23201946],[-.89292038,-2.23291169],[-.89324284,-2.23378832],[-.8935655,-2.2346493],[-.89388836,-2.23549459],[-.89421142,-2.23632413],[-.89453468,-2.23713788],[-.89485814,-2.23793578],[-.89518179,-2.23871779],[-.89550563,-2.23948386],[-.89582967,-2.24023393],[-.89615389,-2.24096797],[-.8964783,-2.24168592],[-.8968029,-2.24238773],[-.89712768,-2.24307336],[-.89745265,-2.24374275],[-.89777779,-2.24439586],[-.89810312,-2.24503263],[-.89842862,-2.24565303],[-.89875429,-2.246257],[-.89908014,-2.24684449],[-.89940616,-2.24741546],[-.89973235,-2.24796985],[-.90005871,-2.24850763],[-.90038524,-2.24902873],[-.90071192,-2.24953312],[-.90103878,-2.25002075],[-.90136579,-2.25049156],[-.90169296,-2.25094552],[-.90202029,-2.25138257],[-.90234778,-2.25180266],[-.90267541,-2.25220576],[-.90300321,-2.25259181],[-.90333115,-2.25296076],[-.90365924,-2.25331257],[-.90398747,-2.2536472],[-.90431585,-2.25396459],[-.90464438,-2.25426471],[-.90497305,-2.25454749],[-.90530185,-2.25481291],[-.9056308,-2.2550609],[-.90595988,-2.25529144],[-.90628909,-2.25550446],[-.90661844,-2.25569993],[-.90694791,-2.2558778],[-.90727752,-2.25603803],[-.90760725,-2.25618057],[-.90793711,-2.25630537],[-.9082671,-2.2564124],[-.9085972,-2.25650161],[-.90892743,-2.25657294],[-.90925777,-2.25662637],[-.90958823,-2.25666185],[-.90991881,-2.25667932],[-.9102495,-2.25667876],[-.9105803,-2.25666012],[-.91091121,-2.25662334],[-.91124222,-2.2565684],[-.91157335,-2.25649525],[-.91190457,-2.25640385],[-.9122359,-2.25629415],[-.91256733,-2.25616611],[-.91289886,-2.2560197],[-.91323049,-2.25585487],[-.91356221,-2.25567157],[-.91389403,-2.25546978],[-.91422593,-2.25524945],[-.91455793,-2.25501053],[-.91489002,-2.254753],[-.91522219,-2.2544768],[-.91555444,-2.25418191],[-.91588678,-2.25386828],[-.9162192,-2.25353587],[-.9165517,-2.25318464],[-.91688428,-2.25281457],[-.91721693,-2.2524256],[-.91754966,-2.2520177],[-.91788246,-2.25159084],[-.91821533,-2.25114497],[-.91854827,-2.25068007],[-.91888127,-2.25019609],[-.91921434,-2.249693],[-.91954747,-2.24917077],[-.91988066,-2.24862935],[-.92021392,-2.24806872],[-.92054723,-2.24748883],[-.92088059,-2.24688966],[-.92121401,-2.24627118],[-.92154749,-2.24563334],[-.92188101,-2.24497612],[-.92221458,-2.24429948],[-.9225482,-2.24360339],[-.92288186,-2.24288782],[-.92321557,-2.24215274],[-.92354931,-2.24139812],[-.9238831,-2.24062392],[-.92421693,-2.23983012],[-.92455079,-2.23901668],[-.92488468,-2.23818359],[-.9252186,-2.2373308],[-.92555256,-2.23645829],[-.92588655,-2.23556604],[-.92622056,-2.23465401],[-.92655459,-2.23372217],[-.92688865,-2.23277051],[-.92722273,-2.231799],[-.92755683,-2.2308076],[-.92789094,-2.2297963],[-.92822507,-2.22876507],[-.92855922,-2.22771389],[-.92889337,-2.22664273],[-.92922754,-2.22555157],[-.92956171,-2.22444038],[-.92989589,-2.22330915],[-.93023007,-2.22215785],[-.93056426,-2.22098647],[-.93089844,-2.21979498],[-.93123263,-2.21858336],[-.93156681,-2.21735159],[-.93190098,-2.21609966],[-.93223515,-2.21482754],[-.93256931,-2.21353523],[-.93290345,-2.21222269],[-.93323759,-2.21088992],[-.9335717,-2.20953689],[-.9339058,-2.20816361],[-.93423989,-2.20677004],[-.93457395,-2.20535617],[-.93490799,-2.203922],[-.935242,-2.20246751],[-.93557599,-2.20099269],[-.93590995,-2.19949752],[-.93624388,-2.19798199],[-.93657777,-2.19644611],[-.93691163,-2.19488984],[-.93724546,-2.1933132],[-.93757924,-2.19171616],[-.93791299,-2.19009873],[-.93824669,-2.18846088],[-.93858035,-2.18680263],[-.93891396,-2.18512396],[-.93924753,-2.18342487],[-.93958104,-2.18170536],[-.9399145,-2.17996542],[-.94024791,-2.17820505],[-.94058126,-2.17642424],[-.94091455,-2.17462301],[-.94124779,-2.17280134],[-.94158096,-2.17095924],[-.94191406,-2.16909671],[-.9422471,-2.16721375],[-.94258007,-2.16531037],[-.94291297,-2.16338657],[-.9432458,-2.16144235],[-.94357855,-2.15947772],[-.94391123,-2.15749268],[-.94424383,-2.15548725],[-.94457634,-2.15346144],[-.94490878,-2.15141524],[-.94524113,-2.14934867],[-.94557339,-2.14726174],[-.94590557,-2.14515447],[-.94623765,-2.14302686],[-.94656964,-2.14087893],[-.94690154,-2.13871069],[-.94723333,-2.13652216],[-.94756503,-2.13431336],[-.94789663,-2.13208429],[-.94822813,-2.12983499],[-.94855951,-2.12756546],[-.9488908,-2.12527573],[-.94922197,-2.12296582],[-.94955303,-2.12063575],[-.94988397,-2.11828554],[-.9502148,-2.11591523],[-.95054552,-2.11352482],[-.95087611,-2.11111435],[-.95120658,-2.10868385],[-.95153693,-2.10623334],[-.95186714,-2.10376285],[-.95219724,-2.10127241],[-.9525272,-2.09876206],[-.95285702,-2.09623182],[-.95318672,-2.09368173],[-.95351627,-2.09111182],[-.95384569,-2.08852212],[-.95417496,-2.08591268],[-.95450409,-2.08328353],[-.95483308,-2.08063472],[-.95516192,-2.07796627],[-.95549061,-2.07527823],[-.95581915,-2.07257064],[-.95614753,-2.06984355],[-.95647576,-2.06709699],[-.95680382,-2.06433103],[-.95713173,-2.06154569],[-.95745948,-2.05874103],[-.95778706,-2.0559171],[-.95811447,-2.05307395],[-.95844172,-2.05021162],[-.9587688,-2.04733018],[-.9590957,-2.04442968],[-.95942242,-2.04151016],[-.95974897,-2.03857169],[-.96007534,-2.03561433],[-.96040153,-2.03263813],[-.96072753,-2.02964315],[-.96105335,-2.02662945],[-.96137898,-2.0235971],[-.96170442,-2.02054617],[-.96202967,-2.0174767],[-.96235472,-2.01438878],[-.96267958,-2.01128246],[-.96300424,-2.00815783],[-.96332869,-2.00501494],[-.96365295,-2.00185387],[-.963977,-1.9986747],[-.96430084,-1.99547749],[-.96462448,-1.99226232],[-.9649479,-1.98902927],[-.96527111,-1.98577842],[-.96559411,-1.98250985],[-.96591688,-1.97922364],[-.96623944,-1.97591986],[-.96656178,-1.97259861],[-.96688389,-1.96925998],[-.96720578,-1.96590403],[-.96752744,-1.96253087],[-.96784887,-1.95914059],[-.96817007,-1.95573327],[-.96849104,-1.952309],[-.96881177,-1.94886789],[-.96913226,-1.94541003],[-.96945251,-1.9419355],[-.96977252,-1.93844442],[-.97009229,-1.93493687],[-.97041181,-1.93141297],[-.97073109,-1.92787281],[-.97105011,-1.9243165],[-.97136889,-1.92074414],[-.97168741,-1.91715584],[-.97200567,-1.9135517],[-.97232368,-1.90993185],[-.97264143,-1.90629639],[-.97295892,-1.90264542],[-.97327614,-1.89897908],[-.9735931,-1.89529746],[-.9739098,-1.8916007],[-.97422622,-1.88788891],[-.97454238,-1.8841622],[-.97485826,-1.88042071],[-.97517387,-1.87666455],[-.9754892,-1.87289385],[-.97580426,-1.86910874],[-.97611904,-1.86530934],[-.97643353,-1.86149579],[-.97674775,-1.85766822],[-.97706168,-1.85382675],[-.97737532,-1.84997153],[-.97768868,-1.84610268],[-.97800174,-1.84222036],[-.97831452,-1.83832469],[-.978627,-1.83441581],[-.97893919,-1.83049388],[-.97925109,-1.82655903],[-.97956268,-1.8226114],[-.97987398,-1.81865116],[-.98018497,-1.81467843],[-.98049567,-1.81069338],[-.98080606,-1.80669616],[-.98111614,-1.80268692],[-.98142592,-1.79866581],[-.98173539,-1.79463299],[-.98204456,-1.79058862],[-.98235341,-1.78653286],[-.98266195,-1.78246586],[-.98297017,-1.77838781],[-.98327808,-1.77429884],[-.98358568,-1.77019914],[-.98389295,-1.76608887],[-.98419991,-1.7619682],[-.98450655,-1.7578373],[-.98481287,-1.75369635],[-.98511886,-1.74954551],[-.98542454,-1.74538496],[-.98572988,-1.74121488],[-.9860349,-1.73703545],[-.9863396,-1.73284684],[-.98664397,-1.72864925],[-.986948,-1.72444285],[-.98725171,-1.72022782],[-.98755509,-1.71600436],[-.98785814,-1.71177266],[-.98816085,-1.70753289],[-.98846323,-1.70328525],[-.98876527,-1.69902994],[-.98906698,-1.69476715],[-.98936835,-1.69049708],[-.98966939,-1.68621991],[-.98997009,-1.68193585],[-.99027045,-1.67764511],[-.99057047,-1.67334788],[-.99087015,-1.66904436],[-.99116949,-1.66473476],[-.99146849,-1.66041929],[-.99176715,-1.65609814],[-.99206547,-1.65177155],[-.99236344,-1.6474397],[-.99266108,-1.64310282],[-.99295836,-1.63876111],[-.99325531,-1.6344148],[-.99355191,-1.6300641],[-.99384816,-1.62570922],[-.99414408,-1.62135039],[-.99443964,-1.61698782],[-.99473486,-1.61262175],[-.99502974,-1.60825238],[-.99532427,-1.60387994],[-.99561845,-1.59950467],[-.99591229,-1.59512679],[-.99620578,-1.59074652],[-.99649893,-1.5863641],[-.99679173,-1.58197975],[-.99708418,-1.57759372],[-.99737629,-1.57320623],[-.99766805,-1.56881751],[-.99795947,-1.56442781],[-.99825055,-1.56003737],[-.99854127,-1.55564641],[-.99883166,-1.55125519],[-.9991217,-1.54686394],[-.99941139,-1.5424729],[-.99970074,-1.53808232],[-.99998975,-1.53369244],[-1.00027842,-1.52930351],[-1.00056674,-1.52491578],[-1.00085473,-1.52052948],[-1.00114237,-1.51614488],[-1.00142967,-1.51176222],[-1.00171663,-1.50738176],[-1.00200326,-1.50300374],[-1.00228954,-1.49862842],[-1.00257549,-1.49425605],[-1.0028611,-1.48988689],[-1.00314637,-1.48552119],[-1.00343131,-1.48115922],[-1.00371592,-1.47680122],[-1.0040002,-1.47244747],[-1.00428414,-1.46809821],[-1.00456775,-1.46375372],[-1.00485103,-1.45941424],[-1.00513399,-1.45508005],[-1.00541661,-1.4507514],[-1.00569891,-1.44642857],[-1.00598089,-1.44211181],[-1.00626254,-1.43780139],[-1.00654387,-1.43349759],[-1.00682488,-1.42920065],[-1.00710557,-1.42491086],[-1.00738594,-1.42062849],[-1.007666,-1.41635379],[-1.00794574,-1.41208704],[-1.00822516,-1.40782851],[-1.00850428,-1.40357848],[-1.00878309,-1.39933721],[-1.00906158,-1.39510497],[-1.00933978,-1.39088204],[-1.00961766,-1.3866687],[-1.00989525,-1.3824652],[-1.01017253,-1.37827184],[-1.01044951,-1.37408887],[-1.0107262,-1.36991659],[-1.01100259,-1.36575526],[-1.01127869,-1.36160515],[-1.0115545,-1.35746655],[-1.01183001,-1.35333973],[-1.01210524,-1.34922497],[-1.01238019,-1.34512254],[-1.01265485,-1.34103272],[-1.01292924,-1.33695579],[-1.01320334,-1.33289202],[-1.01347717,-1.32884169],[-1.01375073,-1.32480508],[-1.01402401,-1.32078247],[-1.01429703,-1.31677414],[-1.01456978,-1.31278035],[-1.01484226,-1.3088014],[-1.01511449,-1.30483755],[-1.01538645,-1.30088909],[-1.01565816,-1.29695629],[-1.01592962,-1.29303944],[-1.01620082,-1.2891388],[-1.01647178,-1.28525465],[-1.01674249,-1.28138728],[-1.01701296,-1.27753696],[-1.01728319,-1.27370397],[-1.01755318,-1.26988858],[-1.01782294,-1.26609106],[-1.01809246,-1.26231171],[-1.01836176,-1.25855078],[-1.01863083,-1.25480856],[-1.01889968,-1.25108531],[-1.01916831,-1.24738133],[-1.01943672,-1.24369687],[-1.01970492,-1.24003221],[-1.01997291,-1.23638763],[-1.02024069,-1.2327634],[-1.02050827,-1.22915979],[-1.02077565,-1.22557707],[-1.02104283,-1.22201551],[-1.02130981,-1.21847538],[-1.0215766,-1.21495695],[-1.02184321,-1.2114605],[-1.02210963,-1.20798628],[-1.02237587,-1.20453457],[-1.02264193,-1.20110563],[-1.02290781,-1.19769973],[-1.02317352,-1.19431713],[-1.02343907,-1.1909581],[-1.02370445,-1.1876229],[-1.02396967,-1.18431179],[-1.02423474,-1.18102504],[-1.02449964,-1.1777629],[-1.0247644,-1.17452564],[-1.02502901,-1.1713135],[-1.02529348,-1.16812676],[-1.02555781,-1.16496567],[-1.025822,-1.16183047],[-1.02608606,-1.15872143],[-1.02634999,-1.1556388],[-1.0266138,-1.15258283],[-1.02687748,-1.14955377],[-1.02714105,-1.14655187],[-1.0274045,-1.14357739],[-1.02766785,-1.14063055],[-1.02793108,-1.13771162],[-1.02819421,-1.13482083],[-1.02845725,-1.13195843],[-1.02872019,-1.12912466],[-1.02898303,-1.12631976],[-1.02924579,-1.12354397],[-1.02950847,-1.12079753],[-1.02977107,-1.11808067],[-1.03003359,-1.11539362],[-1.03029604,-1.11273662],[-1.03055842,-1.1101099],[-1.03082074,-1.1075137],[-1.03108299,-1.10494823],[-1.03134519,-1.10241372],[-1.03160734,-1.0999104],[-1.03186944,-1.0974385],[-1.0321315,-1.09499823],[-1.03239351,-1.09258981],[-1.03265549,-1.09021346],[-1.03291744,-1.0878694],[-1.03317936,-1.08555784],[-1.03344125,-1.083279],[-1.03370313,-1.08103308],[-1.03396499,-1.0788203],[-1.03422683,-1.07664086],[-1.03448867,-1.07449496],[-1.03475051,-1.07238281],[-1.03501234,-1.07030462],[-1.03527418,-1.06826057],[-1.03553603,-1.06625088],[-1.03579789,-1.06427572],[-1.03605976,-1.06233531],[-1.03632166,-1.06042982],[-1.03658358,-1.05855944],[-1.03684553,-1.05672437],[-1.03710752,-1.05492479],[-1.03736954,-1.05316089],[-1.0376316,-1.05143283],[-1.03789371,-1.04974081],[-1.03815587,-1.048085],[-1.03841808,-1.04646556],[-1.03868035,-1.04488269],[-1.03894269,-1.04333653],[-1.03920509,-1.04182727],[-1.03946756,-1.04035506],[-1.0397301,-1.03892008],[-1.03999273,-1.03752247],[-1.04025543,-1.03616241],[-1.04051823,-1.03484003],[-1.04078111,-1.03355551],[-1.0410441,-1.03230899],[-1.04130718,-1.03110061],[-1.04157036,-1.02993053],[-1.04183366,-1.02879889],[-1.04209707,-1.02770583],[-1.04236059,-1.02665149],[-1.04262424,-1.025636],[-1.04288801,-1.02465951],[-1.04315191,-1.02372213],[-1.04341594,-1.02282401],[-1.04368011,-1.02196526],[-1.04394443,-1.02114601],[-1.04420889,-1.02036639],[-1.0444735,-1.01962651],[-1.04473827,-1.01892648],[-1.04500319,-1.01826643],[-1.04526828,-1.01764646],[-1.04553354,-1.01706667],[-1.04579896,-1.01652719],[-1.04606457,-1.0160281],[-1.04633035,-1.01556951],[-1.04659632,-1.01515152],[-1.04686248,-1.01477421],[-1.04712883,-1.01443769],[-1.04739538,-1.01414205],[-1.04766213,-1.01388736],[-1.04792908,-1.01367371],[-1.04819625,-1.01350119],[-1.04846363,-1.01336987],[-1.04873123,-1.01327983],[-1.04899905,-1.01323114],[-1.04926709,-1.01322387],[-1.04953537,-1.01325809],[-1.04980389,-1.01333385],[-1.05007264,-1.01345123],[-1.05034164,-1.01361028],[-1.05061088,-1.01381106],[-1.05088038,-1.01405361],[-1.05115014,-1.01433799],[-1.05142015,-1.01466425],[-1.05169043,-1.01503243],[-1.05196098,-1.01544257],[-1.05223181,-1.0158947],[-1.05250291,-1.01638887],[-1.05277429,-1.0169251],[-1.05304596,-1.01750343],[-1.05331793,-1.01812388],[-1.05359018,-1.01878647],[-1.05386274,-1.01949122],[-1.0541356,-1.02023815],[-1.05440876,-1.02102728],[-1.05468224,-1.02185861],[-1.05495604,-1.02273216],[-1.05523015,-1.02364792],[-1.05550459,-1.02460591],[-1.05577936,-1.02560611],[-1.05605446,-1.02664853],[-1.0563299,-1.02773316],[-1.05660568,-1.02885998],[-1.05688181,-1.03002899],[-1.05715828,-1.03124016],[-1.05743512,-1.03249349],[-1.05771231,-1.03378893],[-1.05798986,-1.03512648],[-1.05826778,-1.03650609],[-1.05854607,-1.03792775],[-1.05882474,-1.0393914],[-1.05910379,-1.04089702],[-1.05938322,-1.04244456],[-1.05966304,-1.04403398],[-1.05994325,-1.04566523],[-1.06022386,-1.04733826],[-1.06050488,-1.04905302],[-1.06078629,-1.05080944],[-1.06106812,-1.05260747],[-1.06135036,-1.05444704],[-1.06163302,-1.05632809],[-1.0619161,-1.05825054],[-1.06219961,-1.06021433],[-1.06248355,-1.06221938],[-1.06276793,-1.0642656],[-1.06305274,-1.06635292],[-1.063338,-1.06848125],[-1.06362371,-1.07065049],[-1.06390987,-1.07286057],[-1.06419648,-1.07511137],[-1.06448356,-1.07740281],[-1.0647711,-1.07973478],[-1.06505911,-1.08210718],[-1.06534759,-1.08451989],[-1.06563655,-1.08697281],[-1.065926,-1.08946583],[-1.06621593,-1.09199881],[-1.06650635,-1.09457165],[-1.06679726,-1.09718422],[-1.06708867,-1.09983639],[-1.06738059,-1.10252802],[-1.06767301,-1.105259],[-1.06796595,-1.10802917],[-1.06825939,-1.1108384],[-1.06855336,-1.11368655],[-1.06884786,-1.11657346],[-1.06914288,-1.119499],[-1.06943843,-1.122463],[-1.06973452,-1.12546531],[-1.07003115,-1.12850576],[-1.07032832,-1.13158421],[-1.07062605,-1.13470048],[-1.07092432,-1.1378544],[-1.07122315,-1.1410458],[-1.07152255,-1.14427451],[-1.0718225,-1.14754035],[-1.07212303,-1.15084313],[-1.07242413,-1.15418267],[-1.07272581,-1.15755879],[-1.07302807,-1.16097129],[-1.07333091,-1.16441998],[-1.07363435,-1.16790466],[-1.07393837,-1.17142513],[-1.074243,-1.17498119],[-1.07454822,-1.17857264],[-1.07485405,-1.18219925],[-1.07516049,-1.18586083],[-1.07546754,-1.18955715],[-1.07577521,-1.193288],[-1.0760835,-1.19705315],[-1.07639241,-1.20085238],[-1.07670196,-1.20468547],[-1.07701213,-1.20855218],[-1.07732294,-1.21245228],[-1.07763439,-1.21638552],[-1.07794649,-1.22035169],[-1.07825923,-1.22435052],[-1.07857262,-1.22838177],[-1.07888667,-1.23244521],[-1.07920138,-1.23654057],[-1.07951675,-1.24066759],[-1.07983278,-1.24482604],[-1.08014949,-1.24901564],[-1.08046686,-1.25323613],[-1.08078492,-1.25748724],[-1.08110365,-1.26176872],[-1.08142307,-1.26608028],[-1.08174317,-1.27042165],[-1.08206396,-1.27479256],[-1.08238545,-1.27919272],[-1.08270764,-1.28362186],[-1.08303052,-1.28807969],[-1.08335411,-1.29256592],[-1.08367841,-1.29708027],[-1.08400342,-1.30162243],[-1.08432914,-1.30619211],[-1.08465558,-1.31078902],[-1.08498273,-1.31541286],[-1.08531061,-1.32006331],[-1.08563922,-1.32474008],[-1.08596855,-1.32944286],[-1.08629862,-1.33417133],[-1.08662942,-1.33892519],[-1.08696096,-1.34370411],[-1.08729324,-1.34850778],[-1.08762627,-1.35333587],[-1.08796004,-1.35818807],[-1.08829456,-1.36306405],[-1.08862983,-1.36796348],[-1.08896585,-1.37288603],[-1.08930263,-1.37783137],[-1.08964017,-1.38279916],[-1.08997848,-1.38778906],[-1.09031755,-1.39280075],[-1.09065738,-1.39783387],[-1.09099798,-1.40288808],[-1.09133936,-1.40796303],[-1.09168151,-1.41305839],[-1.09202443,-1.41817379],[-1.09236814,-1.42330889],[-1.09271262,-1.42846333],[-1.09305788,-1.43363675],[-1.09340393,-1.43882881],[-1.09375077,-1.44403913],[-1.09409839,-1.44926736],[-1.0944468,-1.45451313],[-1.09479601,-1.45977608],[-1.09514601,-1.46505584],[-1.0954968,-1.47035203],[-1.09584839,-1.4756643],[-1.09620078,-1.48099226],[-1.09655396,-1.48633555],[-1.09690795,-1.49169378],[-1.09726274,-1.49706658],[-1.09761833,-1.50245357],[-1.09797473,-1.50785436],[-1.09833194,-1.51326859],[-1.09868995,-1.51869585],[-1.09904877,-1.52413577],[-1.0994084,-1.52958796],[-1.09976884,-1.53505203],[-1.10013008,-1.54052759],[-1.10049215,-1.54601426],[-1.10085502,-1.55151163],[-1.1012187,-1.55701931],[-1.1015832,-1.56253692],[-1.10194852,-1.56806405],[-1.10231465,-1.57360031],[-1.10268159,-1.5791453],[-1.10304935,-1.58469862],[-1.10341792,-1.59025987],[-1.10378731,-1.59582865],[-1.10415752,-1.60140455],[-1.10452854,-1.60698717],[-1.10490038,-1.61257612],[-1.10527303,-1.61817098],[-1.1056465,-1.62377134],[-1.10602078,-1.62937681],[-1.10639588,-1.63498697],[-1.10677179,-1.64060142],[-1.10714852,-1.64621974],[-1.10752606,-1.65184153],[-1.10790442,-1.65746638],[-1.10828358,-1.66309388],[-1.10866356,-1.66872361],[-1.10904435,-1.67435517],[-1.10942595,-1.67998814],[-1.10980836,-1.6856221],[-1.11019158,-1.69125666],[-1.1105756,-1.69689139],[-1.11096044,-1.70252588],[-1.11134607,-1.70815971],[-1.11173251,-1.71379248],[-1.11211975,-1.71942376],[-1.1125078,-1.72505315],[-1.11289664,-1.73068023],[-1.11328628,-1.73630458],[-1.11367671,-1.7419258],[-1.11406795,-1.74754346],[-1.11445997,-1.75315715],[-1.11485279,-1.75876646],[-1.11524639,-1.76437097],[-1.11564078,-1.76997027],[-1.11603596,-1.77556395],[-1.11643192,-1.78115158],[-1.11682866,-1.78673277],[-1.11722618,-1.79230708],[-1.11762448,-1.79787412],[-1.11802355,-1.80343347],[-1.1184234,-1.80898472],[-1.11882401,-1.81452746],[-1.11922539,-1.82006127],[-1.11962754,-1.82558574],[-1.12003044,-1.83110047],[-1.12043411,-1.83660504],[-1.12083853,-1.84209906],[-1.12124371,-1.8475821],[-1.12164964,-1.85305376],[-1.12205631,-1.85851364],[-1.12246374,-1.86396133],[-1.1228719,-1.86939642],[-1.1232808,-1.87481852],[-1.12369044,-1.88022721],[-1.12410081,-1.8856221],[-1.12451191,-1.89100279],[-1.12492374,-1.89636887],[-1.12533629,-1.90171995],[-1.12574956,-1.90705563],[-1.12616355,-1.9123755],[-1.12657824,-1.91767919],[-1.12699365,-1.92296628],[-1.12740977,-1.9282364],[-1.12782658,-1.93348913],[-1.12824409,-1.93872411],[-1.1286623,-1.94394093],[-1.1290812,-1.94913921],[-1.12950079,-1.95431855],[-1.12992106,-1.95947859],[-1.13034201,-1.96461893],[-1.13076363,-1.96973918],[-1.13118593,-1.97483898],[-1.13160889,-1.97991793],[-1.13203252,-1.98497567],[-1.13245681,-1.99001182],[-1.13288175,-1.99502599],[-1.13330734,-2.00001782],[-1.13373359,-2.00498694],[-1.13416047,-2.00993298],[-1.13458799,-2.01485557],[-1.13501615,-2.01975435],[-1.13544494,-2.02462894],[-1.13587436,-2.029479],[-1.13630439,-2.03430415],[-1.13673505,-2.03910404],[-1.13716631,-2.04387832],[-1.13759819,-2.04862662],[-1.13803067,-2.0533486],[-1.13846375,-2.05804391],[-1.13889742,-2.06271219],[-1.13933169,-2.0673531],[-1.13976654,-2.0719663],[-1.14020197,-2.07655144],[-1.14063798,-2.08110819],[-1.14107457,-2.0856362],[-1.14151172,-2.09013514],[-1.14194943,-2.09460468],[-1.14238771,-2.09904448],[-1.14282654,-2.10345422],[-1.14326591,-2.10783356],[-1.14370584,-2.11218219],[-1.1441463,-2.11649978],[-1.1445873,-2.12078601],[-1.14502883,-2.12504056],[-1.14547089,-2.12926313],[-1.14591347,-2.13345338],[-1.14635656,-2.13761102],[-1.14680017,-2.14173574],[-1.14724429,-2.14582723],[-1.14768891,-2.14988518],[-1.14813402,-2.15390931],[-1.14857963,-2.1578993],[-1.14902573,-2.16185486],[-1.14947232,-2.1657757],[-1.14991938,-2.16966154],[-1.15036692,-2.17351207],[-1.15081492,-2.17732702],[-1.1512634,-2.1811061],[-1.15171233,-2.18484903],[-1.15216172,-2.18855554],[-1.15261156,-2.19222534],[-1.15306185,-2.19585818],[-1.15351257,-2.19945377],[-1.15396374,-2.20301185],[-1.15441534,-2.20653216],[-1.15486736,-2.21001444],[-1.15531981,-2.21345842],[-1.15577268,-2.21686385],[-1.15622596,-2.22023048],[-1.15667965,-2.22355805],[-1.15713374,-2.22684632],[-1.15758824,-2.23009505],[-1.15804313,-2.23330398],[-1.15849841,-2.23647289],[-1.15895407,-2.23960154],[-1.15941012,-2.24268969],[-1.15986654,-2.24573711],[-1.16032334,-2.24874357],[-1.1607805,-2.25170885],[-1.16123803,-2.25463272],[-1.16169592,-2.25751498]];return a}function Ni(){var a=[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0],[-0,-0]];return a}function D5(){var a=[[0,0,0,0,0,0,0,0,0],[1,-0,71e-8,-0,1,0,-71e-8,-0,1],[1,0,212e-8,0,1,-0,-212e-8,0,1],[1,-0,42e-7,0,1,-0,-42e-7,0,1],[1,-0,692e-8,0,1,-0,-692e-8,0,1],[1,0,1028e-8,-0,1,-0,-1028e-8,0,1],[1,0,1425e-8,-0,1,-0,-1425e-8,0,1],[1,0,188e-7,-0,1,-0,-188e-7,0,1],[1,0,2391e-8,-0,1,-0,-2391e-8,0,1],[1,0,2957e-8,-0,1,-0,-2957e-8,0,1],[1,0,3575e-8,-0,1,-0,-3575e-8,0,1],[1,0,4244e-8,-0,1,-0,-4244e-8,0,1],[1,0,496e-7,-0,1,-0,-496e-7,0,1],[1,0,5721e-8,-0,1,-0,-5721e-8,0,1],[1,0,6527e-8,-0,1,-0,-6527e-8,0,1],[1,0,7374e-8,-0,1,-0,-7374e-8,0,1],[1,0,8259e-8,-0,1,-0,-8259e-8,0,1],[1,0,9182e-8,-0,1,-0,-9182e-8,0,1],[.99999999,0,1014e-7,-0,1,-0,-1014e-7,0,.99999999],[.99999999,0,1113e-7,-0,1,-0,-1113e-7,0,.99999999],[.99999999,0,12151e-8,-0,1,-0,-12151e-8,0,.99999999],[.99999999,0,132e-6,-0,1,-0,-132e-6,0,.99999999],[.99999999,0,14275e-8,-0,1,-0,-14275e-8,0,.99999999],[.99999999,0,15374e-8,-0,1,-0,-15374e-8,0,.99999999],[.99999999,0,16494e-8,-0,1,-0,-16494e-8,0,.99999999],[.99999998,0,17634e-8,-0,1,-0,-17634e-8,0,.99999998],[.99999998,0,18791e-8,-0,1,-0,-18791e-8,0,.99999998],[.99999998,0,19963e-8,-0,1,-0,-19963e-8,0,.99999998],[.99999998,0,21148e-8,-0,1,-0,-21148e-8,0,.99999998],[.99999998,0,22343e-8,-0,1,-0,-22343e-8,0,.99999998],[.99999997,0,23546e-8,-0,1,-0,-23546e-8,0,.99999997],[.99999997,0,24756e-8,-0,1,-0,-24756e-8,0,.99999997],[.99999997,0,2597e-7,-0,1,-0,-2597e-7,0,.99999997],[.99999996,0,27185e-8,-0,1,-0,-27185e-8,0,.99999996],[.99999996,0,28399e-8,-0,1,-0,-28399e-8,0,.99999996],[.99999996,0,29611e-8,-0,1,-0,-29611e-8,0,.99999996],[.99999995,0,30818e-8,-0,1,-0,-30818e-8,0,.99999995],[.99999995,0,32018e-8,-0,1,-0,-32018e-8,0,.99999995],[.99999994,0,33208e-8,-0,1,-0,-33208e-8,0,.99999994],[.99999994,0,34386e-8,-0,1,-0,-34386e-8,0,.99999994],[.99999994,0,35551e-8,-0,1,-0,-35551e-8,0,.99999994],[.99999993,0,367e-6,-0,1,-0,-367e-6,0,.99999993],[.99999993,0,3783e-7,-0,1,-0,-3783e-7,0,.99999993],[.99999992,0,3894e-7,-0,1,-0,-3894e-7,0,.99999992],[.99999992,0,40027e-8,-0,1,-0,-40027e-8,0,.99999992],[.99999992,0,41089e-8,-0,1,-0,-41089e-8,0,.99999992],[.99999991,0,42124e-8,-0,1,-0,-42124e-8,0,.99999991],[.99999991,0,4313e-7,-0,1,-0,-4313e-7,0,.99999991],[.9999999,0,44104e-8,-0,1,-0,-44104e-8,0,.9999999],[.9999999,0,45045e-8,-0,1,-0,-45045e-8,0,.9999999],[.99999989,0,4595e-7,-0,1,-0,-4595e-7,0,.99999989],[.99999989,-0,46816e-8,0,1,-0,-46816e-8,0,.99999989],[.99999989,-0,47643e-8,0,1,-0,-47643e-8,0,.99999989],[.99999988,-0,48426e-8,0,1,-0,-48426e-8,0,.99999988],[.99999988,-0,49166e-8,0,1,-0,-49166e-8,0,.99999988],[.99999988,-0,49858e-8,0,1,-0,-49858e-8,0,.99999988],[.99999987,-0,50502e-8,0,1,-0,-50502e-8,0,.99999987],[.99999987,-0,51095e-8,0,1,-0,-51095e-8,0,.99999987],[.99999987,-0,51634e-8,0,1,-0,-51634e-8,0,.99999987],[.99999986,-0,52118e-8,0,1,-0,-52118e-8,0,.99999986],[.99999986,-0,52545e-8,0,1,-0,-52545e-8,0,.99999986],[.99999986,-0,52912e-8,0,1,-0,-52912e-8,0,.99999986],[.99999986,-0,53217e-8,0,1,-0,-53217e-8,0,.99999986],[.99999986,-0,53458e-8,0,1,-0,-53458e-8,0,.99999986],[.99999986,-0,53634e-8,0,1,-0,-53634e-8,0,.99999986],[.99999986,-0,53741e-8,0,1,-0,-53741e-8,0,.99999986],[.99999986,-0,53778e-8,0,1,-0,-53778e-8,0,.99999986],[.99999986,-0,53743e-8,0,1,-0,-53743e-8,0,.99999986],[.99999986,-0,53634e-8,0,1,-0,-53634e-8,0,.99999986],[.99999986,-0,53448e-8,0,1,-0,-53448e-8,0,.99999986],[.99999986,-0,53184e-8,0,1,-0,-53184e-8,0,.99999986],[.99999986,-0,5284e-7,0,1,-0,-5284e-7,0,.99999986],[.99999986,-0,52413e-8,0,1,-0,-52413e-8,0,.99999986],[.99999987,-0,51901e-8,0,1,-0,-51901e-8,0,.99999987],[.99999987,-0,51303e-8,0,1,-0,-51303e-8,0,.99999987],[.99999987,-0,50616e-8,0,1,-0,-50616e-8,0,.99999987],[.99999988,-0,49839e-8,0,1,-0,-49839e-8,0,.99999988],[.99999988,-0,48969e-8,0,1,-0,-48969e-8,0,.99999988],[.99999988,-0,48005e-8,0,1,-0,-48005e-8,0,.99999988],[.99999989,-0,46944e-8,0,1,-0,-46944e-8,0,.99999989],[.9999999,-0,45784e-8,0,1,-0,-45784e-8,0,.9999999],[.9999999,-0,44525e-8,0,1,-0,-44525e-8,0,.9999999],[.99999991,-0,43163e-8,0,1,-0,-43163e-8,0,.99999991],[.99999991,-0,41696e-8,0,1,-0,-41696e-8,0,.99999991],[.99999992,-0,40124e-8,0,1,-0,-40124e-8,0,.99999992],[.99999993,-0,38444e-8,0,1,-0,-38444e-8,0,.99999993],[.99999993,-0,36653e-8,0,1,-0,-36653e-8,0,.99999993],[.99999994,-0,34751e-8,0,1,-0,-34751e-8,0,.99999994],[.99999995,-0,32735e-8,0,1,-0,-32735e-8,0,.99999995],[.99999995,-0,30604e-8,0,1,-0,-30604e-8,0,.99999995],[.99999996,-0,28356e-8,0,1,-0,-28356e-8,0,.99999996],[.99999997,-0,25988e-8,0,1,-0,-25988e-8,0,.99999997],[.99999997,-0,235e-6,0,1,-0,-235e-6,0,.99999997],[.99999998,-0,20888e-8,0,1,-0,-20888e-8,0,.99999998],[.99999998,-0,18153e-8,0,1,-0,-18153e-8,0,.99999998],[.99999999,-0,15291e-8,0,1,-0,-15291e-8,0,.99999999],[.99999999,-0,12301e-8,0,1,-0,-12301e-8,0,.99999999],[1,-0,9181e-8,0,1,-0,-9181e-8,0,1],[1,-0,593e-7,0,1,-0,-593e-7,0,1],[1,-0,2546e-8,0,1,-0,-2546e-8,0,1],[1,-0,-972e-8,0,1,-0,972e-8,0,1],[1,-0,-4627e-8,0,1,-0,4627e-8,0,1],[1,-0,-8421e-8,0,1,-0,8421e-8,0,1],[.99999999,-0,-12353e-8,0,1,-0,12353e-8,0,.99999999],[.99999999,-0,-16428e-8,0,1,-0,16428e-8,0,.99999999],[.99999998,-0,-20645e-8,0,1,-0,20645e-8,0,.99999998],[.99999997,-0,-25006e-8,0,1,-0,25006e-8,0,.99999997],[.99999996,-0,-29514e-8,0,1,-0,29514e-8,0,.99999996],[.99999994,-0,-34169e-8,0,1,-0,34169e-8,0,.99999994],[.99999992,-0,-38973e-8,0,1,-0,38973e-8,0,.99999992],[.9999999,-0,-43927e-8,0,1,-0,43927e-8,0,.9999999],[.99999988,-0,-49034e-8,0,1,-0,49034e-8,0,.99999988],[.99999985,-0,-54294e-8,0,1,-0,54294e-8,0,.99999985],[.99999982,-0,-5971e-7,0,1,-0,5971e-7,0,.99999982],[.99999979,-0,-65281e-8,0,1,-0,65281e-8,0,.99999979],[.99999975,-0,-71011e-8,0,1,-0,71011e-8,0,.99999975],[.9999997,-0,-76899e-8,0,1,-0,76899e-8,0,.9999997],[.99999966,-0,-82948e-8,0,1,-0,82948e-8,0,.99999966],[.9999996,-0,-8916e-7,0,1,-0,8916e-7,0,.9999996],[.99999954,-0,-95534e-8,0,1,-0,95534e-8,0,.99999954],[.99999948,-0,-.00102073,0,1,-0,.00102073,0,.99999948],[.99999941,-0,-.00108778,0,1,-0,.00108778,0,.99999941],[.99999933,-0,-.0011565,0,1,-0,.0011565,0,.99999933],[.99999925,-0,-.0012269,0,1,-0,.0012269,0,.99999925],[.99999916,-0,-.001299,0,1,-0,.001299,0,.99999916],[.99999906,-0,-.00137281,0,1,-0,.00137281,0,.99999906],[.99999895,-0,-.00144834,0,1,-0,.00144834,0,.99999895],[.99999884,-0,-.0015256,0,1,-0,.0015256,0,.99999884],[.99999871,-0,-.0016046,0,1,-0,.0016046,0,.99999871],[.99999858,-0,-.00168536,0,1,-0,.00168536,0,.99999858],[.99999844,-0,-.00176789,0,1,-0,.00176789,0,.99999844],[.99999828,-0,-.00185219,0,1,-0,.00185219,0,.99999828],[.99999812,-0,-.00193828,0,1,-0,.00193828,0,.99999812],[.99999795,-0,-.00202617,0,1,-0,.00202617,0,.99999795],[.99999776,-0,-.00211586,0,1,-0,.00211586,0,.99999776],[.99999756,-0,-.00220737,0,1,-0,.00220737,0,.99999756],[.99999735,-0,-.00230071,0,1,-0,.00230071,0,.99999735],[.99999713,-0,-.00239589,0,1,-0,.00239589,0,.99999713],[.99999689,-0,-.00249292,0,1,-0,.00249292,0,.99999689],[.99999664,-0,-.0025918,0,1,-0,.0025918,0,.99999664],[.99999638,-0,-.00269254,0,1,-0,.00269254,0,.99999638],[.99999609,-0,-.00279516,0,1,-0,.00279516,0,.99999609],[.9999958,-0,-.00289966,0,1,-0,.00289966,0,.9999958],[.99999548,-0,-.00300605,0,1,-0,.00300605,0,.99999548],[.99999515,-0,-.00311434,0,1,-0,.00311434,0,.99999515],[.9999948,-0,-.00322453,0,1,-0,.00322453,0,.9999948],[.99999443,-0,-.00333664,0,1,-0,.00333664,0,.99999443],[.99999405,-0,-.00345067,0,1,-0,.00345067,0,.99999405],[.99999364,-0,-.00356662,0,1,-0,.00356662,0,.99999364],[.99999321,-0,-.00368452,0,1,-0,.00368452,0,.99999321],[.99999276,-0,-.00380435,0,1,-0,.00380435,0,.99999276],[.99999229,-0,-.00392613,0,1,-0,.00392613,0,.99999229],[.9999918,-0,-.00404986,0,1,-0,.00404986,0,.9999918],[.99999128,-0,-.00417556,0,1,-0,.00417556,0,.99999128],[.99999074,-0,-.00430322,0,1,-0,.00430322,0,.99999074],[.99999017,-0,-.00443285,0,1,-0,.00443285,0,.99999017],[.99998958,-0,-.00456446,0,1,-0,.00456446,0,.99998958],[.99998896,-0,-.00469805,0,1,-0,.00469805,0,.99998896],[.99998832,-0,-.00483363,0,1,-0,.00483363,0,.99998832],[.99998764,-0,-.00497119,0,1,-0,.00497119,0,.99998764],[.99998694,-0,-.00511076,0,1,-0,.00511076,0,.99998694],[.99998621,-0,-.00525232,0,1,-0,.00525232,0,.99998621],[.99998544,-0,-.00539589,0,1,-0,.00539589,0,.99998544],[.99998465,-0,-.00554146,0,1,-0,.00554146,0,.99998465],[.99998382,-0,-.00568905,0,1,-0,.00568905,0,.99998382],[.99998295,-0,-.00583865,0,1,-0,.00583865,0,.99998295],[.99998206,-0,-.00599027,0,1,-0,.00599027,0,.99998206],[.99998113,-0,-.0061439,0,1,-0,.0061439,0,.99998113],[.99998016,-0,-.00629956,0,1,-0,.00629956,0,.99998016],[.99997915,-0,-.00645725,0,1,-0,.00645725,0,.99997915],[.99997811,-0,-.00661696,0,1,-0,.00661696,0,.99997811],[.99997702,-0,-.0067787,0,1,-0,.0067787,0,.99997702],[.9999759,-0,-.00694248,0,1,-0,.00694248,0,.9999759],[.99997474,-0,-.00710828,0,1,-0,.00710828,0,.99997474],[.99997353,-0,-.00727612,0,1,-0,.00727612,0,.99997353],[.99997228,-0,-.007446,0,1,-0,.007446,0,.99997228],[.99997098,-0,-.00761791,0,1,-0,.00761791,0,.99997098],[.99996964,-0,-.00779185,0,1,-0,.00779185,0,.99996964],[.99996826,-0,-.00796784,0,1,-0,.00796784,0,.99996826],[.99996682,-0,-.00814586,0,1,-0,.00814586,0,.99996682],[.99996534,-0,-.00832591,0,1,-0,.00832591,0,.99996534],[.99996381,-0,-.00850801,0,1,-0,.00850801,0,.99996381],[.99996222,-0,-.00869214,0,1,-0,.00869214,0,.99996222],[.99996059,-0,-.00887831,0,1,-0,.00887831,0,.99996059],[.9999589,-0,-.00906651,0,1,-0,.00906651,0,.9999589],[.99995716,-0,-.00925674,0,1,-0,.00925674,0,.99995716],[.99995536,-0,-.00944901,0,1,-0,.00944901,0,.99995536],[.9999535,-0,-.00964331,0,1,-0,.00964331,0,.9999535],[.99995159,-0,-.00983964,0,1,-0,.00983964,0,.99995159],[.99994962,-0,-.010038,0,1,-0,.010038,0,.99994962],[.99994759,-0,-.01023838,0,1,-0,.01023838,0,.99994759],[.99994549,-0,-.01044079,0,1,-0,.01044079,0,.99994549],[.99994334,-0,-.01064522,0,1,-0,.01064522,0,.99994334],[.99994112,-0,-.01085166,0,1,-0,.01085166,0,.99994112],[.99993883,-0,-.01106013,0,1,-0,.01106013,0,.99993883],[.99993648,-0,-.0112706,0,1,-0,.0112706,0,.99993648],[.99993407,-0,-.01148309,0,1,-0,.01148309,0,.99993407],[.99993158,-0,-.01169758,0,1,-0,.01169758,0,.99993158],[.99992902,-0,-.01191407,0,1,-0,.01191407,0,.99992902],[.9999264,-0,-.01213257,0,1,-0,.01213257,0,.9999264],[.9999237,-0,-.01235306,0,1,-0,.01235306,0,.9999237],[.99992092,-0,-.01257553,0,1,-0,.01257553,0,.99992092],[.99991808,-0,-.0128,0,1,-0,.0128,0,.99991808],[.99991515,-0,-.01302645,0,1,-0,.01302645,0,.99991515],[.99991215,-0,-.01325487,0,1,-0,.01325487,0,.99991215],[.99990907,-0,-.01348527,0,1,-0,.01348527,0,.99990907],[.99990591,-0,-.01371764,0,1,-0,.01371764,0,.99990591],[.99990267,-0,-.01395197,0,1,-0,.01395197,0,.99990267],[.99989934,-0,-.01418826,0,1,-0,.01418826,0,.99989934],[.99989593,-0,-.0144265,0,1,-0,.0144265,0,.99989593],[.99989244,-0,-.01466668,0,1,-0,.01466668,0,.99989244],[.99988886,-0,-.01490881,0,1,-0,.01490881,0,.99988886],[.99988519,-0,-.01515287,0,1,-0,.01515287,0,.99988519],[.99988143,-0,-.01539886,0,1,-0,.01539886,0,.99988143],[.99987758,-0,-.01564677,0,1,-0,.01564677,0,.99987758],[.99987364,-0,-.0158966,0,1,-0,.0158966,0,.99987364],[.99986961,-0,-.01614834,0,1,-0,.01614834,0,.99986961],[.99986548,-0,-.01640198,0,1,-0,.01640198,0,.99986548],[.99986125,-0,-.01665752,0,1,-0,.01665752,0,.99986125],[.99985693,-0,-.01691495,0,1,-0,.01691495,0,.99985693],[.99985251,-0,-.01717426,0,1,-0,.01717426,0,.99985251],[.99984799,-0,-.01743544,0,1,-0,.01743544,0,.99984799],[.99984337,-0,-.01769849,0,1,-0,.01769849,0,.99984337],[.99983865,-0,-.0179634,0,1,-0,.0179634,0,.99983865],[.99983382,-0,-.01823016,0,1,-0,.01823016,0,.99983382],[.99982888,-0,-.01849877,0,1,-0,.01849877,0,.99982888],[.99982384,-0,-.01876922,0,1,-0,.01876922,0,.99982384],[.99981869,-0,-.01904149,0,1,-0,.01904149,0,.99981869],[.99981344,-0,-.01931559,0,1,-0,.01931559,0,.99981344],[.99980807,-0,-.01959149,0,1,-0,.01959149,0,.99980807],[.99980259,-0,-.0198692,0,1,-0,.0198692,0,.99980259],[.99979699,-0,-.02014871,0,1,-0,.02014871,0,.99979699],[.99979129,-0,-.02043,0,1,-0,.02043,0,.99979129],[.99978546,-0,-.02071307,0,1,-0,.02071307,0,.99978546],[.99977952,-0,-.02099791,0,1,-0,.02099791,0,.99977952],[.99977346,-0,-.02128452,0,1,-0,.02128452,0,.99977346],[.99976728,-0,-.02157287,0,1,-0,.02157287,0,.99976728],[.99976098,-0,-.02186296,0,1,-0,.02186296,0,.99976098],[.99975455,-0,-.02215479,0,1,-0,.02215479,0,.99975455],[.999748,-0,-.02244835,0,1,-0,.02244835,0,.999748],[.99974133,-0,-.02274361,0,1,-0,.02274361,0,.99974133],[.99973453,-0,-.02304059,0,1,-0,.02304059,0,.99973453],[.9997276,-0,-.02333925,0,1,-0,.02333925,0,.9997276],[.99972055,-0,-.02363961,0,1,-0,.02363961,0,.99972055],[.99971336,-0,-.02394164,0,1,-0,.02394164,0,.99971336],[.99970604,-0,-.02424533,0,1,-0,.02424533,0,.99970604],[.99969859,-0,-.02455069,0,1,-0,.02455069,0,.99969859],[.999691,-0,-.02485769,0,1,-0,.02485769,0,.999691],[.99968328,-0,-.02516632,0,1,-0,.02516632,0,.99968328],[.99967542,-0,-.02547658,0,1,-0,.02547658,0,.99967542],[.99966742,-0,-.02578846,0,1,-0,.02578846,0,.99966742],[.99965929,-0,-.02610195,0,1,-0,.02610195,0,.99965929],[.99965101,-0,-.02641702,0,1,-0,.02641702,0,.99965101],[.99964259,-0,-.02673369,0,1,-0,.02673369,0,.99964259],[.99963403,-0,-.02705193,0,1,-0,.02705193,0,.99963403],[.99962532,-0,-.02737173,0,1,-0,.02737173,0,.99962532],[.99961647,-0,-.02769309,0,1,-0,.02769309,0,.99961647],[.99960748,-0,-.02801599,0,1,-0,.02801599,0,.99960748],[.99959833,-0,-.02834042,0,1,-0,.02834042,0,.99959833],[.99958904,-0,-.02866637,0,1,-0,.02866637,0,.99958904],[.99957959,-0,-.02899383,0,1,-0,.02899383,0,.99957959],[.99956999,-0,-.0293228,0,1,-0,.0293228,0,.99956999],[.99956025,-0,-.02965325,0,1,-0,.02965325,0,.99956025],[.99955034,-0,-.02998518,0,1,-0,.02998518,0,.99955034],[.99954029,-0,-.03031858,0,1,-0,.03031858,0,.99954029],[.99953007,-0,-.03065343,0,1,-0,.03065343,0,.99953007],[.9995197,-0,-.03098973,0,1,-0,.03098973,0,.9995197],[.99950917,-0,-.03132746,0,1,-0,.03132746,0,.99950917],[.99949849,-0,-.03166662,0,1,-0,.03166662,0,.99949849],[.99948764,-0,-.03200718,0,1,-0,.03200718,0,.99948764],[.99947663,-0,-.03234915,0,1,-0,.03234915,0,.99947663],[.99946546,-0,-.03269251,0,1,-0,.03269251,0,.99946546],[.99945412,-0,-.03303724,0,1,-0,.03303724,0,.99945412],[.99944262,-0,-.03338334,0,1,-0,.03338334,0,.99944262],[.99943095,-0,-.0337308,0,1,-0,.0337308,0,.99943095],[.99941912,-0,-.0340796,0,1,-0,.0340796,0,.99941912],[.99940712,-0,-.03442973,0,1,-0,.03442973,0,.99940712],[.99939495,-0,-.03478119,0,1,-0,.03478119,0,.99939495],[.99938261,-0,-.03513395,0,1,-0,.03513395,0,.99938261],[.9993701,-0,-.03548802,0,1,-0,.03548802,0,.9993701],[.99935742,-0,-.03584337,0,1,-0,.03584337,0,.99935742],[.99934457,-0,-.0362,0,1,-0,.0362,0,.99934457],[.99933154,-0,-.03655789,0,1,-0,.03655789,0,.99933154],[.99931833,-0,-.03691703,0,1,-0,.03691703,0,.99931833],[.99930496,-0,-.03727742,0,1,-0,.03727742,0,.99930496],[.9992914,-0,-.03763904,0,1,-0,.03763904,0,.9992914],[.99927767,-0,-.03800187,0,1,-0,.03800187,0,.99927767],[.99926376,-0,-.03836592,0,1,-0,.03836592,0,.99926376],[.99924967,-0,-.03873116,0,1,-0,.03873116,0,.99924967],[.9992354,-0,-.03909758,0,1,-0,.03909758,0,.9992354],[.99922095,-0,-.03946518,0,1,-0,.03946518,0,.99922095],[.99920631,-0,-.03983394,0,1,-0,.03983394,0,.99920631],[.9991915,-0,-.04020385,0,1,-0,.04020385,0,.9991915],[.9991765,-0,-.0405749,0,1,-0,.0405749,0,.9991765],[.99916132,-0,-.04094707,0,1,-0,.04094707,0,.99916132],[.99914595,-0,-.04132036,0,1,-0,.04132036,0,.99914595],[.9991304,-0,-.04169476,0,1,-0,.04169476,0,.9991304],[.99911466,-0,-.04207025,0,1,-0,.04207025,0,.99911466],[.99909873,-0,-.04244683,0,1,-0,.04244683,0,.99909873],[.99908261,-0,-.04282447,0,1,-0,.04282447,0,.99908261],[.99906631,-0,-.04320317,0,1,-0,.04320317,0,.99906631],[.99904981,-0,-.04358292,0,1,-0,.04358292,0,.99904981],[.99903313,-0,-.04396371,0,1,-0,.04396371,0,.99903313],[.99901625,-0,-.04434552,0,1,-0,.04434552,0,.99901625],[.99899919,-0,-.04472835,0,1,-0,.04472835,0,.99899919],[.99898193,-0,-.04511218,0,1,-0,.04511218,0,.99898193],[.99896448,-0,-.045497,0,1,-0,.045497,0,.99896448],[.99894683,-0,-.04588281,0,1,-0,.04588281,0,.99894683],[.99892899,-0,-.04626958,0,1,-0,.04626958,0,.99892899],[.99891095,-0,-.04665731,0,1,-0,.04665731,0,.99891095],[.99889272,-0,-.04704599,0,1,-0,.04704599,0,.99889272],[.9988743,-0,-.0474356,0,1,-0,.0474356,0,.9988743],[.99885568,-0,-.04782614,0,1,-0,.04782614,0,.99885568],[.99883686,-0,-.0482176,0,1,-0,.0482176,0,.99883686],[.99881784,-0,-.04860995,0,1,-0,.04860995,0,.99881784],[.99879862,-0,-.0490032,0,1,-0,.0490032,0,.99879862],[.99877921,-0,-.04939733,0,1,-0,.04939733,0,.99877921],[.99875959,-0,-.04979233,0,1,-0,.04979233,0,.99875959],[.99873978,-0,-.05018819,0,1,-0,.05018819,0,.99873978],[.99871976,-0,-.0505849,0,1,-0,.0505849,0,.99871976],[.99869955,-0,-.05098245,0,1,-0,.05098245,0,.99869955],[.99867913,-0,-.05138082,0,1,-0,.05138082,0,.99867913],[.99865852,-0,-.05178001,0,1,-0,.05178001,0,.99865852],[.9986377,-0,-.05218001,0,1,-0,.05218001,0,.9986377],[.99861667,-0,-.0525808,0,1,-0,.0525808,0,.99861667],[.99859545,-0,-.05298238,0,1,-0,.05298238,0,.99859545],[.99857402,-0,-.05338473,0,1,-0,.05338473,0,.99857402],[.99855239,-0,-.05378784,0,1,-0,.05378784,0,.99855239],[.99853055,-0,-.0541917,0,1,-0,.0541917,0,.99853055],[.99850851,-0,-.05459631,0,1,-0,.05459631,0,.99850851],[.99848626,-0,-.05500165,0,1,-0,.05500165,0,.99848626],[.99846381,-0,-.05540772,0,1,-0,.05540772,0,.99846381],[.99844116,-0,-.05581449,0,1,-0,.05581449,0,.99844116],[.99841829,-0,-.05622196,0,1,-0,.05622196,0,.99841829],[.99839523,-0,-.05663013,0,1,-0,.05663013,0,.99839523],[.99837195,-0,-.05703897,0,1,-0,.05703897,0,.99837195],[.99834847,-0,-.05744849,0,1,-0,.05744849,0,.99834847],[.99832478,-0,-.05785867,0,1,-0,.05785867,0,.99832478],[.99830089,-0,-.0582695,0,1,-0,.0582695,0,.99830089],[.99827679,-0,-.05868096,0,1,-0,.05868096,0,.99827679],[.99825248,-0,-.05909306,0,1,-0,.05909306,0,.99825248],[.99822796,-0,-.05950578,0,1,-0,.05950578,0,.99822796],[.99820324,-0,-.05991911,0,1,-0,.05991911,0,.99820324],[.9981783,-0,-.06033304,0,1,-0,.06033304,0,.9981783],[.99815316,-0,-.06074757,0,1,-0,.06074757,0,.99815316],[.99812781,-0,-.06116267,0,1,-0,.06116267,0,.99812781],[.99810225,-0,-.06157835,0,1,-0,.06157835,0,.99810225],[.99807649,-0,-.06199458,0,1,-0,.06199458,0,.99807649],[.99805051,-0,-.06241137,0,1,-0,.06241137,0,.99805051],[.99802433,-0,-.06282871,0,1,-0,.06282871,0,.99802433],[.99799793,-0,-.06324657,0,1,-0,.06324657,0,.99799793],[.99797133,-0,-.06366497,0,1,-0,.06366497,0,.99797133],[.99794452,-0,-.06408387,0,1,-0,.06408387,0,.99794452],[.99791749,-0,-.06450329,0,1,-0,.06450329,0,.99791749],[.99789026,-0,-.06492319,0,1,-0,.06492319,0,.99789026],[.99786282,-0,-.06534359,0,1,-0,.06534359,0,.99786282],[.99783517,-0,-.06576446,0,1,-0,.06576446,0,.99783517],[.99780732,-0,-.06618581,0,1,-0,.06618581,0,.99780732],[.99777925,-0,-.06660761,0,1,-0,.06660761,0,.99777925],[.99775097,-0,-.06702986,0,1,-0,.06702986,0,.99775097],[.99772248,-0,-.06745256,0,1,-0,.06745256,0,.99772248],[.99769379,-0,-.06787569,0,1,-0,.06787569,0,.99769379],[.99766488,-0,-.06829924,0,1,-0,.06829924,0,.99766488],[.99763577,-0,-.06872321,0,1,-0,.06872321,0,.99763577],[.99760644,-0,-.06914758,0,1,-0,.06914758,0,.99760644],[.99757691,-0,-.06957236,0,1,-0,.06957236,0,.99757691],[.99754717,-0,-.06999752,0,1,-0,.06999752,0,.99754717],[.99751721,-0,-.07042306,0,1,-0,.07042306,0,.99751721],[.99748705,-0,-.07084898,0,1,-0,.07084898,0,.99748705],[.99745668,-0,-.07127526,0,1,-0,.07127526,0,.99745668],[.99742611,-0,-.0717019,0,1,-0,.0717019,0,.99742611],[.99739532,-0,-.07212888,0,1,-0,.07212888,0,.99739532],[.99736433,-0,-.0725562,0,1,-0,.0725562,0,.99736433],[.99733312,-0,-.07298385,0,1,-0,.07298385,0,.99733312],[.99730171,-0,-.07341183,0,1,-0,.07341183,0,.99730171],[.99727009,-0,-.07384012,0,1,-0,.07384012,0,.99727009],[.99723827,-0,-.07426871,0,1,-0,.07426871,0,.99723827],[.99720623,-0,-.07469761,0,1,-0,.07469761,0,.99720623],[.99717399,-0,-.07512679,0,1,-0,.07512679,0,.99717399],[.99714154,-0,-.07555626,0,1,-0,.07555626,0,.99714154],[.99710888,-0,-.075986,0,1,-0,.075986,0,.99710888],[.99707602,-0,-.07641601,0,1,-0,.07641601,0,.99707602],[.99704295,-0,-.07684627,0,1,-0,.07684627,0,.99704295],[.99700968,-0,-.07727679,0,1,-0,.07727679,0,.99700968],[.9969762,-0,-.07770755,0,1,-0,.07770755,0,.9969762],[.99694251,-0,-.07813855,0,1,-0,.07813855,0,.99694251],[.99690862,-0,-.07856978,0,1,-0,.07856978,0,.99690862],[.99687452,-0,-.07900122,0,1,-0,.07900122,0,.99687452],[.99684022,-0,-.07943288,0,1,-0,.07943288,0,.99684022],[.99680571,-0,-.07986475,0,1,-0,.07986475,0,.99680571],[.996771,-0,-.08029681,0,1,-0,.08029681,0,.996771],[.99673608,-0,-.08072907,0,1,-0,.08072907,0,.99673608],[.99670096,-0,-.08116151,0,1,-0,.08116151,0,.99670096],[.99666564,-0,-.08159413,0,1,-0,.08159413,0,.99666564],[.99663011,-0,-.08202692,0,1,-0,.08202692,0,.99663011],[.99659439,-0,-.08245987,0,1,-0,.08245987,0,.99659439],[.99655845,-0,-.08289298,0,1,-0,.08289298,0,.99655845],[.99652232,-0,-.08332623,0,1,-0,.08332623,0,.99652232],[.99648599,-0,-.08375963,0,1,-0,.08375963,0,.99648599],[.99644945,-0,-.08419317,0,1,-0,.08419317,0,.99644945],[.99641272,-0,-.08462683,0,1,-0,.08462683,0,.99641272],[.99637578,-0,-.08506061,0,1,-0,.08506061,0,.99637578],[.99633864,-0,-.08549451,0,1,-0,.08549451,0,.99633864],[.9963013,-0,-.08592852,0,1,-0,.08592852,0,.9963013],[.99626377,-0,-.08636263,0,1,-0,.08636263,0,.99626377],[.99622603,-0,-.08679684,0,1,-0,.08679684,0,.99622603],[.9961881,-0,-.08723113,0,1,-0,.08723113,0,.9961881],[.99614997,-0,-.08766551,0,1,-0,.08766551,0,.99614997],[.99611164,-0,-.08809996,0,1,-0,.08809996,0,.99611164],[.99607311,-0,-.08853448,0,1,-0,.08853448,0,.99607311],[.99603439,-0,-.08896907,0,1,-0,.08896907,0,.99603439],[.99599547,-0,-.08940371,0,1,-0,.08940371,0,.99599547],[.99595635,-0,-.0898384,0,1,-0,.0898384,0,.99595635],[.99591704,-0,-.09027314,0,1,-0,.09027314,0,.99591704],[.99587754,-0,-.09070792,0,1,-0,.09070792,0,.99587754],[.99583784,-0,-.09114273,0,1,-0,.09114273,0,.99583784],[.99579795,-0,-.09157757,0,1,-0,.09157757,0,.99579795],[.99575786,-0,-.09201243,0,1,-0,.09201243,0,.99575786],[.99571758,-0,-.0924473,0,1,-0,.0924473,0,.99571758],[.99567711,-0,-.09288218,-0,1,-0,.09288218,0,.99567711],[.99563644,-0,-.09331707,-0,1,-0,.09331707,0,.99563644],[.99559559,-0,-.09375195,-0,1,-0,.09375195,0,.99559559],[.99555454,-0,-.09418683,-0,1,-0,.09418683,0,.99555454],[.9955133,-0,-.09462169,-0,1,-0,.09462169,0,.9955133],[.99547188,-0,-.09505653,-0,1,-0,.09505653,0,.99547188],[.99543026,-0,-.09549135,-0,1,-0,.09549135,0,.99543026],[.99538845,-0,-.09592614,-0,1,-0,.09592614,0,.99538845],[.99534646,-0,-.09636089,-0,1,-0,.09636089,0,.99534646],[.99530428,-0,-.0967956,-0,1,-0,.0967956,0,.99530428],[.99526191,-0,-.09723027,-0,1,-0,.09723027,0,.99526191],[.99521936,-0,-.09766488,-0,1,-0,.09766488,0,.99521936],[.99517662,-0,-.09809944,-0,1,-0,.09809944,0,.99517662],[.99513369,-0,-.09853393,-0,1,-0,.09853393,0,.99513369],[.99509058,-0,-.09896836,0,1,-0,.09896836,0,.99509058],[.99504729,-0,-.09940271,0,1,-0,.09940271,0,.99504729],[.99500381,-0,-.09983699,0,1,-0,.09983699,0,.99500381],[.99496015,-0,-.10027118,0,1,-0,.10027118,0,.99496015],[.9949163,-0,-.10070529,0,1,-0,.10070529,0,.9949163],[.99487227,-0,-.1011393,0,1,-0,.1011393,0,.99487227],[.99482807,-0,-.10157322,0,1,-0,.10157322,0,.99482807],[.99478368,-0,-.10200703,0,1,-0,.10200703,0,.99478368],[.99473911,-0,-.10244074,0,1,-0,.10244074,0,.99473911],[.99469436,-0,-.10287434,0,1,-0,.10287434,0,.99469436],[.99464943,-0,-.10330782,0,1,-0,.10330782,0,.99464943],[.99460433,-0,-.10374118,0,1,-0,.10374118,0,.99460433],[.99455904,-0,-.10417441,0,1,-0,.10417441,0,.99455904],[.99451358,-0,-.10460752,0,1,-0,.10460752,0,.99451358],[.99446795,-0,-.10504048,0,1,-0,.10504048,0,.99446795],[.99442213,-0,-.10547331,0,1,-0,.10547331,0,.99442213],[.99437615,-0,-.105906,0,1,-0,.105906,0,.99437615],[.99432998,-0,-.10633854,0,1,-0,.10633854,0,.99432998],[.99428365,-0,-.10677092,0,1,-0,.10677092,0,.99428365],[.99423714,-0,-.10720315,0,1,-0,.10720315,0,.99423714],[.99419045,-0,-.10763522,0,1,-0,.10763522,0,.99419045],[.9941436,-0,-.10806712,0,1,-0,.10806712,0,.9941436],[.99409657,-0,-.10849886,0,1,-0,.10849886,0,.99409657],[.99404938,-0,-.10893041,0,1,-0,.10893041,0,.99404938],[.99400201,-0,-.1093618,0,1,-0,.1093618,0,.99400201],[.99395447,-0,-.109793,0,1,-0,.109793,0,.99395447],[.99390677,-0,-.11022401,0,1,-0,.11022401,0,.99390677],[.9938589,-0,-.11065484,0,1,-0,.11065484,0,.9938589],[.99381086,-0,-.11108547,0,1,-0,.11108547,0,.99381086],[.99376265,-0,-.1115159,0,1,-0,.1115159,0,.99376265],[.99371428,-0,-.11194613,0,1,-0,.11194613,0,.99371428],[.99366574,-0,-.11237616,0,1,-0,.11237616,0,.99366574],[.99361703,-0,-.11280598,0,1,-0,.11280598,0,.99361703],[.99356817,-0,-.11323559,0,1,-0,.11323559,0,.99356817],[.99351914,-0,-.11366497,0,1,-0,.11366497,0,.99351914],[.99346994,-0,-.11409414,0,1,-0,.11409414,0,.99346994],[.99342059,-0,-.11452309,0,1,-0,.11452309,0,.99342059],[.99337107,-0,-.11495181,0,1,-0,.11495181,0,.99337107],[.99332139,-0,-.11538029,0,1,-0,.11538029,0,.99332139],[.99327155,-0,-.11580855,0,1,-0,.11580855,0,.99327155],[.99322156,-0,-.11623656,0,1,-0,.11623656,0,.99322156],[.9931714,-0,-.11666434,0,1,-0,.11666434,0,.9931714],[.99312109,-0,-.11709187,0,1,-0,.11709187,0,.99312109],[.99307062,-0,-.11751915,0,1,-0,.11751915,0,.99307062],[.99301999,-0,-.11794618,0,1,-0,.11794618,0,.99301999],[.99296921,-0,-.11837295,0,1,-0,.11837295,0,.99296921],[.99291827,-0,-.11879947,0,1,-0,.11879947,0,.99291827],[.99286717,-0,-.11922573,0,1,-0,.11922573,0,.99286717],[.99281593,-0,-.11965172,0,1,-0,.11965172,0,.99281593],[.99276453,-0,-.12007745,0,1,-0,.12007745,0,.99276453],[.99271297,-0,-.1205029,0,1,-0,.1205029,0,.99271297],[.99266127,-0,-.12092809,0,1,-0,.12092809,0,.99266127],[.99260942,-0,-.12135299,0,1,-0,.12135299,0,.99260942],[.99255741,-0,-.12177762,0,1,-0,.12177762,0,.99255741],[.99250525,-0,-.12220196,0,1,-0,.12220196,0,.99250525],[.99245295,-0,-.12262602,0,1,-0,.12262602,0,.99245295],[.9924005,-0,-.12304979,0,1,-0,.12304979,0,.9924005],[.9923479,-0,-.12347327,0,1,-0,.12347327,0,.9923479],[.99229515,-0,-.12389645,0,1,-0,.12389645,0,.99229515],[.99224226,-0,-.12431934,0,1,-0,.12431934,0,.99224226],[.99218922,-0,-.12474193,0,1,-0,.12474193,0,.99218922],[.99213604,-0,-.12516422,0,1,-0,.12516422,0,.99213604],[.99208271,-0,-.1255862,0,1,-0,.1255862,0,.99208271],[.99202924,-0,-.12600788,0,1,-0,.12600788,0,.99202924],[.99197563,-0,-.12642924,0,1,-0,.12642924,0,.99197563],[.99192187,-0,-.1268503,0,1,-0,.1268503,0,.99192187],[.99186798,-0,-.12727104,0,1,-0,.12727104,0,.99186798],[.99181394,-0,-.12769146,0,1,-0,.12769146,0,.99181394],[.99175976,-0,-.12811156,0,1,-0,.12811156,0,.99175976],[.99170545,-0,-.12853133,0,1,-0,.12853133,0,.99170545],[.99165099,-0,-.12895079,0,1,-0,.12895079,0,.99165099],[.9915964,-0,-.12936991,0,1,-0,.12936991,0,.9915964],[.99154167,-0,-.12978871,0,1,-0,.12978871,0,.99154167],[.99148681,-0,-.13020717,0,1,-0,.13020717,0,.99148681],[.99143181,-0,-.1306253,0,1,-0,.1306253,0,.99143181],[.99137667,-0,-.1310431,0,1,-0,.1310431,0,.99137667],[.9913214,-0,-.13146055,0,1,-0,.13146055,0,.9913214],[.991266,-0,-.13187766,0,1,-0,.13187766,0,.991266],[.99121046,-0,-.13229444,0,1,-0,.13229444,0,.99121046],[.99115479,-0,-.13271086,0,1,-0,.13271086,0,.99115479],[.99109899,-0,-.13312694,0,1,-0,.13312694,0,.99109899],[.99104306,-0,-.13354267,0,1,-0,.13354267,0,.99104306],[.990987,-0,-.13395805,0,1,-0,.13395805,0,.990987],[.99093081,-0,-.13437307,0,1,-0,.13437307,0,.99093081],[.99087449,-0,-.13478774,0,1,-0,.13478774,0,.99087449],[.99081805,-0,-.13520206,0,1,-0,.13520206,0,.99081805],[.99076147,-0,-.13561601,0,1,-0,.13561601,0,.99076147],[.99070477,-0,-.1360296,0,1,-0,.1360296,0,.99070477],[.99064795,-0,-.13644283,0,1,-0,.13644283,0,.99064795],[.99059099,-0,-.1368557,0,1,-0,.1368557,0,.99059099],[.99053392,-0,-.1372682,0,1,-0,.1372682,0,.99053392],[.99047672,-0,-.13768033,0,1,-0,.13768033,0,.99047672],[.99041939,-0,-.13809209,0,1,-0,.13809209,0,.99041939],[.99036195,-0,-.13850348,0,1,-0,.13850348,0,.99036195],[.99030438,-0,-.13891449,0,1,-0,.13891449,0,.99030438],[.99024669,-0,-.13932513,0,1,-0,.13932513,0,.99024669],[.99018888,-0,-.1397354,0,1,-0,.1397354,0,.99018888],[.99013095,-0,-.14014528,0,1,-0,.14014528,0,.99013095],[.9900729,-0,-.14055479,0,1,-0,.14055479,0,.9900729],[.99001473,-0,-.14096392,0,1,-0,.14096392,0,.99001473],[.98995645,-0,-.14137266,0,1,-0,.14137266,0,.98995645],[.98989805,-0,-.14178102,0,1,-0,.14178102,0,.98989805],[.98983953,-0,-.14218899,0,1,-0,.14218899,0,.98983953],[.98978089,-0,-.14259658,0,1,-0,.14259658,0,.98978089],[.98972214,-0,-.14300378,0,1,-0,.14300378,0,.98972214],[.98966328,-0,-.14341058,0,1,-0,.14341058,0,.98966328],[.9896043,-0,-.143817,0,1,-0,.143817,0,.9896043],[.98954521,-0,-.14422303,0,1,-0,.14422303,0,.98954521],[.989486,-0,-.14462866,0,1,-0,.14462866,0,.989486],[.98942669,-0,-.14503389,0,1,-0,.14503389,0,.98942669],[.98936726,-0,-.14543873,0,1,-0,.14543873,0,.98936726],[.98930772,-0,-.14584317,0,1,-0,.14584317,0,.98930772],[.98924807,-0,-.14624722,0,1,-0,.14624722,0,.98924807],[.98918832,-0,-.14665086,0,1,-0,.14665086,0,.98918832],[.98912845,-0,-.14705411,0,1,-0,.14705411,0,.98912845],[.98906848,-0,-.14745695,0,1,-0,.14745695,0,.98906848],[.98900839,-0,-.14785939,0,1,-0,.14785939,0,.98900839],[.9889482,-0,-.14826142,0,1,-0,.14826142,0,.9889482],[.98888791,-0,-.14866305,0,1,-0,.14866305,0,.98888791],[.98882751,-0,-.14906428,0,1,-0,.14906428,0,.98882751],[.988767,-0,-.14946509,0,1,-0,.14946509,0,.988767],[.98870639,-0,-.1498655,0,1,-0,.1498655,0,.98870639],[.98864568,-0,-.1502655,0,1,-0,.1502655,0,.98864568],[.98858486,-0,-.15066509,0,1,-0,.15066509,0,.98858486],[.98852394,-0,-.15106427,0,1,-0,.15106427,0,.98852394],[.98846292,-0,-.15146304,0,1,-0,.15146304,0,.98846292],[.9884018,-0,-.1518614,0,1,-0,.1518614,0,.9884018],[.98834058,-0,-.15225934,0,1,-0,.15225934,0,.98834058],[.98827925,-0,-.15265687,0,1,-0,.15265687,0,.98827925],[.98821783,-0,-.15305398,0,1,-0,.15305398,0,.98821783],[.98815631,-0,-.15345068,0,1,-0,.15345068,0,.98815631],[.98809469,-0,-.15384697,0,1,-0,.15384697,0,.98809469],[.98803297,-0,-.15424283,0,1,-0,.15424283,0,.98803297],[.98797115,-0,-.15463828,0,1,-0,.15463828,0,.98797115],[.98790924,-0,-.15503331,0,1,-0,.15503331,0,.98790924],[.98784724,-0,-.15542793,0,1,-0,.15542793,0,.98784724],[.98778513,-0,-.15582212,0,1,-0,.15582212,0,.98778513],[.98772293,-0,-.15621589,0,1,-0,.15621589,0,.98772293],[.98766064,-0,-.15660925,0,1,-0,.15660925,0,.98766064],[.98759826,-0,-.15700218,0,1,-0,.15700218,0,.98759826],[.98753578,-0,-.1573947,0,1,-0,.1573947,0,.98753578],[.9874732,-0,-.15778679,0,1,-0,.15778679,0,.9874732],[.98741054,-0,-.15817846,0,1,-0,.15817846,0,.98741054],[.98734779,-0,-.1585697,0,1,-0,.1585697,0,.98734779],[.98728494,-0,-.15896053,0,1,-0,.15896053,0,.98728494],[.987222,-0,-.15935093,0,1,-0,.15935093,0,.987222],[.98715898,-0,-.1597409,0,1,-0,.1597409,0,.98715898],[.98709586,-0,-.16013046,0,1,-0,.16013046,0,.98709586],[.98703266,-0,-.16051958,0,1,-0,.16051958,0,.98703266],[.98696936,-0,-.16090829,0,1,-0,.16090829,0,.98696936],[.98690598,-0,-.16129657,0,1,-0,.16129657,0,.98690598],[.98684251,-0,-.16168442,0,1,-0,.16168442,0,.98684251],[.98677896,-0,-.16207185,0,1,-0,.16207185,0,.98677896],[.98671532,-0,-.16245886,0,1,-0,.16245886,0,.98671532],[.98665159,-0,-.16284544,0,1,-0,.16284544,0,.98665159],[.98658778,-0,-.16323159,0,1,-0,.16323159,0,.98658778],[.98652388,-0,-.16361732,0,1,-0,.16361732,0,.98652388],[.9864599,-0,-.16400262,0,1,-0,.16400262,0,.9864599],[.98639584,-0,-.16438749,0,1,-0,.16438749,0,.98639584],[.98633169,-0,-.16477194,0,1,-0,.16477194,0,.98633169],[.98626746,-0,-.16515596,0,1,-0,.16515596,0,.98626746],[.98620315,-0,-.16553956,0,1,-0,.16553956,0,.98620315],[.98613876,-0,-.16592273,0,1,-0,.16592273,0,.98613876],[.98607428,-0,-.16630548,0,1,-0,.16630548,0,.98607428],[.98600973,-0,-.1666878,0,1,-0,.1666878,0,.98600973],[.98594509,-0,-.16706969,0,1,-0,.16706969,0,.98594509],[.98588037,-0,-.16745115,0,1,-0,.16745115,0,.98588037],[.98581558,-0,-.1678322,0,1,-0,.1678322,0,.98581558],[.9857507,-0,-.16821281,0,1,-0,.16821281,0,.9857507],[.98568575,-0,-.168593,0,1,-0,.168593,0,.98568575],[.98562072,-0,-.16897276,0,1,-0,.16897276,0,.98562072],[.98555561,-0,-.1693521,0,1,-0,.1693521,0,.98555561],[.98549043,-0,-.16973102,0,1,-0,.16973102,0,.98549043],[.98542517,-0,-.17010951,0,1,-0,.17010951,0,.98542517],[.98535983,-0,-.17048757,0,1,-0,.17048757,0,.98535983],[.98529441,-0,-.17086521,0,1,-0,.17086521,0,.98529441],[.98522892,-0,-.17124243,0,1,-0,.17124243,0,.98522892],[.98516336,-0,-.17161922,0,1,-0,.17161922,0,.98516336],[.98509772,-0,-.17199559,0,1,-0,.17199559,0,.98509772],[.98503201,-0,-.17237154,0,1,-0,.17237154,0,.98503201],[.98496622,-0,-.17274706,0,1,-0,.17274706,0,.98496622],[.98490036,-0,-.17312216,0,1,-0,.17312216,0,.98490036],[.98483443,-0,-.17349684,0,1,-0,.17349684,0,.98483443],[.98476842,-0,-.1738711,0,1,-0,.1738711,0,.98476842],[.98470234,-0,-.17424493,0,1,-0,.17424493,0,.98470234],[.98463619,-0,-.17461835,0,1,-0,.17461835,0,.98463619],[.98456997,-0,-.17499134,0,1,-0,.17499134,0,.98456997],[.98450368,-0,-.17536392,0,1,-0,.17536392,0,.98450368],[.98443732,-0,-.17573607,0,1,-0,.17573607,0,.98443732],[.98437088,-0,-.17610781,0,1,-0,.17610781,0,.98437088],[.98430438,-0,-.17647913,0,1,-0,.17647913,0,.98430438],[.98423781,-0,-.17685003,0,1,-0,.17685003,0,.98423781],[.98417117,-0,-.17722052,0,1,-0,.17722052,0,.98417117],[.98410446,-0,-.17759059,0,1,-0,.17759059,0,.98410446],[.98403768,-0,-.17796024,0,1,-0,.17796024,0,.98403768],[.98397083,-0,-.17832948,0,1,-0,.17832948,0,.98397083],[.98390392,-0,-.1786983,0,1,-0,.1786983,0,.98390392],[.98383693,-0,-.17906671,0,1,-0,.17906671,0,.98383693],[.98376989,-0,-.1794347,0,1,-0,.1794347,0,.98376989],[.98370277,-0,-.17980229,0,1,-0,.17980229,0,.98370277],[.98363559,-0,-.18016946,0,1,-0,.18016946,0,.98363559],[.98356834,-0,-.18053622,0,1,-0,.18053622,0,.98356834],[.98350102,-0,-.18090257,0,1,-0,.18090257,0,.98350102],[.98343364,-0,-.18126851,0,1,-0,.18126851,0,.98343364],[.9833662,-0,-.18163404,0,1,-0,.18163404,0,.9833662],[.98329869,-0,-.18199916,0,1,-0,.18199916,0,.98329869],[.98323111,-0,-.18236387,0,1,-0,.18236387,0,.98323111],[.98316347,-0,-.18272818,0,1,-0,.18272818,0,.98316347],[.98309577,-0,-.18309209,0,1,-0,.18309209,0,.98309577],[.983028,-0,-.18345559,0,1,-0,.18345559,0,.983028],[.98296017,-0,-.18381868,0,1,-0,.18381868,0,.98296017],[.98289227,-0,-.18418137,0,1,-0,.18418137,0,.98289227],[.98282432,-0,-.18454366,0,1,-0,.18454366,0,.98282432],[.9827563,-0,-.18490555,0,1,-0,.18490555,0,.9827563],[.98268821,-0,-.18526704,0,1,-0,.18526704,0,.98268821],[.98262007,-0,-.18562813,0,1,-0,.18562813,0,.98262007],[.98255186,-0,-.18598882,0,1,-0,.18598882,0,.98255186],[.98248359,-0,-.18634911,0,1,-0,.18634911,0,.98248359],[.98241526,-0,-.18670901,0,1,-0,.18670901,0,.98241526],[.98234687,-0,-.18706851,0,1,-0,.18706851,0,.98234687],[.98227842,-0,-.18742762,0,1,-0,.18742762,0,.98227842],[.9822099,-0,-.18778633,0,1,-0,.18778633,0,.9822099],[.98214133,-0,-.18814465,0,1,-0,.18814465,0,.98214133],[.98207269,-0,-.18850258,0,1,-0,.18850258,0,.98207269],[.982004,-0,-.18886012,0,1,-0,.18886012,0,.982004],[.98193524,-0,-.18921727,0,1,-0,.18921727,0,.98193524],[.98186643,-0,-.18957403,0,1,-0,.18957403,0,.98186643],[.98179756,-0,-.18993041,0,1,-0,.18993041,0,.98179756],[.98172862,-0,-.1902864,0,1,-0,.1902864,0,.98172862],[.98165963,-0,-.19064201,0,1,-0,.19064201,0,.98165963],[.98159058,-0,-.19099723,0,1,-0,.19099723,0,.98159058],[.98152146,-0,-.19135207,0,1,-0,.19135207,0,.98152146],[.9814523,-0,-.19170653,0,1,-0,.19170653,0,.9814523],[.98138307,-0,-.19206061,0,1,-0,.19206061,0,.98138307],[.98131378,-0,-.19241431,0,1,-0,.19241431,0,.98131378],[.98124444,-0,-.19276763,0,1,-0,.19276763,0,.98124444],[.98117503,-0,-.19312057,0,1,-0,.19312057,0,.98117503],[.98110557,-0,-.19347315,0,1,-0,.19347315,0,.98110557],[.98103605,-0,-.19382534,0,1,-0,.19382534,0,.98103605],[.98096648,-0,-.19417717,0,1,-0,.19417717,0,.98096648],[.98089684,-0,-.19452862,0,1,-0,.19452862,0,.98089684],[.98082715,-0,-.19487971,0,1,-0,.19487971,0,.98082715],[.9807574,-0,-.19523042,0,1,-0,.19523042,0,.9807574],[.9806876,-0,-.19558077,0,1,-0,.19558077,0,.9806876],[.98061773,-0,-.19593075,0,1,-0,.19593075,0,.98061773],[.98054781,-0,-.19628037,0,1,-0,.19628037,0,.98054781],[.98047784,-0,-.19662962,0,1,-0,.19662962,0,.98047784],[.98040781,-0,-.19697851,0,1,-0,.19697851,0,.98040781],[.98033772,-0,-.19732704,0,1,-0,.19732704,0,.98033772],[.98026757,-0,-.19767522,0,1,-0,.19767522,0,.98026757],[.98019737,-0,-.19802303,0,1,-0,.19802303,0,.98019737],[.98012711,-0,-.19837049,0,1,-0,.19837049,0,.98012711],[.98005679,-0,-.19871759,0,1,-0,.19871759,0,.98005679],[.97998642,-0,-.19906434,0,1,-0,.19906434,0,.97998642],[.979916,-0,-.19941074,0,1,-0,.19941074,0,.979916],[.97984551,-0,-.19975678,0,1,-0,.19975678,0,.97984551],[.97977497,-0,-.20010248,0,1,-0,.20010248,0,.97977497],[.97970438,-0,-.20044783,0,1,-0,.20044783,0,.97970438],[.97963373,-0,-.20079283,0,1,-0,.20079283,0,.97963373],[.97956302,-0,-.20113749,0,1,-0,.20113749,0,.97956302],[.97949226,-0,-.2014818,0,1,-0,.2014818,0,.97949226],[.97942144,-0,-.20182577,0,1,-0,.20182577,0,.97942144],[.97935057,-0,-.2021694,0,1,-0,.2021694,0,.97935057],[.97927964,-0,-.2025127,0,1,-0,.2025127,0,.97927964],[.97920865,-0,-.20285565,0,1,-0,.20285565,0,.97920865],[.97913761,-0,-.20319827,0,1,-0,.20319827,0,.97913761],[.97906652,-0,-.20354055,0,1,-0,.20354055,0,.97906652],[.97899536,-0,-.2038825,0,1,-0,.2038825,0,.97899536],[.97892416,-0,-.20422412,0,1,-0,.20422412,0,.97892416],[.9788529,-0,-.20456541,0,1,-0,.20456541,0,.9788529],[.97878158,-0,-.20490638,0,1,-0,.20490638,0,.97878158],[.9787102,-0,-.20524701,0,1,-0,.20524701,0,.9787102],[.97863878,-0,-.20558732,0,1,-0,.20558732,0,.97863878],[.97856729,-0,-.20592731,0,1,-0,.20592731,0,.97856729],[.97849575,-0,-.20626697,0,1,-0,.20626697,0,.97849575],[.97842416,-0,-.20660632,0,1,-0,.20660632,0,.97842416],[.97835251,-0,-.20694534,0,1,-0,.20694534,0,.97835251],[.9782808,-0,-.20728405,0,1,-0,.20728405,0,.9782808],[.97820904,-0,-.20762244,0,1,-0,.20762244,0,.97820904],[.97813722,-0,-.20796052,0,1,-0,.20796052,0,.97813722],[.97806535,-0,-.20829828,0,1,-0,.20829828,0,.97806535],[.97799342,-0,-.20863574,0,1,-0,.20863574,0,.97799342],[.97792144,-0,-.20897288,0,1,-0,.20897288,0,.97792144],[.9778494,-0,-.20930972,0,1,-0,.20930972,0,.9778494],[.9777773,-0,-.20964625,0,1,-0,.20964625,0,.9777773],[.97770515,-0,-.20998248,0,1,-0,.20998248,0,.97770515],[.97763294,-0,-.21031841,0,1,-0,.21031841,0,.97763294],[.97756068,-0,-.21065403,0,1,-0,.21065403,0,.97756068],[.97748836,-0,-.21098936,0,1,-0,.21098936,0,.97748836],[.97741598,-0,-.21132438,0,1,-0,.21132438,0,.97741598],[.97734355,-0,-.21165911,0,1,-0,.21165911,0,.97734355],[.97727107,-0,-.21199355,0,1,-0,.21199355,0,.97727107],[.97719852,-0,-.21232769,0,1,-0,.21232769,0,.97719852],[.97712592,-0,-.21266155,0,1,-0,.21266155,0,.97712592],[.97705327,-0,-.21299511,0,1,-0,.21299511,0,.97705327],[.97698055,-0,-.21332838,0,1,-0,.21332838,0,.97698055],[.97690778,-0,-.21366137,0,1,-0,.21366137,0,.97690778],[.97683496,-0,-.21399408,0,1,-0,.21399408,0,.97683496],[.97676208,-0,-.2143265,0,1,-0,.2143265,0,.97676208],[.97668914,-0,-.21465864,0,1,-0,.21465864,0,.97668914],[.97661614,-0,-.2149905,0,1,-0,.2149905,0,.97661614],[.97654309,-0,-.21532208,0,1,-0,.21532208,0,.97654309],[.97646998,-0,-.21565339,0,1,-0,.21565339,0,.97646998],[.97639681,-0,-.21598442,0,1,-0,.21598442,0,.97639681],[.97632359,-0,-.21631518,0,1,-0,.21631518,0,.97632359],[.9762503,-0,-.21664566,0,1,-0,.21664566,0,.9762503],[.97617697,-0,-.21697588,0,1,-0,.21697588,0,.97617697],[.97610357,-0,-.21730583,0,1,-0,.21730583,0,.97610357],[.97603011,-0,-.21763551,0,1,-0,.21763551,0,.97603011],[.9759566,-0,-.21796493,0,1,-0,.21796493,0,.9759566],[.97588303,-0,-.21829409,0,1,-0,.21829409,0,.97588303],[.9758094,-0,-.21862298,0,1,-0,.21862298,0,.9758094],[.97573572,-0,-.21895161,0,1,-0,.21895161,0,.97573572],[.97566197,-0,-.21927999,0,1,-0,.21927999,0,.97566197],[.97558817,-0,-.21960811,0,1,-0,.21960811,0,.97558817],[.97551431,-0,-.21993597,0,1,-0,.21993597,0,.97551431],[.97544039,-0,-.22026359,0,1,-0,.22026359,0,.97544039],[.97536641,-0,-.22059095,0,1,-0,.22059095,0,.97536641],[.97529237,-0,-.22091806,0,1,-0,.22091806,0,.97529237],[.97521828,-0,-.22124492,0,1,-0,.22124492,0,.97521828],[.97514412,-0,-.22157153,0,1,-0,.22157153,0,.97514412],[.97506991,-0,-.2218979,0,1,-0,.2218979,0,.97506991],[.97499563,-0,-.22222403,0,1,-0,.22222403,0,.97499563],[.9749213,-0,-.22254991,0,1,-0,.22254991,0,.9749213],[.97484691,-0,-.22287555,0,1,-0,.22287555,0,.97484691],[.97477245,-0,-.22320096,0,1,-0,.22320096,0,.97477245],[.97469794,-0,-.22352612,0,1,-0,.22352612,0,.97469794],[.97462337,-0,-.22385105,0,1,-0,.22385105,0,.97462337],[.97454873,-0,-.22417575,0,1,-0,.22417575,0,.97454873],[.97447404,-0,-.22450021,0,1,-0,.22450021,0,.97447404],[.97439929,-0,-.22482445,0,1,-0,.22482445,0,.97439929],[.97432447,-0,-.22514845,0,1,-0,.22514845,0,.97432447],[.9742496,-0,-.22547223,0,1,-0,.22547223,0,.9742496],[.97417466,-0,-.22579577,0,1,-0,.22579577,0,.97417466],[.97409966,-0,-.2261191,0,1,-0,.2261191,0,.97409966],[.97402461,-0,-.2264422,0,1,-0,.2264422,0,.97402461],[.97394949,-0,-.22676507,0,1,-0,.22676507,0,.97394949],[.97387431,-0,-.22708773,0,1,-0,.22708773,0,.97387431],[.97379906,-0,-.22741017,0,1,-0,.22741017,0,.97379906],[.97372376,-0,-.22773239,0,1,-0,.22773239,0,.97372376],[.97364839,-0,-.22805439,0,1,-0,.22805439,0,.97364839],[.97357297,-0,-.22837618,0,1,-0,.22837618,0,.97357297],[.97349748,-0,-.22869775,0,1,-0,.22869775,0,.97349748],[.97342193,-0,-.22901912,0,1,-0,.22901912,0,.97342193],[.97334631,-0,-.22934027,0,1,-0,.22934027,0,.97334631],[.97327064,-0,-.22966121,0,1,-0,.22966121,0,.97327064],[.9731949,-0,-.22998194,0,1,-0,.22998194,0,.9731949],[.9731191,-0,-.23030247,0,1,-0,.23030247,0,.9731191],[.97304323,-0,-.23062279,0,1,-0,.23062279,0,.97304323],[.9729673,-0,-.23094291,0,1,-0,.23094291,0,.9729673],[.97289131,-0,-.23126282,0,1,-0,.23126282,0,.97289131],[.97281526,-0,-.23158253,0,1,-0,.23158253,0,.97281526],[.97273914,-0,-.23190204,0,1,-0,.23190204,0,.97273914],[.97266296,-0,-.23222135,0,1,-0,.23222135,0,.97266296],[.97258672,-0,-.23254047,0,1,-0,.23254047,0,.97258672],[.97251042,-0,-.23285938,0,1,-0,.23285938,0,.97251042],[.97243404,-0,-.2331781,0,1,-0,.2331781,0,.97243404],[.97235761,-0,-.23349663,0,1,-0,.23349663,0,.97235761],[.97228111,-0,-.23381496,0,1,-0,.23381496,0,.97228111],[.97220455,-0,-.2341331,0,1,-0,.2341331,0,.97220455],[.97212793,-0,-.23445105,0,1,-0,.23445105,0,.97212793],[.97205124,-0,-.23476881,0,1,-0,.23476881,0,.97205124],[.97197448,-0,-.23508638,0,1,-0,.23508638,0,.97197448],[.97189766,-0,-.23540376,0,1,-0,.23540376,0,.97189766],[.97182078,-0,-.23572096,0,1,-0,.23572096,0,.97182078],[.97174383,-0,-.23603796,0,1,-0,.23603796,0,.97174383],[.97166682,-0,-.23635478,0,1,-0,.23635478,0,.97166682],[.97158975,-0,-.23667142,0,1,-0,.23667142,0,.97158975],[.97151261,-0,-.23698788,0,1,-0,.23698788,0,.97151261],[.9714354,-0,-.23730415,0,1,-0,.23730415,0,.9714354],[.97135813,-0,-.23762024,0,1,-0,.23762024,0,.97135813],[.9712808,-0,-.23793614,0,1,-0,.23793614,0,.9712808],[.9712034,-0,-.23825187,0,1,-0,.23825187,0,.9712034],[.97112594,-0,-.23856742,0,1,-0,.23856742,0,.97112594],[.97104841,-0,-.23888279,0,1,-0,.23888279,0,.97104841],[.97097082,-0,-.23919798,0,1,-0,.23919798,0,.97097082],[.97089316,-0,-.23951299,0,1,-0,.23951299,0,.97089316],[.97081544,-0,-.23982783,0,1,-0,.23982783,0,.97081544],[.97073765,-0,-.24014249,0,1,-0,.24014249,0,.97073765],[.9706598,-0,-.24045698,0,1,-0,.24045698,0,.9706598],[.97058188,-0,-.24077128,0,1,-0,.24077128,0,.97058188],[.9705039,-0,-.24108542,0,1,-0,.24108542,0,.9705039],[.97042585,-0,-.24139938,0,1,-0,.24139938,0,.97042585],[.97034774,-0,-.24171317,0,1,-0,.24171317,0,.97034774],[.97026957,-0,-.24202678,0,1,-0,.24202678,0,.97026957],[.97019133,-0,-.24234022,0,1,-0,.24234022,0,.97019133],[.97011303,-0,-.24265348,0,1,-0,.24265348,0,.97011303],[.97003466,-0,-.24296658,0,1,-0,.24296658,0,.97003466],[.96995623,-0,-.2432795,0,1,-0,.2432795,0,.96995623],[.96987773,-0,-.24359225,0,1,-0,.24359225,0,.96987773],[.96979917,-0,-.24390483,0,1,-0,.24390483,0,.96979917],[.96972055,-0,-.24421723,0,1,-0,.24421723,0,.96972055],[.96964186,-0,-.24452947,0,1,-0,.24452947,0,.96964186],[.96956311,-0,-.24484153,0,1,-0,.24484153,0,.96956311],[.9694843,-0,-.24515342,0,1,-0,.24515342,0,.9694843],[.96940542,-0,-.24546514,0,1,-0,.24546514,0,.96940542],[.96932648,-0,-.24577668,0,1,-0,.24577668,0,.96932648],[.96924747,-0,-.24608806,0,1,-0,.24608806,0,.96924747],[.96916841,-0,-.24639926,0,1,-0,.24639926,0,.96916841],[.96908928,-0,-.24671029,0,1,-0,.24671029,0,.96908928],[.96901009,-0,-.24702115,0,1,-0,.24702115,0,.96901009],[.96893084,-0,-.24733183,0,1,-0,.24733183,0,.96893084],[.96885152,-0,-.24764234,0,1,-0,.24764234,0,.96885152],[.96877215,-0,-.24795268,0,1,-0,.24795268,0,.96877215],[.96869271,-0,-.24826284,0,1,-0,.24826284,0,.96869271],[.96861321,-0,-.24857283,0,1,-0,.24857283,0,.96861321],[.96853365,-0,-.24888264,0,1,-0,.24888264,0,.96853365],[.96845403,-0,-.24919227,0,1,-0,.24919227,0,.96845403],[.96837435,-0,-.24950173,0,1,-0,.24950173,0,.96837435],[.96829461,-0,-.24981101,0,1,-0,.24981101,0,.96829461],[.96821482,-0,-.25012011,0,1,-0,.25012011,0,.96821482],[.96813496,-0,-.25042903,0,1,-0,.25042903,0,.96813496],[.96805504,-0,-.25073778,0,1,-0,.25073778,0,.96805504],[.96797507,-0,-.25104634,0,1,-0,.25104634,0,.96797507],[.96789504,-0,-.25135471,0,1,-0,.25135471,0,.96789504],[.96781495,-0,-.25166291,0,1,-0,.25166291,0,.96781495],[.96773481,-0,-.25197092,0,1,-0,.25197092,0,.96773481],[.96765461,-0,-.25227874,0,1,-0,.25227874,0,.96765461],[.96757435,-0,-.25258638,0,1,-0,.25258638,0,.96757435],[.96749404,-0,-.25289383,0,1,-0,.25289383,0,.96749404],[.96741367,-0,-.25320108,0,1,-0,.25320108,0,.96741367],[.96733325,-0,-.25350815,0,1,-0,.25350815,0,.96733325],[.96725278,-0,-.25381502,0,1,-0,.25381502,0,.96725278],[.96717225,-0,-.2541217,0,1,-0,.2541217,0,.96717225],[.96709167,-0,-.25442818,0,1,-0,.25442818,0,.96709167],[.96701104,-0,-.25473446,0,1,-0,.25473446,0,.96701104],[.96693036,-0,-.25504054,0,1,-0,.25504054,0,.96693036],[.96684963,-0,-.25534642,0,1,-0,.25534642,0,.96684963],[.96676885,-0,-.2556521,0,1,-0,.2556521,0,.96676885],[.96668802,-0,-.25595757,0,1,-0,.25595757,0,.96668802],[.96660714,-0,-.25626283,0,1,-0,.25626283,0,.96660714],[.96652621,-0,-.25656788,0,1,-0,.25656788,0,.96652621],[.96644524,-0,-.25687271,0,1,-0,.25687271,0,.96644524],[.96636423,-0,-.25717733,0,1,-0,.25717733,0,.96636423],[.96628316,-0,-.25748174,0,1,-0,.25748174,0,.96628316],[.96620206,-0,-.25778592,0,1,-0,.25778592,0,.96620206],[.96612091,-0,-.25808988,0,1,-0,.25808988,0,.96612091],[.96603972,-0,-.25839361,0,1,-0,.25839361,0,.96603972],[.96595849,-0,-.25869711,0,1,-0,.25869711,0,.96595849],[.96587722,-0,-.25900038,0,1,-0,.25900038,0,.96587722],[.96579591,-0,-.25930342,0,1,-0,.25930342,0,.96579591],[.96571456,-0,-.25960622,0,1,-0,.25960622,0,.96571456],[.96563318,-0,-.25990877,0,1,-0,.25990877,0,.96563318],[.96555176,-0,-.26021108,0,1,-0,.26021108,0,.96555176],[.9654703,-0,-.26051314,0,1,-0,.26051314,0,.9654703],[.96538881,-0,-.26081496,0,1,-0,.26081496,0,.96538881],[.96530729,-0,-.26111651,0,1,-0,.26111651,0,.96530729],[.96522574,-0,-.26141781,0,1,-0,.26141781,0,.96522574],[.96514416,-0,-.26171884,0,1,-0,.26171884,0,.96514416],[.96506255,-0,-.2620196,0,1,-0,.2620196,0,.96506255],[.96498091,-0,-.2623201,0,1,-0,.2623201,0,.96498091],[.96489925,-0,-.26262032,0,1,-0,.26262032,0,.96489925],[.96481757,-0,-.26292026,0,1,-0,.26292026,0,.96481757],[.96473586,-0,-.26321991,0,1,-0,.26321991,0,.96473586],[.96465413,-0,-.26351928,0,1,-0,.26351928,0,.96465413],[.96457238,-0,-.26381836,0,1,-0,.26381836,0,.96457238],[.96449061,-0,-.26411713,0,1,-0,.26411713,0,.96449061],[.96440883,-0,-.26441561,0,1,-0,.26441561,0,.96440883],[.96432703,-0,-.26471377,0,1,-0,.26471377,0,.96432703],[.96424522,-0,-.26501162,0,1,-0,.26501162,0,.96424522],[.96416339,-0,-.26530916,0,1,-0,.26530916,0,.96416339],[.96408156,-0,-.26560637,0,1,-0,.26560637,0,.96408156],[.96399972,-0,-.26590325,0,1,-0,.26590325,0,.96399972],[.96391787,-0,-.2661998,0,1,-0,.2661998,0,.96391787],[.96383602,-0,-.26649601,0,1,-0,.26649601,0,.96383602],[.96375417,-0,-.26679187,0,1,-0,.26679187,0,.96375417],[.96367232,-0,-.26708738,0,1,-0,.26708738,0,.96367232],[.96359046,-0,-.26738253,0,1,-0,.26738253,0,.96359046],[.96350862,-0,-.26767732,0,1,-0,.26767732,0,.96350862],[.96342678,-0,-.26797173,0,1,-0,.26797173,0,.96342678],[.96334494,-0,-.26826577,0,1,-0,.26826577,0,.96334494],[.96326312,-0,-.26855942,0,1,-0,.26855942,0,.96326312],[.96318131,-0,-.26885268,0,1,-0,.26885268,0,.96318131],[.96309951,-0,-.26914554,0,1,-0,.26914554,0,.96309951],[.96301774,-0,-.269438,0,1,-0,.269438,0,.96301774],[.96293598,-0,-.26973005,0,1,-0,.26973005,0,.96293598],[.96285425,-0,-.27002167,0,1,-0,.27002167,0,.96285425],[.96277254,-0,-.27031287,0,1,-0,.27031287,0,.96277254],[.96269085,-0,-.27060363,0,1,-0,.27060363,0,.96269085],[.9626092,-0,-.27089394,0,1,-0,.27089394,0,.9626092],[.96252758,-0,-.27118381,0,1,-0,.27118381,0,.96252758],[.962446,-0,-.27147321,0,1,-0,.27147321,0,.962446],[.96236445,-0,-.27176214,0,1,-0,.27176214,0,.96236445],[.96228295,-0,-.2720506,0,1,-0,.2720506,0,.96228295],[.96220149,-0,-.27233857,0,1,-0,.27233857,0,.96220149],[.96212008,-0,-.27262604,0,1,-0,.27262604,0,.96212008],[.96203871,-0,-.27291301,0,1,-0,.27291301,0,.96203871],[.96195741,-0,-.27319947,0,1,-0,.27319947,0,.96195741],[.96187615,-0,-.2734854,0,1,-0,.2734854,0,.96187615],[.96179496,-0,-.2737708,0,1,-0,.2737708,0,.96179496],[.96171383,-0,-.27405566,0,1,-0,.27405566,0,.96171383],[.96163277,-0,-.27433996,0,1,-0,.27433996,0,.96163277],[.96155178,-0,-.2746237,0,1,-0,.2746237,0,.96155178],[.96147086,-0,-.27490686,0,1,-0,.27490686,0,.96147086],[.96139002,-0,-.27518944,0,1,-0,.27518944,0,.96139002],[.96130926,-0,-.27547143,0,1,-0,.27547143,0,.96130926],[.96122859,-0,-.2757528,0,1,-0,.2757528,0,.96122859],[.961148,-0,-.27603356,0,1,-0,.27603356,0,.961148],[.9610675,-0,-.27631369,0,1,-0,.27631369,0,.9610675],[.96098711,-0,-.27659317,0,1,-0,.27659317,0,.96098711],[.96090681,-0,-.276872,0,1,-0,.276872,0,.96090681],[.96082661,-0,-.27715017,0,1,-0,.27715017,0,.96082661],[.96074653,-0,-.27742766,0,1,-0,.27742766,0,.96074653],[.96066656,-0,-.27770445,0,1,-0,.27770445,0,.96066656],[.9605867,-0,-.27798054,0,1,-0,.27798054,0,.9605867],[.96050697,-0,-.27825592,0,1,-0,.27825592,0,.96050697],[.96042737,-0,-.27853056,0,1,-0,.27853056,0,.96042737],[.96034789,-0,-.27880447,0,1,-0,.27880447,0,.96034789],[.96026855,-0,-.27907761,0,1,-0,.27907761,0,.96026855],[.96018935,-0,-.27934998,0,1,-0,.27934998,0,.96018935],[.9601103,-0,-.27962156,0,1,-0,.27962156,0,.9601103],[.96003139,-0,-.27989235,0,1,-0,.27989235,0,.96003139],[.95995264,-0,-.28016232,0,1,-0,.28016232,0,.95995264],[.95987405,-0,-.28043146,0,1,-0,.28043146,0,.95987405],[.95979563,-0,-.28069975,0,1,-0,.28069975,0,.95979563],[.95971738,-0,-.28096718,0,1,-0,.28096718,0,.95971738],[.9596393,-0,-.28123373,0,1,-0,.28123373,0,.9596393],[.95956141,-0,-.28149939,0,1,-0,.28149939,0,.95956141],[.9594837,-0,-.28176414,0,1,-0,.28176414,0,.9594837],[.95940618,-0,-.28202797,0,1,-0,.28202797,0,.95940618],[.95932887,-0,-.28229085,0,1,-0,.28229085,0,.95932887],[.95925176,-0,-.28255277,0,1,-0,.28255277,0,.95925176],[.95917486,-0,-.28281371,0,1,-0,.28281371,0,.95917486],[.95909817,-0,-.28307366,0,1,-0,.28307366,0,.95909817],[.95902171,-0,-.28333259,0,1,-0,.28333259,0,.95902171],[.95894548,-0,-.2835905,-0,1,-0,.2835905,0,.95894548],[.95886948,-0,-.28384735,-0,1,-0,.28384735,0,.95886948],[.95879373,-0,-.28410313,-0,1,-0,.28410313,0,.95879373],[.95871822,-0,-.28435782,-0,1,-0,.28435782,0,.95871822],[.95864297,-0,-.28461141,-0,1,-0,.28461141,0,.95864297],[.95856798,-0,-.28486387,-0,1,-0,.28486387,0,.95856798],[.95849326,-0,-.28511518,-0,1,-0,.28511518,0,.95849326],[.95841882,-0,-.28536532,-0,1,-0,.28536532,0,.95841882],[.95834466,-0,-.28561428,-0,1,-0,.28561428,0,.95834466],[.95827079,-0,-.28586202,-0,1,-0,.28586202,0,.95827079],[.95819722,-0,-.28610853,-0,1,-0,.28610853,0,.95819722],[.95812395,-0,-.28635379,-0,1,-0,.28635379,0,.95812395],[.958051,-0,-.28659778,-0,1,-0,.28659778,0,.958051],[.95797836,-0,-.28684047,-0,1,-0,.28684047,0,.95797836],[.95790606,-0,-.28708183,-0,1,-0,.28708183,0,.95790606],[.95783409,-0,-.28732186,-0,1,-0,.28732186,0,.95783409],[.95776247,-0,-.28756052,-0,1,-0,.28756052,0,.95776247],[.9576912,-0,-.28779779,-0,1,-0,.28779779,0,.9576912],[.95762029,-0,-.28803365,-0,1,-0,.28803365,0,.95762029],[.95754975,-0,-.28826807,-0,1,-0,.28826807,0,.95754975],[.95747959,-0,-.28850102,-0,1,-0,.28850102,0,.95747959],[.95740981,-0,-.28873249,-0,1,-0,.28873249,0,.95740981],[.95734043,-0,-.28896245,-0,1,-0,.28896245,0,.95734043],[.95727146,-0,-.28919087,-0,1,-0,.28919087,0,.95727146],[.95720289,-0,-.28941773,-0,1,-0,.28941773,0,.95720289],[.95713475,-0,-.28964299,-0,1,-0,.28964299,0,.95713475],[.95706705,-0,-.28986664,-0,1,-0,.28986664,0,.95706705],[.95699978,0,-.29008864,-0,1,-0,.29008864,0,.95699978],[.95693297,0,-.29030897,-0,1,-0,.29030897,0,.95693297],[.95686661,0,-.2905276,-0,1,-0,.2905276,0,.95686661],[.95680073,0,-.29074451,-0,1,-0,.29074451,0,.95680073],[.95673532,0,-.29095966,-0,1,-0,.29095966,0,.95673532],[.95667041,0,-.29117302,-0,1,-0,.29117302,0,.95667041],[.956606,0,-.29138457,-0,1,-0,.29138457,0,.956606],[.9565421,0,-.29159427,-0,1,-0,.29159427,0,.9565421],[.95647871,0,-.2918021,-0,1,-0,.2918021,0,.95647871],[.95641587,0,-.29200803,-0,1,-0,.29200803,0,.95641587],[.95635356,0,-.29221202,-0,1,-0,.29221202,0,.95635356],[.95629181,0,-.29241405,-0,1,-0,.29241405,0,.95629181],[.95623062,0,-.29261408,-0,1,-0,.29261408,0,.95623062],[.95617001,0,-.29281208,-0,1,-0,.29281208,0,.95617001],[.95610998,0,-.29300802,-0,1,-0,.29300802,0,.95610998]];return a}function Oi(){var a=[[0,0,0,0,0,0,0,0,0],[1,2e-8,72e-8,-2e-8,1,18e-8,-72e-8,-18e-8,1],[1,5e-8,215e-8,-5e-8,1,55e-8,-215e-8,-55e-8,1],[1,1e-7,428e-8,-1e-7,1,11e-7,-428e-8,-11e-7,1],[1,14e-8,711e-8,-14e-8,1,182e-8,-711e-8,-182e-8,1],[1,18e-8,1063e-8,-18e-8,1,273e-8,-1063e-8,-273e-8,1],[1,21e-8,1483e-8,-21e-8,1,381e-8,-1483e-8,-381e-8,1],[1,23e-8,197e-7,-23e-8,1,506e-8,-197e-7,-506e-8,1],[1,22e-8,2524e-8,-22e-8,1,648e-8,-2524e-8,-648e-8,1],[1,19e-8,3144e-8,-19e-8,1,807e-8,-3144e-8,-807e-8,1],[1,12e-8,3829e-8,-12e-8,1,983e-8,-3829e-8,-983e-8,1],[1,2e-8,4579e-8,-2e-8,1,1176e-8,-4579e-8,-1176e-8,1],[1,-13e-8,5392e-8,13e-8,1,1385e-8,-5392e-8,-1385e-8,1],[1,-33e-8,6268e-8,33e-8,1,1611e-8,-6268e-8,-1611e-8,1],[1,-58e-8,7206e-8,58e-8,1,1852e-8,-7206e-8,-1852e-8,1],[1,-9e-7,8205e-8,9e-7,1,2109e-8,-8205e-8,-2109e-8,1],[1,-129e-8,9265e-8,129e-8,1,2382e-8,-9265e-8,-2382e-8,1],[.99999999,-175e-8,10384e-8,175e-8,1,2671e-8,-10384e-8,-2671e-8,.99999999],[.99999999,-229e-8,11563e-8,229e-8,1,2975e-8,-11563e-8,-2975e-8,.99999999],[.99999999,-292e-8,12799e-8,292e-8,1,3294e-8,-12799e-8,-3294e-8,.99999999],[.99999999,-364e-8,14094e-8,363e-8,1,3627e-8,-14094e-8,-3627e-8,.99999999],[.99999999,-446e-8,15445e-8,445e-8,1,3976e-8,-15445e-8,-3976e-8,.99999999],[.99999999,-538e-8,16851e-8,537e-8,1,4339e-8,-16851e-8,-4339e-8,.99999998],[.99999998,-641e-8,18313e-8,64e-7,1,4717e-8,-18313e-8,-4717e-8,.99999998],[.99999998,-756e-8,19829e-8,755e-8,1,5109e-8,-19829e-8,-5109e-8,.99999998],[.99999998,-883e-8,21399e-8,882e-8,1,5515e-8,-21399e-8,-5515e-8,.99999998],[.99999997,-1023e-8,23021e-8,1022e-8,1,5935e-8,-23021e-8,-5935e-8,.99999997],[.99999997,-1176e-8,24696e-8,1175e-8,1,6368e-8,-24696e-8,-6368e-8,.99999997],[.99999997,-1344e-8,26421e-8,1342e-8,1,6815e-8,-26421e-8,-6815e-8,.99999996],[.99999996,-1525e-8,28197e-8,1523e-8,1,7276e-8,-28197e-8,-7275e-8,.99999996],[.99999995,-1722e-8,30022e-8,172e-7,1,7749e-8,-30022e-8,-7748e-8,.99999995],[.99999995,-1935e-8,31896e-8,1933e-8,1,8235e-8,-31897e-8,-8235e-8,.99999995],[.99999994,-2164e-8,33818e-8,2161e-8,1,8734e-8,-33819e-8,-8734e-8,.99999994],[.99999994,-2411e-8,35787e-8,2407e-8,1,9246e-8,-35788e-8,-9245e-8,.99999993],[.99999993,-2674e-8,37803e-8,2671e-8,.99999999,977e-7,-37803e-8,-9769e-8,.99999992],[.99999992,-2956e-8,39864e-8,2952e-8,.99999999,10306e-8,-39864e-8,-10305e-8,.99999992],[.99999991,-3257e-8,41969e-8,3252e-8,.99999999,10855e-8,-4197e-7,-10853e-8,.99999991],[.9999999,-3576e-8,44119e-8,3571e-8,.99999999,11415e-8,-44119e-8,-11413e-8,.9999999],[.99999989,-3916e-8,46311e-8,3911e-8,.99999999,11986e-8,-46312e-8,-11985e-8,.99999989],[.99999988,-4277e-8,48546e-8,427e-7,.99999999,1257e-7,-48546e-8,-12568e-8,.99999987],[.99999987,-4658e-8,50822e-8,4651e-8,.99999999,13164e-8,-50822e-8,-13162e-8,.99999986],[.99999986,-5061e-8,53138e-8,5054e-8,.99999999,1377e-7,-53139e-8,-13767e-8,.99999985],[.99999984,-5486e-8,55494e-8,5478e-8,.99999999,14387e-8,-55495e-8,-14384e-8,.99999984],[.99999983,-5934e-8,57889e-8,5926e-8,.99999999,15014e-8,-5789e-7,-15011e-8,.99999982],[.99999982,-6406e-8,60322e-8,6396e-8,.99999999,15652e-8,-60323e-8,-15648e-8,.99999981],[.9999998,-6901e-8,62793e-8,6891e-8,.99999998,16301e-8,-62794e-8,-16296e-8,.99999979],[.99999978,-7421e-8,65299e-8,741e-7,.99999998,16959e-8,-65301e-8,-16954e-8,.99999977],[.99999977,-7967e-8,67841e-8,7955e-8,.99999998,17628e-8,-67843e-8,-17623e-8,.99999975],[.99999975,-8538e-8,70418e-8,8525e-8,.99999998,18307e-8,-7042e-7,-18301e-8,.99999974],[.99999973,-9135e-8,73029e-8,9121e-8,.99999998,18995e-8,-7303e-7,-18988e-8,.99999972],[.99999971,-9759e-8,75672e-8,9744e-8,.99999998,19693e-8,-75674e-8,-19685e-8,.99999969],[.99999969,-10411e-8,78348e-8,10395e-8,.99999997,204e-6,-7835e-7,-20392e-8,.99999967],[.99999967,-1109e-7,81054e-8,11073e-8,.99999997,21116e-8,-81057e-8,-21107e-8,.99999965],[.99999964,-11798e-8,83791e-8,1178e-7,.99999997,21842e-8,-83794e-8,-21832e-8,.99999963],[.99999962,-12535e-8,86558e-8,12516e-8,.99999997,22576e-8,-86561e-8,-22565e-8,.9999996],[.99999959,-13302e-8,89353e-8,13282e-8,.99999996,23319e-8,-89356e-8,-23307e-8,.99999957],[.99999957,-141e-6,92176e-8,14077e-8,.99999996,2407e-7,-92179e-8,-24057e-8,.99999955],[.99999954,-14927e-8,95025e-8,14904e-8,.99999996,2483e-7,-95029e-8,-24816e-8,.99999952],[.99999951,-15787e-8,97901e-8,15762e-8,.99999995,25598e-8,-97905e-8,-25583e-8,.99999949],[.99999948,-16678e-8,.00100802,16651e-8,.99999995,26374e-8,-.00100806,-26357e-8,.99999946],[.99999945,-17601e-8,.00103727,17573e-8,.99999995,27158e-8,-.00103731,-27139e-8,.99999943],[.99999941,-18558e-8,.00106675,18528e-8,.99999994,27949e-8,-.0010668,-27929e-8,.99999939],[.99999938,-19548e-8,.00109645,19517e-8,.99999994,28748e-8,-.00109651,-28727e-8,.99999936],[.99999934,-20572e-8,.00112637,20539e-8,.99999994,29554e-8,-.00112644,-29531e-8,.99999932],[.99999931,-21631e-8,.0011565,21596e-8,.99999993,30368e-8,-.00115657,-30343e-8,.99999929],[.99999927,-22725e-8,.00118683,22688e-8,.99999993,31188e-8,-.0011869,-31161e-8,.99999925],[.99999923,-23854e-8,.00121734,23815e-8,.99999992,32015e-8,-.00121741,-31986e-8,.99999921],[.99999919,-2502e-7,.00124803,24979e-8,.99999991,32849e-8,-.00124811,-32818e-8,.99999917],[.99999915,-26222e-8,.00127889,26179e-8,.99999991,3369e-7,-.00127898,-33656e-8,.99999913],[.9999991,-27462e-8,.00130991,27417e-8,.9999999,34537e-8,-.00131001,-34501e-8,.99999908],[.99999906,-28739e-8,.00134108,28692e-8,.9999999,3539e-7,-.00134119,-35351e-8,.99999904],[.99999901,-30055e-8,.0013724,30005e-8,.99999989,36249e-8,-.00137251,-36208e-8,.99999899],[.99999897,-31409e-8,.00140385,31357e-8,.99999988,37114e-8,-.00140396,-3707e-7,.99999895],[.99999892,-32803e-8,.00143542,32748e-8,.99999987,37985e-8,-.00143554,-37938e-8,.9999989],[.99999887,-34236e-8,.00146711,34179e-8,.99999987,38861e-8,-.00146724,-38811e-8,.99999885],[.99999881,-35709e-8,.0014989,3565e-7,.99999986,39743e-8,-.00149904,-3969e-7,.9999988],[.99999876,-37224e-8,.00153079,37162e-8,.99999985,4063e-7,-.00153094,-40573e-8,.99999875],[.9999987,-38779e-8,.00156276,38714e-8,.99999984,41523e-8,-.00156292,-41462e-8,.99999869],[.99999865,-40376e-8,.00159481,40309e-8,.99999983,4242e-7,-.00159498,-42356e-8,.99999864],[.99999859,-42016e-8,.00162693,41945e-8,.99999982,43322e-8,-.00162711,-43254e-8,.99999858],[.99999853,-43698e-8,.0016591,43624e-8,.99999981,44229e-8,-.00165929,-44157e-8,.99999853],[.99999847,-45423e-8,.00169132,45347e-8,.9999998,4514e-7,-.00169153,-45064e-8,.99999847],[.9999984,-47192e-8,.00172359,47112e-8,.99999978,46056e-8,-.0017238,-45975e-8,.99999841],[.99999834,-49004e-8,.00175588,48922e-8,.99999977,46976e-8,-.00175611,-4689e-7,.99999835],[.99999827,-50862e-8,.00178819,50776e-8,.99999976,47901e-8,-.00178843,-4781e-7,.99999829],[.9999982,-52764e-8,.00182051,52675e-8,.99999974,48829e-8,-.00182077,-48733e-8,.99999822],[.99999813,-54712e-8,.00185283,5462e-7,.99999973,49761e-8,-.0018531,-4966e-7,.99999816],[.99999806,-56705e-8,.00188514,5661e-7,.99999971,50697e-8,-.00188543,-5059e-7,.99999809],[.99999799,-58745e-8,.00191743,58646e-8,.99999969,51637e-8,-.00191774,-51524e-8,.99999803],[.99999791,-60832e-8,.0019497,60729e-8,.99999968,5258e-7,-.00195002,-52461e-8,.99999796],[.99999784,-62965e-8,.00198192,62859e-8,.99999966,53526e-8,-.00198226,-53401e-8,.99999789],[.99999776,-65147e-8,.0020141,65037e-8,.99999964,54476e-8,-.00201445,-54345e-8,.99999782],[.99999768,-67376e-8,.00204621,67263e-8,.99999962,55428e-8,-.00204659,-55291e-8,.99999775],[.9999976,-69654e-8,.00207826,69537e-8,.9999996,56384e-8,-.00207865,-56239e-8,.99999768],[.99999751,-7198e-7,.00211023,71859e-8,.99999958,57342e-8,-.00211064,-57191e-8,.99999761],[.99999743,-74356e-8,.00214211,74231e-8,.99999955,58304e-8,-.00214254,-58144e-8,.99999754],[.99999734,-76781e-8,.00217389,76653e-8,.99999953,59267e-8,-.00217435,-59101e-8,.99999746],[.99999725,-79257e-8,.00220557,79124e-8,.99999951,60234e-8,-.00220604,-60059e-8,.99999739],[.99999716,-81782e-8,.00223712,81646e-8,.99999948,61202e-8,-.00223762,-61019e-8,.99999731],[.99999707,-84359e-8,.00226855,84218e-8,.99999945,62173e-8,-.00226907,-61982e-8,.99999723],[.99999698,-86986e-8,.00229983,86841e-8,.99999942,63146e-8,-.00230038,-62946e-8,.99999716],[.99999688,-89666e-8,.00233097,89516e-8,.99999939,64121e-8,-.00233154,-63912e-8,.99999708],[.99999678,-92397e-8,.00236195,92243e-8,.99999936,65098e-8,-.00236255,-6488e-7,.999997],[.99999668,-9518e-7,.00239276,95022e-8,.99999933,66076e-8,-.00239339,-65849e-8,.99999692],[.99999658,-98016e-8,.00242339,97853e-8,.9999993,67057e-8,-.00242404,-66819e-8,.99999684],[.99999648,-.00100904,.00245383,.00100738,.99999926,68039e-8,-.00245451,-67791e-8,.99999676],[.99999638,-.00103846,.00248407,.00103675,.99999922,69022e-8,-.00248478,-68764e-8,.99999668],[.99999627,-.00106842,.0025141,.00106666,.99999919,70007e-8,-.00251484,-69738e-8,.99999659],[.99999616,-.00109891,.00254391,.00109711,.99999915,70993e-8,-.00254468,-70713e-8,.99999651],[.99999605,-.00112995,.00257348,.0011281,.9999991,7198e-7,-.00257429,-71689e-8,.99999643],[.99999594,-.00116153,.00260282,.00115963,.99999906,72968e-8,-.00260366,-72666e-8,.99999635],[.99999582,-.00119366,.0026319,.00119172,.99999902,73958e-8,-.00263278,-73644e-8,.99999626],[.99999571,-.00122634,.00266072,.00122435,.99999897,74948e-8,-.00266164,-74622e-8,.99999618],[.99999559,-.00125957,.00268927,.00125754,.99999892,75939e-8,-.00269022,-756e-6,.9999961],[.99999547,-.00129337,.00271753,.00129128,.99999887,7693e-7,-.00271852,-76579e-8,.99999601],[.99999535,-.00132772,.0027455,.00132558,.99999882,77923e-8,-.00274653,-77558e-8,.99999593],[.99999523,-.00136263,.00277317,.00136045,.99999876,78915e-8,-.00277424,-78538e-8,.99999584],[.9999951,-.00139811,.00280052,.00139588,.99999871,79909e-8,-.00280163,-79517e-8,.99999576],[.99999497,-.00143416,.00282754,.00143188,.99999865,80902e-8,-.0028287,-80497e-8,.99999568],[.99999485,-.00147078,.00285423,.00146845,.99999859,81896e-8,-.00285543,-81476e-8,.99999559],[.99999471,-.00150797,.00288057,.00150559,.99999852,8289e-7,-.00288181,-82456e-8,.99999551],[.99999458,-.00154574,.00290655,.0015433,.99999846,83884e-8,-.00290784,-83435e-8,.99999542],[.99999445,-.00158408,.00293216,.0015816,.99999839,84879e-8,-.0029335,-84415e-8,.99999534],[.99999431,-.001623,.0029574,.00162047,.99999832,85873e-8,-.00295879,-85393e-8,.99999526],[.99999417,-.00166251,.00298224,.00165992,.99999825,86867e-8,-.00298368,-86372e-8,.99999518],[.99999403,-.00170259,.00300669,.00169996,.99999817,87861e-8,-.00300818,-8735e-7,.99999509],[.99999389,-.00174327,.00303072,.00174058,.99999809,88855e-8,-.00303227,-88327e-8,.99999501],[.99999374,-.00178453,.00305433,.00178179,.99999801,89849e-8,-.00305593,-89304e-8,.99999493],[.9999936,-.00182638,.00307751,.00182359,.99999792,90842e-8,-.00307916,-9028e-7,.99999485],[.99999345,-.00186882,.00310024,.00186598,.99999784,91835e-8,-.00310195,-91256e-8,.99999477],[.9999933,-.00191185,.00312252,.00190896,.99999775,92827e-8,-.00312429,-92231e-8,.99999469],[.99999314,-.00195548,.00314434,.00195254,.99999765,93819e-8,-.00314616,-93205e-8,.99999462],[.99999299,-.00199971,.00316567,.00199671,.99999756,94811e-8,-.00316756,-94178e-8,.99999454],[.99999283,-.00204453,.00318652,.00204149,.99999746,95802e-8,-.00318847,-9515e-7,.99999446],[.99999267,-.00208995,.00320687,.00208685,.99999735,96792e-8,-.00320889,-96122e-8,.99999439],[.99999251,-.00213597,.00322672,.00213282,.99999725,97781e-8,-.0032288,-97092e-8,.99999432],[.99999235,-.00218259,.00324604,.00217939,.99999714,9877e-7,-.00324819,-98062e-8,.99999424],[.99999218,-.00222981,.00326483,.00222657,.99999702,99758e-8,-.00326705,-9903e-7,.99999417],[.99999202,-.00227764,.00328308,.00227434,.99999691,.00100745,-.00328536,-99997e-8,.9999941],[.99999185,-.00232607,.00330078,.00232273,.99999679,.00101731,-.00330313,-.00100963,.99999403],[.99999168,-.00237511,.00331791,.00237171,.99999666,.00102716,-.00332034,-.00101929,.99999397],[.9999915,-.00242475,.00333447,.0024213,.99999653,.00103701,-.00333697,-.00102892,.9999939],[.99999132,-.002475,.00335044,.0024715,.9999964,.00104684,-.00335302,-.00103855,.99999384],[.99999115,-.00252585,.00336581,.00252231,.99999626,.00105667,-.00336847,-.00104817,.99999378],[.99999096,-.00257732,.00338058,.00257373,.99999612,.00106648,-.00338332,-.00105777,.99999372],[.99999078,-.00262939,.00339473,.00262575,.99999597,.00107629,-.00339755,-.00106736,.99999366],[.9999906,-.00268207,.00340825,.00267838,.99999582,.00108608,-.00341115,-.00107694,.9999936],[.99999041,-.00273536,.00342113,.00273162,.99999567,.00109586,-.00342411,-.00108651,.99999355],[.99999022,-.00278925,.00343335,.00278547,.99999551,.00110563,-.00343642,-.00109606,.99999349],[.99999002,-.00284376,.00344492,.00283993,.99999535,.0011154,-.00344807,-.0011056,.99999344],[.99998983,-.00289887,.00345581,.002895,.99999518,.00112515,-.00345905,-.00111513,.9999934],[.99998963,-.0029546,.00346601,.00295068,.999995,.00113489,-.00346935,-.00112465,.99999335],[.99998943,-.00301093,.00347552,.00300697,.99999482,.00114461,-.00347895,-.00113415,.99999331],[.99998922,-.00306787,.00348432,.00306386,.99999464,.00115433,-.00348784,-.00114364,.99999326],[.99998902,-.00312542,.0034924,.00312137,.99999445,.00116403,-.00349602,-.00115312,.99999322],[.99998881,-.00318357,.00349976,.00317948,.99999426,.00117373,-.00350347,-.00116259,.99999319],[.9999886,-.00324234,.00350637,.00323821,.99999406,.00118341,-.00351019,-.00117204,.99999315],[.99998838,-.00330171,.00351223,.00329754,.99999385,.00119308,-.00351615,-.00118149,.99999312],[.99998816,-.00336168,.00351733,.00335747,.99999364,.00120274,-.00352136,-.00119092,.99999309],[.99998794,-.00342226,.00352166,.00341801,.99999342,.00121239,-.00352579,-.00120034,.99999306],[.99998772,-.00348345,.00352521,.00347916,.9999932,.00122203,-.00352944,-.00120975,.99999304],[.99998749,-.00354523,.00352796,.00354091,.99999297,.00123166,-.0035323,-.00121915,.99999302],[.99998726,-.00360762,.0035299,.00360326,.99999274,.00124127,-.00353435,-.00122854,.999993],[.99998703,-.00367061,.00353102,.00366621,.9999925,.00125088,-.00353559,-.00123792,.99999298],[.99998679,-.0037342,.00353132,.00372977,.99999225,.00126047,-.003536,-.00124729,.99999297],[.99998655,-.00379839,.00353078,.00379392,.999992,.00127006,-.00353558,-.00125665,.99999296],[.99998631,-.00386317,.00352939,.00385867,.99999174,.00127963,-.00353431,-.001266,.99999295],[.99998606,-.00392855,.00352714,.00392402,.99999147,.0012892,-.00353218,-.00127534,.99999295],[.99998581,-.00399452,.00352402,.00398996,.9999912,.00129876,-.00352918,-.00128468,.99999295],[.99998556,-.00406108,.00352001,.0040565,.99999092,.00130831,-.00352529,-.00129401,.99999295],[.9999853,-.00412823,.00351511,.00412362,.99999063,.00131785,-.00352052,-.00130333,.99999295],[.99998504,-.00419597,.00350931,.00419134,.99999034,.00132738,-.00351485,-.00131265,.99999296],[.99998477,-.0042643,.0035026,.00425964,.99999003,.00133691,-.00350826,-.00132196,.99999297],[.9999845,-.00433321,.00349495,.00432853,.99998973,.00134642,-.00350075,-.00133127,.99999299],[.99998423,-.0044027,.00348637,.004398,.99998941,.00135593,-.00349231,-.00134058,.999993],[.99998395,-.00447277,.00347685,.00446805,.99998909,.00136544,-.00348292,-.00134988,.99999302],[.99998367,-.00454342,.00346636,.00453868,.99998875,.00137494,-.00347257,-.00135918,.99999305],[.99998338,-.00461464,.00345491,.00460988,.99998842,.00138443,-.00346126,-.00136848,.99999307],[.99998309,-.00468643,.00344248,.00468166,.99998807,.00139392,-.00344897,-.00137778,.9999931],[.9999828,-.0047588,.00342905,.00475401,.99998771,.00140341,-.00343569,-.00138708,.99999314],[.9999825,-.00483172,.00341463,.00482692,.99998735,.00141289,-.00342141,-.00139638,.99999317],[.99998219,-.00490522,.0033992,.0049004,.99998698,.00142237,-.00340613,-.00140568,.99999321],[.99998188,-.00497927,.00338274,.00497445,.9999866,.00143184,-.00338983,-.00141499,.99999325],[.99998157,-.00505388,.00336525,.00504905,.99998621,.00144132,-.00337249,-.0014243,.9999933],[.99998125,-.00512904,.00334672,.00512421,.99998582,.00145079,-.00335412,-.00143362,.99999335],[.99998092,-.00520475,.00332714,.00519992,.99998541,.00146027,-.00333469,-.00144294,.9999934],[.99998059,-.00528101,.00330649,.00527618,.999985,.00146974,-.0033142,-.00145227,.99999345],[.99998025,-.00535782,.00328477,.00535298,.99998458,.00147922,-.00329265,-.00146161,.99999351],[.99997991,-.00543516,.00326197,.00543033,.99998415,.0014887,-.00327001,-.00147096,.99999357],[.99997956,-.00551305,.00323807,.00550822,.99998371,.00149818,-.00324627,-.00148032,.99999364],[.99997921,-.00559146,.00321306,.00558664,.99998326,.00150767,-.00322144,-.00148969,.9999937],[.99997884,-.0056704,.00318694,.00566559,.9999828,.00151716,-.00319549,-.00149907,.99999377],[.99997848,-.00574987,.0031597,.00574507,.99998233,.00152666,-.00316842,-.00150847,.99999384],[.9999781,-.00582986,.00313132,.00582508,.99998185,.00153616,-.00314022,-.00151789,.99999392],[.99997772,-.00591037,.00310179,.0059056,.99998137,.00154567,-.00311087,-.00152732,.99999399],[.99997734,-.00599139,.00307111,.00598664,.99998087,.00155519,-.00308037,-.00153677,.99999407],[.99997694,-.00607292,.00303927,.00606819,.99998036,.00156473,-.00304871,-.00154625,.99999416],[.99997654,-.00615496,.00300625,.00615024,.99997985,.00157427,-.00301588,-.00155574,.99999424],[.99997613,-.00623749,.00297204,.0062328,.99997932,.00158382,-.00298186,-.00156526,.99999433],[.99997571,-.00632052,.00293664,.00631586,.99997879,.00159338,-.00294665,-.0015748,.99999442],[.99997529,-.00640403,.00290004,.00639941,.99997824,.00160296,-.00291024,-.00158437,.99999451],[.99997486,-.00648804,.00286222,.00648344,.99997768,.00161256,-.00287262,-.00159396,.9999946],[.99997442,-.00657252,.00282317,.00656796,.99997711,.00162217,-.00283377,-.00160359,.9999947],[.99997397,-.00665748,.0027829,.00665296,.99997654,.0016318,-.0027937,-.00161324,.9999948],[.99997351,-.00674292,.00274138,.00673843,.99997595,.00164144,-.00275238,-.00162293,.9999949],[.99997304,-.00682881,.0026986,.00682437,.99997535,.00165111,-.00270981,-.00163265,.999995],[.99997257,-.00691517,.00265457,.00691078,.99997474,.0016608,-.00266599,-.00164241,.9999951],[.99997208,-.00700198,.00260926,.00699764,.99997412,.00167051,-.00262089,-.0016522,.9999952],[.99997159,-.00708924,.00256268,.00708495,.99997349,.00168024,-.00257452,-.00166204,.9999953],[.99997108,-.00717695,.0025148,.00717271,.99997285,.00169,-.00252686,-.00167191,.99999541],[.99997057,-.00726509,.00246562,.00726091,.99997219,.00169978,-.0024779,-.00168183,.99999552],[.99997004,-.00735367,.00241514,.00734955,.99997153,.00170959,-.00242764,-.00169179,.99999562],[.99996951,-.00744267,.00236334,.00743862,.99997085,.00171944,-.00237607,-.0017018,.99999573],[.99996896,-.0075321,.00231021,.00752811,.99997017,.00172931,-.00232317,-.00171186,.99999584],[.99996841,-.00762194,.00225575,.00761802,.99996947,.00173921,-.00226894,-.00172197,.99999594],[.99996784,-.00771219,.00219995,.00770835,.99996876,.00174915,-.00221337,-.00173213,.99999605],[.99996726,-.00780284,.00214279,.00779908,.99996804,.00175912,-.00215645,-.00174235,.99999616],[.99996667,-.00789389,.00208427,.00789021,.99996731,.00176912,-.00209817,-.00175262,.99999626],[.99996607,-.00798533,.00202438,.00798173,.99996656,.00177917,-.00203852,-.00176295,.99999637],[.99996545,-.00807715,.00196311,.00807364,.99996581,.00178925,-.0019775,-.00177334,.99999647],[.99996482,-.00816935,.00190046,.00816594,.99996504,.00179938,-.00191509,-.00178379,.99999658],[.99996418,-.00826193,.00183641,.0082586,.99996426,.00180954,-.00185129,-.00179431,.99999668],[.99996353,-.00835486,.00177096,.00835164,.99996347,.00181975,-.0017861,-.0018049,.99999678],[.99996286,-.00844816,.00170409,.00844504,.99996267,.00183001,-.00171949,-.00181555,.99999687],[.99996218,-.0085418,.00163581,.00853879,.99996185,.00184031,-.00165147,-.00182628,.99999697],[.99996148,-.00863579,.0015661,.00863289,.99996102,.00185067,-.00158202,-.00183708,.99999706],[.99996077,-.00873012,.00149496,.00872733,.99996018,.00186107,-.00151114,-.00184795,.99999715],[.99996005,-.00882477,.00142237,.0088221,.99995933,.00187153,-.00143882,-.0018589,.99999724],[.99995931,-.00891975,.00134833,.00891721,.99995847,.00188203,-.00136506,-.00186993,.99999732],[.99995855,-.00901505,.00127283,.00901263,.99995759,.0018926,-.00128984,-.00188105,.9999974],[.99995778,-.00911065,.00119586,.00910836,.99995671,.00190322,-.00121315,-.00189225,.99999747],[.99995699,-.00920655,.00111742,.0092044,.99995581,.00191391,-.00113499,-.00190354,.99999754],[.99995619,-.00930275,.0010375,.00930074,.99995489,.00192465,-.00105536,-.00191491,.99999761],[.99995537,-.00939923,95609e-8,.00939737,.99995397,.00193546,-97424e-8,-.00192638,.99999767],[.99995453,-.00949599,87319e-8,.00949428,.99995303,.00194633,-89163e-8,-.00193795,.99999772],[.99995367,-.00959302,78878e-8,.00959146,.99995209,.00195726,-80752e-8,-.00194961,.99999777],[.9999528,-.00969032,70287e-8,.00968892,.99995112,.00196827,-7219e-7,-.00196137,.99999782],[.99995191,-.00978787,61543e-8,.00978663,.99995015,.00197935,-63478e-8,-.00197323,.99999785],[.999951,-.00988566,52648e-8,.0098846,.99994917,.0019905,-54613e-8,-.0019852,.99999788],[.99995007,-.0099837,43599e-8,.00998281,.99994817,.00200172,-45595e-8,-.00199727,.9999979],[.99994912,-.01008197,34396e-8,.01008125,.99994716,.00201302,-36424e-8,-.00200945,.99999791],[.99994815,-.01018046,2504e-7,.01017993,.99994613,.0020244,-27099e-8,-.00202175,.99999792],[.99994716,-.01027916,15528e-8,.01027882,.9999451,.00203586,-1762e-7,-.00203416,.99999792],[.99994614,-.01037807,586e-7,.01037793,.99994405,.00204741,-7985e-8,-.00204669,.9999979],[.99994511,-.01047718,-3963e-8,.01047724,.99994299,.00205903,1806e-8,-.00205934,.99999788],[.99994406,-.01057648,-13944e-8,.01057675,.99994192,.00207075,11753e-8,-.00207211,.99999785],[.99994298,-.01067596,-24081e-8,.01067644,.99994084,.00208255,21857e-8,-.002085,.9999978],[.99994188,-.01077561,-34377e-8,.01077631,.99993974,.00209444,32118e-8,-.00209803,.99999775],[.99994076,-.01087543,-44832e-8,.01087635,.99993863,.00210643,42538e-8,-.00211118,.99999768],[.99993961,-.01097541,-55445e-8,.01097656,.99993751,.00211851,53117e-8,-.00212447,.9999976],[.99993845,-.01107553,-66219e-8,.01107691,.99993638,.00213069,63855e-8,-.00213789,.99999751],[.99993725,-.01117579,-77153e-8,.01117742,.99993523,.00214297,74753e-8,-.00215146,.99999741],[.99993603,-.01127617,-88247e-8,.01127805,.99993408,.00215535,85811e-8,-.00216516,.99999729],[.99993479,-.01137668,-99503e-8,.01137882,.99993291,.00216783,9703e-7,-.00217901,.99999716],[.99993352,-.0114773,-.0011092,.0114797,.99993173,.00218042,.0010841,-.00219301,.99999701],[.99993222,-.01157802,-.001225,.01158069,.99993054,.00219312,.00119953,-.00220716,.99999684],[.9999309,-.01167884,-.00134243,.01168178,.99992933,.00220593,.00131658,-.00222146,.99999667],[.99992955,-.01177974,-.00146149,.01178297,.99992812,.00221885,.00143525,-.00223592,.99999647],[.99992817,-.01188072,-.00158219,.01188423,.99992689,.00223189,.00155556,-.00225053,.99999626],[.99992676,-.01198176,-.00170453,.01198557,.99992565,.00224505,.00167751,-.00226531,.99999603],[.99992533,-.01208286,-.00182852,.01208698,.9999244,.00225832,.0018011,-.00228025,.99999578],[.99992386,-.012184,-.00195416,.01218843,.99992314,.00227172,.00192633,-.00229536,.99999551],[.99992237,-.01228519,-.00208146,.01228994,.99992186,.00228524,.00205322,-.00231064,.99999522],[.99992084,-.0123864,-.00221041,.01239148,.99992058,.00229889,.00218176,-.0023261,.99999491],[.99991929,-.01248763,-.00234103,.01249304,.99991928,.00231267,.00231196,-.00234173,.99999459],[.9999177,-.01258887,-.00247331,.01259463,.99991798,.00232658,.00244382,-.00235754,.99999423],[.99991608,-.01269011,-.00260726,.01269622,.99991666,.00234063,.00257734,-.00237353,.99999386],[.99991443,-.01279134,-.00274289,.01279781,.99991533,.00235481,.00271254,-.00238971,.99999347],[.99991274,-.01289256,-.0028802,.0128994,.99991399,.00236913,.00284941,-.00240608,.99999305],[.99991102,-.01299374,-.00301919,.01300096,.99991264,.00238359,.00298795,-.00242263,.9999926],[.99990927,-.01309488,-.00315986,.01310249,.99991128,.0023982,.00312817,-.00243938,.99999213],[.99990748,-.01319598,-.00330222,.01320398,.99990991,.00241295,.00327008,-.00245633,.99999164],[.99990565,-.01329702,-.00344627,.01330542,.99990853,.00242786,.00341367,-.00247348,.99999111],[.99990379,-.01339799,-.00359201,.01340681,.99990714,.00244291,.00355895,-.00249083,.99999056],[.99990189,-.01349888,-.00373945,.01350812,.99990574,.00245812,.00370592,-.00250839,.99998999],[.99989996,-.01359968,-.00388859,.01360936,.99990433,.00247349,.00385458,-.00252616,.99998938],[.99989799,-.01370039,-.00403943,.01371051,.99990291,.00248901,.00400493,-.00254414,.99998874],[.99989597,-.01380099,-.00419197,.01381156,.99990148,.0025047,.00415699,-.00256234,.99998808],[.99989392,-.01390147,-.00434622,.01391251,.99990004,.00252056,.00431074,-.00258076,.99998738],[.99989183,-.01400182,-.00450217,.01401334,.99989859,.00253658,.0044662,-.00259939,.99998665],[.9998897,-.01410203,-.00465984,.01411404,.99989713,.00255277,.00462336,-.00261825,.99998588],[.99988753,-.0142021,-.00481921,.0142146,.99989567,.00256913,.00478222,-.00263734,.99998509],[.99988532,-.01430201,-.0049803,.01431501,.99989419,.00258567,.00494279,-.00265666,.99998426],[.99988306,-.01440175,-.0051431,.01441527,.99989271,.00260238,.00510507,-.00267622,.99998339],[.99988076,-.01450131,-.00530763,.01451536,.99989122,.00261928,.00526906,-.00269601,.99998248],[.99987842,-.01460068,-.00547386,.01461528,.99988972,.00263636,.00543477,-.00271604,.99998154],[.99987603,-.01469985,-.00564182,.01471501,.99988821,.00265363,.00560218,-.00273632,.99998056],[.9998736,-.01479882,-.0058115,.01481454,.99988669,.00267108,.00577131,-.00275684,.99997955],[.99987113,-.01489756,-.00598289,.01491386,.99988517,.00268873,.00594215,-.00277761,.99997849],[.9998686,-.01499608,-.00615601,.01501297,.99988364,.00270657,.00611471,-.00279863,.99997739],[.99986603,-.01509435,-.00633085,.01511184,.9998821,.0027246,.00628898,-.00281991,.99997625],[.99986341,-.01519237,-.00650742,.01521049,.99988055,.00274284,.00646497,-.00284145,.99997506],[.99986075,-.01529014,-.0066857,.01530888,.999879,.00276128,.00664267,-.00286324,.99997384],[.99985803,-.01538763,-.00686571,.01540702,.99987744,.00277992,.0068221,-.00288531,.99997257],[.99985527,-.01548484,-.00704745,.01550489,.99987587,.00279878,.00700324,-.00290764,.99997125],[.99985245,-.01558176,-.00723091,.01560248,.9998743,.00281784,.00718609,-.00293024,.99996989],[.99984958,-.01567837,-.00741609,.01569978,.99987273,.00283711,.00737066,-.00295312,.99996848],[.99984667,-.01577468,-.00760299,.01579678,.99987114,.00285661,.00755695,-.00297627,.99996702],[.99984369,-.01587066,-.00779162,.01589348,.99986955,.00287632,.00774496,-.00299971,.99996551],[.99984067,-.0159663,-.00798197,.01598986,.99986796,.00289625,.00793468,-.00302342,.99996395],[.99983759,-.0160616,-.00817405,.01608591,.99986636,.00291641,.00812611,-.00304743,.99996234],[.99983446,-.01615655,-.00836784,.01618162,.99986476,.0029368,.00831926,-.00307172,.99996068],[.99983127,-.01625113,-.00856336,.01627698,.99986315,.00295742,.00851412,-.0030963,.99995896],[.99982803,-.01634534,-.00876059,.01637199,.99986153,.00297827,.0087107,-.00312118,.99995719],[.99982472,-.01643916,-.00895954,.01646662,.99985992,.00299935,.00890898,-.00314636,.99995536],[.99982137,-.01653259,-.00916021,.01656087,.9998583,.00302068,.00910898,-.00317184,.99995348],[.99981795,-.01662561,-.0093626,.01665474,.99985667,.00304225,.00931068,-.00319762,.99995154],[.99981447,-.01671821,-.0095667,.01674821,.99985504,.00306406,.00951409,-.00322371,.99994954],[.99981094,-.01681038,-.00977251,.01684126,.99985341,.00308612,.0097192,-.00325012,.99994749],[.99980734,-.01690212,-.00998004,.0169339,.99985178,.00310843,.00992602,-.00327683,.99994537],[.99980368,-.01699341,-.01018927,.01702611,.99985014,.00313099,.01013454,-.00330386,.99994319],[.99979996,-.01708424,-.01040021,.01711787,.9998485,.00315381,.01034475,-.00333121,.99994094],[.99979618,-.0171746,-.01061285,.01720919,.99984686,.0031769,.01055667,-.00335889,.99993864],[.99979233,-.01726448,-.0108272,.01730005,.99984522,.00320024,.01077028,-.00338688,.99993626],[.99978842,-.01735387,-.01104325,.01739044,.99984358,.00322385,.01098558,-.00341521,.99993382],[.99978445,-.01744276,-.011261,.01748034,.99984193,.00324772,.01120257,-.00344387,.99993132],[.99978041,-.01753114,-.01148044,.01756976,.99984029,.00327187,.01142125,-.00347286,.99992874],[.9997763,-.017619,-.01170157,.01765868,.99983864,.00329629,.01164161,-.00350219,.9999261],[.99977212,-.01770633,-.0119244,.01774708,.99983699,.00332099,.01186365,-.00353186,.99992339],[.99976788,-.01779311,-.01214891,.01783497,.99983535,.00334597,.01208737,-.00356187,.9999206],[.99976356,-.01787935,-.0123751,.01792233,.9998337,.00337123,.01231277,-.00359222,.99991774],[.99975918,-.01796502,-.01260298,.01800915,.99983205,.00339678,.01253984,-.00362293,.99991481],[.99975473,-.01805012,-.01283253,.01809541,.99983041,.00342261,.01276858,-.00365398,.9999118],[.99975021,-.01813463,-.01306376,.01818112,.99982876,.00344874,.01299898,-.00368539,.99990872],[.99974561,-.01821855,-.01329666,.01826626,.99982712,.00347516,.01323104,-.00371716,.99990556],[.99974094,-.01830187,-.01353122,.01835082,.99982548,.00350188,.01346477,-.00374928,.99990232],[.9997362,-.01838458,-.01376744,.01843479,.99982384,.0035289,.01370014,-.00378177,.999899],[.99973138,-.01846666,-.01400533,.01851816,.9998222,.00355623,.01393717,-.00381462,.9998956],[.99972649,-.01854811,-.01424487,.01860092,.99982056,.00358386,.01417584,-.00384784,.99989211],[.99972152,-.01862892,-.01448606,.01868307,.99981893,.0036118,.01441615,-.00388144,.99988855],[.99971648,-.01870907,-.01472889,.01876459,.9998173,.00364005,.0146581,-.0039154,.9998849],[.99971135,-.01878856,-.01497337,.01884546,.99981568,.00366862,.01490168,-.00394974,.99988116],[.99970615,-.01886737,-.01521949,.0189257,.99981406,.00369751,.0151469,-.00398446,.99987734],[.99970087,-.0189455,-.01546724,.01900527,.99981244,.00372672,.01539373,-.00401956,.99987343],[.99969551,-.01902294,-.01571661,.01908418,.99981082,.00375625,.01564218,-.00405504,.99986943],[.99969007,-.01909967,-.01596761,.01916242,.99980922,.00378611,.01589225,-.00409092,.99986534],[.99968455,-.01917568,-.01622023,.01923997,.99980761,.0038163,.01614393,-.00412717,.99986116],[.99967894,-.01925098,-.01647446,.01931682,.99980601,.00384683,.01639721,-.00416383,.99985689],[.99967326,-.01932554,-.0167303,.01939297,.99980442,.00387769,.01665209,-.00420087,.99985252],[.99966749,-.01939936,-.01698774,.01946841,.99980283,.00390889,.01690856,-.00423831,.99984806],[.99966163,-.01947242,-.01724678,.01954312,.99980125,.00394043,.01716663,-.00427616,.9998435],[.99965569,-.01954472,-.01750742,.01961711,.99979967,.00397232,.01742627,-.0043144,.99983884],[.99964966,-.01961625,-.01776964,.01969035,.99979811,.00400456,.01768749,-.00435305,.99983409],[.99964355,-.019687,-.01803344,.01976284,.99979655,.00403715,.01795029,-.0043921,.99982923],[.99963734,-.01975696,-.01829881,.01983458,.99979499,.00407009,.01821465,-.00443156,.99982428],[.99963105,-.01982611,-.01856575,.01990554,.99979344,.00410339,.01848056,-.00447144,.99981922],[.99962467,-.01989445,-.01883426,.01997573,.99979191,.00413705,.01874804,-.00451173,.99981406],[.9996182,-.01996198,-.01910432,.02004513,.99979038,.00417107,.01901706,-.00455243,.9998088],[.99961164,-.02002867,-.01937594,.02011374,.99978885,.00420546,.01928762,-.00459355,.99980342],[.99960498,-.02009452,-.0196491,.02018154,.99978734,.00424022,.01955972,-.0046351,.99979795],[.99959824,-.02015953,-.0199238,.02024853,.99978584,.00427535,.01983334,-.00467706,.99979236],[.9995914,-.02022368,-.02020003,.0203147,.99978434,.00431086,.02010849,-.00471946,.99978666],[.99958446,-.02028696,-.02047778,.02038003,.99978286,.00434675,.02038515,-.00476228,.99978086],[.99957743,-.02034936,-.02075705,.02044453,.99978138,.00438301,.02066333,-.00480553,.99977494],[.99957031,-.02041088,-.02103784,.02050818,.99977992,.00441966,.020943,-.00484921,.99976891],[.99956309,-.0204715,-.02132013,.02057097,.99977846,.0044567,.02122417,-.00489333,.99976277],[.99955577,-.02053123,-.02160392,.0206329,.99977702,.00449413,.02150683,-.00493788,.99975651],[.99954835,-.02059003,-.0218892,.02069396,.99977559,.00453195,.02179097,-.00498287,.99975013],[.99954084,-.02064792,-.02217596,.02075413,.99977416,.00457016,.02207659,-.00502831,.99974364],[.99953323,-.02070487,-.0224642,.02081342,.99977275,.00460878,.02236367,-.00507418,.99973702],[.99952551,-.02076089,-.0227539,.0208718,.99977136,.00464779,.02265221,-.0051205,.99973029],[.99951769,-.02081596,-.02304507,.02092928,.99976997,.00468722,.0229422,-.00516727,.99972344],[.99950978,-.02087007,-.0233377,.02098584,.9997686,.00472704,.02323364,-.00521449,.99971646],[.99950176,-.02092321,-.02363177,.02104149,.99976724,.00476728,.02352652,-.00526216,.99970936],[.99949363,-.02097538,-.02392728,.02109619,.99976589,.00480794,.02382083,-.00531028,.99970214],[.9994854,-.02102657,-.02422422,.02114997,.99976456,.00484901,.02411656,-.00535885,.99969479],[.99947707,-.02107676,-.02452259,.02120279,.99976323,.00489049,.0244137,-.00540788,.99968731],[.99946863,-.02112596,-.02482237,.02125466,.99976193,.0049324,.02471226,-.00545737,.99967971],[.99946009,-.02117414,-.02512356,.02130556,.99976063,.00497474,.02501221,-.00550733,.99967198],[.99945143,-.02122131,-.02542614,.0213555,.99975935,.0050175,.02531355,-.00555774,.99966411],[.99944267,-.02126746,-.02573012,.02140445,.99975809,.0050607,.02561627,-.00560862,.99965612],[.9994338,-.02131257,-.02603549,.02145242,.99975684,.00510433,.02592037,-.00565996,.99964799],[.99942483,-.02135663,-.02634222,.0214994,.99975561,.00514839,.02622583,-.00571177,.99963973],[.99941574,-.02139965,-.02665033,.02154538,.99975439,.0051929,.02653266,-.00576405,.99963133],[.99940654,-.02144161,-.02695979,.02159034,.99975318,.00523784,.02684083,-.00581681,.9996228],[.99939723,-.0214825,-.02727061,.02163429,.99975199,.00528323,.02715034,-.00587003,.99961413],[.9993878,-.02152232,-.02758276,.02167722,.99975082,.00532907,.02746119,-.00592373,.99960532],[.99937827,-.02156106,-.02789625,.02171912,.99974966,.00537537,.02777336,-.00597791,.99959637],[.99936862,-.02159871,-.02821106,.02175998,.99974852,.00542211,.02808685,-.00603256,.99958728],[.99935885,-.02163525,-.02852718,.02179979,.9997474,.00546931,.02840165,-.00608769,.99957805],[.99934897,-.0216707,-.02884461,.02183855,.99974629,.00551697,.02871774,-.0061433,.99956868],[.99933898,-.02170503,-.02916334,.02187625,.9997452,.00556509,.02903512,-.0061994,.99955917],[.99932887,-.02173824,-.02948336,.02191289,.99974412,.00561368,.02935379,-.00625598,.99954951],[.99931864,-.02177032,-.02980466,.02194845,.99974307,.00566274,.02967372,-.00631304,.9995397],[.99930829,-.02180126,-.03012723,.02198294,.99974203,.00571226,.02999492,-.00637059,.99952975],[.99929782,-.02183106,-.03045105,.02201633,.99974101,.00576226,.03031737,-.00642863,.99951965],[.99928724,-.02185971,-.03077614,.02204863,.99974,.00581273,.03064107,-.00648716,.9995094],[.99927653,-.0218872,-.03110246,.02207984,.99973901,.00586369,.030966,-.00654618,.999499],[.99926571,-.02191353,-.03143001,.02210993,.99973805,.00591512,.03129216,-.00660569,.99948845],[.99925476,-.02193868,-.0317588,.02213892,.9997371,.00596704,.03161954,-.0066657,.99947775],[.99924369,-.02196265,-.03208879,.02216678,.99973617,.00601945,.03194812,-.0067262,.9994669],[.9992325,-.02198544,-.03241999,.02219352,.99973525,.00607234,.0322779,-.0067872,.99945589],[.99922118,-.02200703,-.03275238,.02221912,.99973436,.00612573,.03260888,-.00684869,.99944472],[.99920974,-.02202742,-.03308597,.02224359,.99973348,.00617962,.03294103,-.00691068,.99943341],[.99919818,-.02204661,-.03342072,.02226691,.99973263,.006234,.03327435,-.00697318,.99942193],[.99918649,-.02206457,-.03375665,.02228908,.99973179,.00628888,.03360883,-.00703617,.9994103],[.99917468,-.02208132,-.03409373,.02231009,.99973097,.00634426,.03394447,-.00709966,.9993985],[.99916273,-.02209684,-.03443195,.02232995,.99973017,.00640016,.03428124,-.00716366,.99938655],[.99915067,-.02211113,-.03477132,.02234863,.99972939,.00645655,.03461915,-.00722816,.99937444],[.99913847,-.02212417,-.03511181,.02236614,.99972863,.00651347,.03495818,-.00729317,.99936216],[.99912615,-.02213597,-.03545342,.02238246,.99972789,.00657089,.03529832,-.00735868,.99934973],[.99911369,-.02214651,-.03579614,.02239761,.99972717,.00662883,.03563956,-.0074247,.99933713],[.99910111,-.02215579,-.03613995,.02241156,.99972646,.00668729,.0359819,-.00749123,.99932436],[.9990884,-.02216381,-.03648485,.02242431,.99972578,.00674627,.03632532,-.00755827,.99931143],[.99907555,-.02217055,-.03683083,.02243586,.99972512,.00680578,.03666982,-.00762581,.99929834],[.99906258,-.02217601,-.03717787,.0224462,.99972448,.00686581,.03701537,-.00769387,.99928508],[.99904947,-.02218019,-.03752597,.02245533,.99972385,.00692637,.03736198,-.00776244,.99927165],[.99903623,-.02218308,-.03787512,.02246324,.99972325,.00698746,.03770964,-.00783152,.99925805],[.99902286,-.02218467,-.03822531,.02246993,.99972267,.00704909,.03805832,-.00790112,.99924428],[.99900935,-.02218496,-.03857652,.02247538,.9997221,.00711125,.03840803,-.00797123,.99923035],[.99899571,-.02218394,-.03892874,.02247961,.99972156,.00717396,.03875876,-.00804185,.99921624],[.99898193,-.0221816,-.03928197,.02248259,.99972104,.0072372,.03911048,-.00811299,.99920196],[.99896802,-.02217794,-.0396362,.02248433,.99972054,.00730099,.0394632,-.00818465,.9991875],[.99895398,-.02217296,-.03999141,.02248482,.99972005,.00736533,.0398169,-.00825682,.99917288],[.99893979,-.02216665,-.04034759,.02248406,.99971959,.00743021,.04017158,-.00832951,.99915808],[.99892547,-.02215899,-.04070474,.02248204,.99971915,.00749565,.04052722,-.00840272,.9991431],[.99891102,-.02215,-.04106284,.02247875,.99971872,.00756164,.0408838,-.00847645,.99912795],[.99889642,-.02213966,-.04142189,.0224742,.99971832,.00762819,.04124134,-.0085507,.99911263],[.99888169,-.02212796,-.04178186,.02246837,.99971794,.0076953,.0415998,-.00862546,.99909712],[.99886682,-.02211491,-.04214276,.02246127,.99971757,.00776297,.04195918,-.00870075,.99908144],[.99885181,-.02210049,-.04250457,.02245289,.99971723,.0078312,.04231948,-.00877656,.99906558],[.99883665,-.02208471,-.04286728,.02244322,.99971691,.0079,.04268067,-.00885289,.99904954],[.99882136,-.02206755,-.04323088,.02243226,.9997166,.00796937,.04304276,-.00892974,.99903332],[.99880593,-.02204901,-.04359535,.02242001,.99971632,.00803931,.04340573,-.00900711,.99901692],[.99879036,-.02202909,-.0439607,.02240646,.99971605,.00810982,.04376956,-.00908501,.99900034],[.99877464,-.02200778,-.0443269,.0223916,.9997158,.00818091,.04413426,-.00916343,.99898358],[.99875878,-.02198508,-.04469395,.02237544,.99971558,.00825257,.0444998,-.00924237,.99896664],[.99874278,-.02196098,-.04506183,.02235797,.99971537,.00832482,.04486618,-.00932184,.99894951],[.99872664,-.02193548,-.04543054,.02233919,.99971518,.00839764,.0452334,-.00940183,.9989322],[.99871035,-.02190857,-.04580006,.02231909,.99971501,.00847106,.04560142,-.00948235,.99891471],[.99869392,-.02188025,-.04617039,.02229766,.99971486,.00854506,.04597026,-.00956339,.99889703],[.99867735,-.02185051,-.04654151,.02227491,.99971472,.00861965,.04633989,-.00964495,.99887917],[.99866063,-.02181935,-.04691341,.02225083,.99971461,.00869483,.04671031,-.00972704,.99886112],[.99864376,-.02178677,-.04728609,.02222542,.99971451,.0087706,.0470815,-.00980966,.99884288],[.99862675,-.02175276,-.04765952,.02219868,.99971443,.00884697,.04745346,-.0098928,.99882446],[.99860959,-.02171732,-.0480337,.02217059,.99971437,.00892394,.04782618,-.00997647,.99880585],[.99859229,-.02168044,-.04840862,.02214116,.99971433,.00900151,.04819964,-.01006066,.99878705],[.99857484,-.02164211,-.04878427,.02211039,.9997143,.00907968,.04857383,-.01014538,.99876807],[.99855724,-.02160235,-.04916063,.02207826,.9997143,.00915845,.04894875,-.01023062,.99874889],[.9985395,-.02156113,-.0495377,.02204479,.9997143,.00923783,.04932437,-.01031639,.99872953],[.99852161,-.02151846,-.04991547,.02200995,.99971433,.00931782,.04970071,-.01040269,.99870998],[.99850357,-.02147433,-.05029392,.02197376,.99971437,.00939843,.05007773,-.01048951,.99869024],[.99848538,-.02142874,-.05067304,.02193621,.99971443,.00947964,.05045543,-.01057686,.99867031],[.99846704,-.02138169,-.05105282,.02189729,.9997145,.00956147,.05083381,-.01066473,.99865018],[.99844855,-.02133317,-.05143326,.02185701,.99971459,.00964392,.05121284,-.01075313,.99862987],[.99842992,-.02128318,-.05181433,.02181536,.9997147,.00972698,.05159253,-.01084206,.99860936],[.99841113,-.02123171,-.05219604,.02177233,.99971482,.00981067,.05197285,-.01093151,.99858867],[.9983922,-.02117877,-.05257836,.02172793,.99971495,.00989498,.05235381,-.01102149,.99856778],[.99837311,-.02112434,-.05296129,.02168215,.9997151,.00997991,.05273538,-.01111199,.9985467],[.99835387,-.02106843,-.05334481,.02163498,.99971527,.01006547,.05311756,-.01120302,.99852542],[.99833448,-.02101103,-.05372892,.02158644,.99971544,.01015166,.05350034,-.01129457,.99850395],[.99831494,-.02095214,-.05411361,.02153651,.99971564,.01023848,.0538837,-.01138665,.99848229],[.99829525,-.02089175,-.05449886,.02148519,.99971584,.01032594,.05426765,-.01147925,.99846044],[.99827541,-.02082987,-.05488466,.02143248,.99971606,.01041403,.05465215,-.01157238,.99843839],[.99825541,-.02076648,-.055271,.02137838,.99971629,.01050275,.05503722,-.01166603,.99841615],[.99823527,-.02070159,-.05565788,.02132289,.99971653,.01059212,.05542283,-.01176021,.99839371],[.99821496,-.0206352,-.05604527,.021266,.99971678,.01068212,.05580897,-.01185491,.99837108],[.99819451,-.02056729,-.05643317,.02120771,.99971705,.01077277,.05619564,-.01195013,.99834826],[.99817391,-.02049788,-.05682157,.02114801,.99971733,.01086406,.05658282,-.01204588,.99832524],[.99815315,-.02042695,-.05721046,.02108692,.99971761,.01095599,.05697051,-.01214215,.99830202],[.99813223,-.0203545,-.05759982,.02102442,.99971791,.01104858,.05735869,-.01223894,.99827861],[.99811117,-.02028053,-.05798965,.02096051,.99971822,.01114181,.05774735,-.01233626,.99825501],[.99808995,-.02020504,-.05837993,.0208952,.99971854,.0112357,.05813648,-.01243409,.99823121],[.99806857,-.02012802,-.05877066,.02082847,.99971886,.01133023,.05852608,-.01253245,.99820721],[.99804704,-.02004947,-.05916182,.02076034,.99971919,.01142543,.05891613,-.01263133,.99818302],[.99802536,-.0199694,-.0595534,.02069079,.99971954,.01152127,.05930662,-.01273073,.99815863],[.99800352,-.01988779,-.05994539,.02061982,.99971989,.01161778,.05969754,-.01283065,.99813405],[.99798153,-.01980465,-.06033778,.02054744,.99972024,.01171495,.06008889,-.01293109,.99810927],[.99795938,-.01971997,-.06073056,.02047364,.99972061,.01181278,.06048064,-.01303205,.99808429],[.99793708,-.01963376,-.06112371,.02039842,.99972097,.01191127,.0608728,-.01313352,.99805912],[.99791462,-.019546,-.06151724,.02032178,.99972135,.01201042,.06126534,-.01323552,.99803376],[.997892,-.0194567,-.06191112,.02024372,.99972173,.01211025,.06165827,-.01333803,.99800819],[.99786923,-.01936586,-.06230535,.02016423,.99972211,.01221074,.06205156,-.01344106,.99798244],[.99784631,-.01927347,-.06269991,.02008333,.9997225,.0123119,.06244522,-.0135446,.99795648],[.99782323,-.01917953,-.0630948,.02000099,.99972289,.01241373,.06283923,-.01364866,.99793033],[.99779999,-.01908404,-.06349,.01991723,.99972329,.01251623,.06323357,-.01375324,.99790399],[.9977766,-.01898699,-.0638855,.01983204,.99972368,.01261941,.06362825,-.01385833,.99787744],[.99775305,-.0188884,-.0642813,.01974542,.99972408,.01272326,.06402324,-.01396393,.99785071],[.99772934,-.01878824,-.06467738,.01965737,.99972448,.01282779,.06441854,-.01407005,.99782377],[.99770548,-.01868654,-.06507372,.01956789,.99972488,.012933,.06481415,-.01417668,.99779665],[.99768146,-.01858327,-.06547033,.01947698,.99972528,.01303889,.06521004,-.01428382,.99776932],[.99765729,-.01847844,-.06586719,.01938464,.99972568,.01314546,.06560621,-.01439148,.99774181],[.99763295,-.01837205,-.06626429,.01929086,.99972608,.01325271,.06600266,-.01449964,.99771409],[.99760847,-.0182641,-.06666161,.01919565,.99972647,.01336065,.06639936,-.01460831,.99768618],[.99758382,-.01815458,-.06705916,.01909901,.99972687,.01346928,.06679631,-.0147175,.99765808],[.99755902,-.0180435,-.06745691,.01900093,.99972726,.01357859,.0671935,-.01482719,.99762978],[.99753406,-.01793085,-.06785485,.01890142,.99972764,.01368859,.06759092,-.01493739,.99760129],[.99750895,-.01781664,-.06825298,.01880046,.99972802,.01379928,.06798856,-.01504809,.99757261],[.99748367,-.01770085,-.06865129,.01869808,.9997284,.01391066,.06838642,-.0151593,.99754373],[.99745825,-.01758349,-.06904977,.01859425,.99972877,.01402273,.06878447,-.01527102,.99751466],[.99743266,-.01746457,-.06944839,.01848899,.99972914,.0141355,.06918271,-.01538324,.99748539],[.99740692,-.01734407,-.06984717,.01838229,.99972949,.01424896,.06958114,-.01549596,.99745593],[.99738102,-.017222,-.07024607,.01827416,.99972984,.01436312,.06997973,-.01560919,.99742628],[.99735496,-.01709835,-.0706451,.01816458,.99973018,.01447798,.07037849,-.01572292,.99739644],[.99732875,-.01697313,-.07104424,.01805357,.99973051,.01459353,.0707774,-.01583715,.9973664],[.99730238,-.01684633,-.07144349,.01794112,.99973083,.01470979,.07117645,-.01595188,.99733618],[.99727585,-.01671796,-.07184283,.01782723,.99973114,.01482674,.07157564,-.01606711,.99730576],[.99724916,-.01658801,-.07224225,.0177119,.99973144,.0149444,.07197495,-.01618284,.99727515],[.99722232,-.01645649,-.07264174,.01759513,.99973173,.01506277,.07237437,-.01629907,.99724435],[.99719533,-.01632338,-.07304129,.01747692,.999732,.01518183,.0727739,-.01641579,.99721336],[.99716817,-.0161887,-.07344089,.01735728,.99973226,.01530161,.07317352,-.01653301,.99718218],[.99714086,-.01605243,-.07384054,.0172362,.9997325,.01542208,.07357322,-.01665072,.99715081],[.99711339,-.01591459,-.07424021,.01711367,.99973273,.01554327,.07397301,-.01676893,.99711925],[.99708577,-.01577517,-.07463991,.01698971,.99973294,.01566517,.07437286,-.01688763,.9970875],[.99705799,-.01563416,-.07503962,.01686432,.99973313,.01578778,.07477276,-.01700682,.99705557],[.99703005,-.01549158,-.07543933,.01673748,.99973331,.01591109,.07517272,-.0171265,.99702344],[.99700196,-.01534742,-.07583903,.01660921,.99973347,.01603512,.07557271,-.01724668,.99699113],[.99697371,-.01520167,-.0762387,.0164795,.99973361,.01615987,.07597274,-.01736734,.99695863],[.9969453,-.01505434,-.07663835,.01634835,.99973372,.01628532,.07637278,-.01748849,.99692595],[.99691674,-.01490543,-.07703796,.01621577,.99973382,.0164115,.07677284,-.01761013,.99689308],[.99688802,-.01475494,-.07743752,.01608175,.99973389,.01653838,.07717289,-.01773225,.99686003],[.99685914,-.01460287,-.07783702,.0159463,.99973394,.01666599,.07757294,-.01785486,.99682679],[.99683011,-.01444921,-.07823646,.01580941,.99973397,.01679431,.07797298,-.01797795,.99679336],[.99680093,-.01429398,-.07863581,.01567109,.99973397,.01692335,.07837299,-.01810152,.99675976],[.99677159,-.01413716,-.07903507,.01553133,.99973395,.01705312,.07877296,-.01822558,.99672596],[.99674209,-.01397876,-.07943424,.01539014,.9997339,.0171836,.07917289,-.01835012,.99669199],[.99671244,-.01381878,-.07983329,.01524752,.99973382,.0173148,.07957277,-.01847514,.99665784],[.99668263,-.01365721,-.08023223,.01510347,.99973371,.01744672,.07997259,-.01860063,.9966235],[.99665267,-.01349407,-.08063104,.01495799,.99973358,.01757937,.08037234,-.01872661,.99658898],[.99662255,-.01332935,-.08102971,.01481107,.99973341,.01771274,.08077201,-.01885306,.99655429],[.99659228,-.01316304,-.08142823,.01466273,.99973321,.01784684,.08117159,-.01897998,.99651941],[.99656186,-.01299516,-.0818266,.01451296,.99973298,.01798166,.08157108,-.01910738,.99648435],[.99653128,-.01282569,-.0822248,.01436176,.99973272,.01811721,.08197046,-.01923526,.99644912],[.99650054,-.01265465,-.08262282,.01420914,.99973242,.01825348,.08236972,-.0193636,.99641371],[.99646965,-.01248203,-.08302066,.01405509,.99973209,.01839048,.08276887,-.01949242,.99637812],[.99643861,-.01230783,-.0834183,.01389962,.99973172,.01852821,.08316788,-.01962171,.99634236],[.99640741,-.01213205,-.08381574,.01374272,.99973131,.01866667,.08356675,-.01975146,.99630642],[.99637606,-.01195469,-.08421296,.0135844,.99973087,.01880585,.08396548,-.01988168,.9962703],[.99634456,-.01177576,-.08460996,.01342466,.99973038,.01894577,.08436405,-.02001237,.99623402],[.99631291,-.01159526,-.08500672,.0132635,.99972986,.01908642,.08476245,-.02014353,.99619755],[.9962811,-.01141317,-.08540325,.01310092,.99972929,.01922779,.08516068,-.02027515,.99616092],[.99624914,-.01122952,-.08579952,.01293692,.99972868,.0193699,.08555872,-.02040723,.99612411],[.99621702,-.01104429,-.08619553,.01277151,.99972803,.01951274,.08595658,-.02053978,.99608714],[.99618476,-.01085749,-.08659127,.01260468,.99972734,.01965632,.08635424,-.02067278,.99604999],[.99615234,-.01066911,-.08698673,.01243644,.9997266,.01980063,.08675169,-.02080625,.99601267],[.99611977,-.01047917,-.0873819,.01226678,.99972581,.01994567,.08714892,-.02094017,.99597519],[.99608705,-.01028765,-.08777677,.01209572,.99972498,.02009144,.08754594,-.02107455,.99593753],[.99605417,-.01009457,-.08817134,.01192324,.99972409,.02023795,.08794272,-.02120938,.99589971],[.99602115,-.00989992,-.08856559,.01174935,.99972316,.0203852,.08833926,-.02134468,.99586173],[.99598797,-.0097037,-.08895951,.01157406,.99972218,.02053318,.08873555,-.02148042,.99582358],[.99595465,-.00950591,-.0893531,.01139736,.99972114,.02068189,.08913158,-.02161662,.99578526],[.99592117,-.00930657,-.08974635,.01121926,.99972005,.02083135,.08952735,-.02175327,.99574678],[.99588755,-.00910565,-.09013924,.01103975,.99971891,.02098153,.08992285,-.02189036,.99570814],[.99585377,-.00890318,-.09053177,.01085885,.99971771,.02113246,.09031807,-.02202791,.99566933],[.99581984,-.00869914,-.09092393,.01067654,.99971646,.02128412,.090713,-.02216591,.99563037],[.99578577,-.00849355,-.09131572,.01049284,.99971515,.02143652,.09110763,-.02230435,.99559124],[.99575155,-.00828639,-.09170711,.01030774,.99971378,.02158966,.09150196,-.02244323,.99555195],[.99571717,-.00807768,-.09209811,.01012124,.99971235,.02174354,.09189598,-.02258256,.99551251],[.99568265,-.00786741,-.09248871,.00993335,.99971086,.02189816,.09228968,-.02272234,.99547291],[.99564798,-.00765559,-.09287889,.00974407,.99970931,.02205351,.09268305,-.02286255,.99543315],[.99561316,-.00744221,-.09326864,.0095534,.99970769,.0222096,.09307609,-.02300321,.99539324],[.9955782,-.00722728,-.09365797,.00936135,.99970601,.02236644,.09346878,-.0231443,.99535317],[.99554309,-.0070108,-.09404685,.0091679,.99970427,.02252401,.09386113,-.02328583,.99531295],[.99550783,-.00679278,-.09443529,.00897308,.99970245,.02268232,.09425311,-.0234278,.99527257],[.99547242,-.0065732,-.09482327,.00877687,.99970057,.02284137,.09464473,-.0235702,.99523204],[.99543687,-.00635208,-.09521078,.00857928,.99969863,.02300116,.09503598,-.02371304,.99519137],[.99540117,-.00612942,-.09559782,.00838031,.99969661,.02316169,.09542685,-.02385631,.99515054],[.99536532,-.00590521,-.09598437,.00817996,.99969452,.02332296,.09581733,-.02400001,.99510956],[.99532933,-.00567947,-.09637044,.00797824,.99969235,.02348497,.09620741,-.02414414,.99506844],[.9952932,-.00545218,-.09675601,.00777515,.99969012,.02364772,.09659709,-.02428871,.99502717],[.99525692,-.00522336,-.09714106,.00757068,.99968781,.02381121,.09698636,-.02443369,.99498575],[.99522049,-.004993,-.0975256,.00736485,.99968542,.02397544,.09737521,-.02457911,.99494419],[.99518392,-.00476111,-.09790962,.00715765,.99968295,.02414041,.09776364,-.02472495,.99490248],[.99514721,-.00452768,-.0982931,.00694908,.99968041,.02430612,.09815164,-.02487122,.99486063],[.99511035,-.00429273,-.09867605,.00673915,.99967779,.02447257,.0985392,-.0250179,.99481864],[.99507335,-.00405625,-.09905844,.00652787,.99967508,.02463976,.09892631,-.02516501,.99477651],[.99503621,-.00381824,-.09944028,.00631522,.99967229,.02480769,.09931297,-.02531254,.99473424],[.99499892,-.0035787,-.09982155,.00610121,.99966942,.02497637,.09969917,-.02546049,.99469183],[.99496149,-.00333765,-.10020225,.00588585,.99966647,.02514578,.1000849,-.02560886,.99464928],[.99492392,-.00309507,-.10058237,.00566914,.99966343,.02531593,.10047016,-.02575764,.9946066],[.99488621,-.00285098,-.10096189,.00545108,.9996603,.02548682,.10085493,-.02590684,.99456378],[.99484836,-.00260537,-.10134082,.00523167,.99965708,.02565845,.10123922,-.02605645,.99452083],[.99481036,-.00235824,-.10171915,.00501092,.99965377,.02583082,.10162301,-.02620647,.99447774],[.99477223,-.00210961,-.10209686,.00478882,.99965037,.02600393,.10200631,-.02635691,.99443453],[.99473395,-.00185946,-.10247395,.00456538,.99964688,.02617777,.10238909,-.02650775,.99439118],[.99469554,-.00160781,-.10285041,.00434061,.99964329,.02635236,.10277136,-.02665901,.9943477],[.99465698,-.00135465,-.10322624,.00411449,.99963961,.02652768,.1031531,-.02681067,.99430409],[.99461829,-.00109998,-.10360142,.00388705,.99963583,.02670375,.10353432,-.02696274,.99426036],[.99457945,-84382e-8,-.10397595,.00365827,.99963196,.02688055,.103915,-.02711521,.99421649],[.99454048,-58616e-8,-.10434982,.00342816,.99962798,.02705808,.10429514,-.02726809,.99417251],[.99450137,-327e-6,-.10472302,.00319672,.99962391,.02723636,.10467473,-.02742137,.9941284],[.99446213,-6634e-8,-.10509555,.00296396,.99961973,.02741537,.10505376,-.02757505,.99408416],[.99442274,1958e-7,-.10546739,.00272988,.99961545,.02759512,.10543224,-.02772913,.99403981],[.99438322,45944e-8,-.10583855,.00249448,.99961107,.0277756,.10581014,-.02788361,.99399533],[.99434356,72456e-8,-.106209,.00225776,.99960658,.02795683,.10618748,-.02803848,.99395073],[.99430377,99117e-8,-.10657876,.00201973,.99960199,.02813878,.10656423,-.02819376,.99390602],[.99426384,.00125926,-.1069478,.00178038,.99959728,.02832147,.10694039,-.02834942,.99386119],[.99422377,.00152882,-.10731612,.00153973,.99959247,.0285049,.10731596,-.02850549,.99381624],[.99418357,.00179987,-.10768371,.00129776,.99958754,.02868906,.10769093,-.02866194,.99377118],[.99414324,.00207239,-.10805057,.0010545,.9995825,.02887395,.1080653,-.02881879,.993726],[.99410277,.00234638,-.10841669,80993e-8,.99957735,.02905958,.10843905,-.02897602,.99368071],[.99406217,.00262184,-.10878206,56406e-8,.99957209,.02924594,.10881219,-.02913364,.99363531],[.99402143,.00289877,-.10914667,3169e-7,.9995667,.02943303,.1091847,-.02929165,.99358981],[.99398056,.00317717,-.10951052,6844e-8,.9995612,.02962086,.10955658,-.02945005,.99354419],[.99393956,.00345702,-.1098736,-18131e-8,.99955558,.02980941,.10992782,-.02960883,.99349846],[.99389842,.00373833,-.1102359,-43235e-8,.99954984,.0299987,.11029843,-.029768,.99345263],[.99385715,.0040211,-.11059742,-68468e-8,.99954398,.03018871,.11066838,-.02992754,.99340669],[.99381575,.00430532,-.11095815,-93829e-8,.999538,.03037946,.11103768,-.03008747,.99336065],[.99377422,.004591,-.11131808,-.00119318,.99953189,.03057093,.11140632,-.03024778,.9933145],[.99373256,.00487812,-.1116772,-.00144935,.99952565,.03076313,.11177429,-.03040847,.99326826],[.99369077,.00516668,-.11203551,-.00170679,.99951929,.03095606,.1121416,-.03056953,.99322191],[.99364885,.00545669,-.11239301,-.00196551,.9995128,.03114972,.11250822,-.03073097,.99317547],[.9936068,.00574814,-.11274967,-.00222549,.99950618,.0313441,.11287416,-.03089279,.99312892],[.99356462,.00604102,-.11310551,-.00248674,.99949942,.0315392,.11323942,-.03105497,.99308228],[.99352231,.00633534,-.1134605,-.00274926,.99949254,.03173504,.11360398,-.03121753,.99303555],[.99347987,.00663109,-.11381465,-.00301304,.99948552,.03193159,.11396784,-.03138047,.99298872],[.9934373,.00692826,-.11416795,-.00327808,.99947836,.03212887,.11433099,-.03154377,.9929418],[.99339461,.00722686,-.11452039,-.00354437,.99947107,.03232687,.11469343,-.03170744,.99289479],[.99335179,.00752689,-.11487196,-.00381191,.99946363,.03252559,.11505516,-.03187147,.99284768],[.99330884,.00782833,-.11522266,-.00408071,.99945606,.03272504,.11541616,-.03203588,.99280049],[.99326577,.00813118,-.11557248,-.00435075,.99944835,.0329252,.11577644,-.03220065,.99275321],[.99322257,.00843545,-.11592141,-.00462204,.99944049,.03312608,.11613598,-.03236578,.99270584],[.99317924,.00874113,-.11626945,-.00489456,.99943249,.03332768,.11649479,-.03253127,.99265839],[.99313579,.00904822,-.1166166,-.00516833,.99942435,.03353,.11685285,-.03269713,.99261085],[.99309221,.00935671,-.11696284,-.00544333,.99941606,.03373303,.11721017,-.03286334,.99256324],[.99304851,.00966659,-.11730817,-.00571957,.99940762,.03393678,.11756673,-.03302992,.99251554],[.99300469,.00997788,-.11765258,-.00599703,.99939902,.03414125,.11792253,-.03319685,.99246776],[.99296074,.01029056,-.11799607,-.00627572,.99939028,.03434642,.11827757,-.03336414,.9924199],[.99291667,.01060463,-.11833863,-.00655563,.99938139,.03455231,.11863184,-.03353178,.99237196],[.99287247,.01092009,-.11868025,-.00683677,.99937234,.03475892,.11898533,-.03369978,.99232395],[.99282816,.01123693,-.11902093,-.00711912,.99936314,.03496623,.11933804,-.03386813,.99227586],[.99278372,.01155515,-.11936066,-.00740268,.99935378,.03517425,.11968997,-.03403683,.9922277],[.99273916,.01187475,-.11969944,-.00768746,.99934426,.03538298,.12004112,-.03420589,.99217946],[.99269447,.01219572,-.12003726,-.00797344,.99933458,.03559242,.12039146,-.03437529,.99213116],[.99264967,.01251807,-.12037412,-.00826063,.99932474,.03580256,.12074101,-.03454504,.99208278],[.99260475,.01284178,-.12071,-.00854902,.99931474,.03601341,.12108976,-.03471513,.99203434],[.9925597,.01316686,-.1210449,-.00883862,.99930457,.03622497,.12143769,-.03488558,.99198583],[.99251454,.0134933,-.12137882,-.0091294,.99929424,.03643723,.12178481,-.03505636,.99193725],[.99246926,.01382109,-.12171175,-.00942138,.99928374,.03665019,.12213112,-.03522749,.99188861],[.99242386,.01415024,-.12204368,-.00971455,.99927308,.03686385,.1224766,-.03539896,.9918399],[.99237834,.01448074,-.12237462,-.01000891,.99926224,.03707821,.12282125,-.03557078,.99179114],[.9923327,.01481258,-.12270454,-.01030445,.99925123,.03729327,.12316508,-.03574293,.99174231],[.99228694,.01514577,-.12303346,-.01060116,.99924006,.03750903,.12350806,-.03591542,.99169342],[.99224107,.0154803,-.12336135,-.01089906,.9992287,.03772548,.12385021,-.03608825,.99164447],[.99219508,.01581617,-.12368822,-.01119813,.99921717,.03794263,.12419151,-.03626141,.99159547],[.99214897,.01615337,-.12401407,-.01149837,.99920547,.03816047,.12453195,-.03643491,.99154641],[.99210275,.01649189,-.12433888,-.01179978,.99919358,.038379,.12487155,-.03660875,.9914973],[.99205641,.01683175,-.12466264,-.01210235,.99918152,.03859823,.12521028,-.03678291,.99144813],[.99200995,.01717292,-.12498536,-.01240608,.99916928,.03881815,.12554816,-.03695741,.99139892],[.99196338,.01751542,-.12530704,-.01271097,.99915685,.03903875,.12588516,-.03713224,.99134965],[.9919167,.01785922,-.12562765,-.01301701,.99914424,.03926004,.1262213,-.0373074,.99130033],[.9918699,.01820434,-.1259472,-.01332421,.99913144,.03948202,.12655655,-.03748288,.99125096],[.99182299,.01855077,-.12626569,-.01363255,.99911846,.03970468,.12689093,-.03765869,.99120155],[.99177597,.0188985,-.1265831,-.01394204,.99910529,.03992803,.12722443,-.03783483,.99115209],[.99172883,.01924753,-.12689944,-.01425267,.99909192,.04015206,.12755703,-.0380113,.99110259],[.99168158,.01959786,-.12721469,-.01456443,.99907837,.04037677,.12788874,-.03818809,.99105305],[.99163421,.01994948,-.12752885,-.01487733,.99906463,.04060215,.12821956,-.0383652,.99100346],[.99158674,.02030239,-.12784193,-.01519137,.99905069,.04082822,.12854948,-.03854263,.99095383],[.99153915,.02065658,-.1281539,-.01550652,.99903655,.04105496,.12887849,-.03872038,.99090417],[.99149145,.02101206,-.12846477,-.01582281,.99902222,.04128238,.12920659,-.03889845,.99085446],[.99144364,.02136881,-.12877454,-.01614021,.99900769,.04151047,.12953378,-.03907684,.99080472],[.99139572,.02172683,-.12908319,-.01645874,.99899297,.04173923,.12986006,-.03925555,.99075495],[.99134769,.02208613,-.12939072,-.01677837,.99897804,.04196866,.13018541,-.03943457,.99070514],[.99129955,.02244669,-.12969713,-.01709912,.9989629,.04219876,.13050984,-.03961391,.9906553],[.9912513,.02280851,-.13000241,-.01742097,.99894757,.04242953,.13083335,-.03979356,.99060542],[.99120294,.02317159,-.13030656,-.01774393,.99893203,.04266097,.13115592,-.03997353,.99055552],[.99115448,.02353592,-.13060958,-.01806799,.99891628,.04289307,.13147756,-.0401538,.99050559],[.9911059,.02390151,-.13091145,-.01839315,.99890032,.04312583,.13179826,-.04033439,.99045563],[.99105722,.02426833,-.13121217,-.0187194,.99888416,.04335925,.13211802,-.04051528,.99040564],[.99100843,.02463641,-.13151175,-.01904674,.99886778,.04359333,.13243683,-.04069649,.99035563],[.99095953,.02500572,-.13181017,-.01937516,.99885119,.04382807,.1327547,-.040878,.9903056],[.99091053,.02537626,-.13210743,-.01970467,.99883439,.04406347,.13307161,-.04105982,.99025554],[.99086142,.02574803,-.13240352,-.02003526,.99881737,.04429952,.13338757,-.04124194,.99020546],[.9908122,.02612103,-.13269845,-.02036693,.99880014,.04453622,.13370256,-.04142437,.99015536],[.99076288,.02649525,-.1329922,-.02069967,.99878268,.04477358,.1340166,-.0416071,.99010525],[.99071345,.02687069,-.13328478,-.02103347,.99876501,.04501158,.13432967,-.04179014,.99005511],[.99066391,.02724734,-.13357617,-.02136835,.99874712,.04525023,.13464177,-.04197347,.99000496],[.99061427,.0276252,-.13386638,-.02170428,.99872901,.04548953,.1349529,-.04215711,.98995479],[.99056453,.02800427,-.1341554,-.02204128,.99871067,.04572947,.13526305,-.04234104,.98990461],[.99051468,.02838454,-.13444322,-.02237933,.9986921,.04597006,.13557222,-.04252527,.98985442],[.99046473,.028766,-.13472984,-.02271843,.99867331,.04621129,.13588041,-.0427098,.98980422],[.99041468,.02914866,-.13501526,-.02305857,.9986543,.04645315,.13618762,-.04289462,.989754],[.99036452,.02953251,-.13529948,-.02339977,.99863505,.04669566,.13649384,-.04307974,.98970378],[.99031426,.02991754,-.13558248,-.023742,.99861558,.04693879,.13679907,-.04326516,.98965355],[.9902639,.03030375,-.13586427,-.02408527,.99859587,.04718257,.1371033,-.04345087,.98960331],[.99021343,.03069114,-.13614484,-.02442957,.99857593,.04742697,.13740654,-.04363686,.98955306],[.99016286,.03107969,-.13642418,-.02477491,.99855575,.04767201,.13770878,-.04382315,.98950282],[.99011219,.03146942,-.1367023,-.02512127,.99853534,.04791767,.13801002,-.04400973,.98945256],[.99006142,.03186031,-.13697919,-.02546865,.99851469,.04816396,.13831025,-.0441966,.98940231],[.99001055,.03225236,-.13725484,-.02581705,.9984938,.04841087,.13860947,-.04438376,.98935206],[.98995958,.03264556,-.13752925,-.02616647,.99847267,.04865841,.13890768,-.04457121,.98930181],[.98990851,.03303991,-.13780243,-.02651689,.9984513,.04890657,.13920488,-.04475894,.98925155],[.98985734,.03343541,-.13807435,-.02686833,.99842969,.04915535,.13950106,-.04494695,.98920131],[.98980606,.03383205,-.13834503,-.02722077,.99840783,.04940474,.13979623,-.04513525,.98915106],[.98975469,.03422983,-.13861446,-.02757421,.99838573,.04965475,.14009037,-.04532383,.98910082],[.98970322,.03462873,-.13888263,-.02792865,.99836338,.04990537,.14038349,-.0455127,.98905059],[.98965165,.03502877,-.13914953,-.02828408,.99834079,.0501566,.14067558,-.04570185,.98900037],[.98959998,.03542993,-.13941518,-.0286405,.99831794,.05040844,.14096664,-.04589127,.98895015],[.98954822,.03583221,-.13967956,-.0289979,.99829484,.05066089,.14125667,-.04608098,.98889994],[.98949635,.03623561,-.13994267,-.02935629,.9982715,.05091395,.14154567,-.04627097,.98884975],[.98944439,.03664012,-.1402045,-.02971566,.99824789,.0511676,.14183364,-.04646123,.98879956],[.98939233,.03704573,-.14046506,-.030076,.99822404,.05142186,.14212056,-.04665177,.98874939],[.98934017,.03745244,-.14072434,-.03043731,.99819992,.05167672,.14240644,-.04684258,.98869924],[.98928792,.03786025,-.14098233,-.03079959,.99817555,.05193217,.14269128,-.04703367,.98864909],[.98923557,.03826916,-.14123904,-.03116283,.99815092,.05218822,.14297508,-.04722504,.98859897],[.98918312,.03867915,-.14149446,-.03152703,.99812604,.05244487,.14325783,-.04741668,.98854886],[.98913057,.03909022,-.14174858,-.03189219,.99810089,.0527021,.14353952,-.04760859,.98849877],[.98907793,.03950237,-.14200141,-.03225829,.99807547,.05295992,.14382017,-.04780077,.98844871],[.9890252,.0399156,-.14225295,-.03262535,.9980498,.05321833,.14409976,-.04799322,.98839866],[.98897237,.0403299,-.14250317,-.03299335,.99802385,.05347732,.1443783,-.04818594,.98834863],[.98891944,.04074526,-.1427521,-.03336229,.99799765,.0537369,.14465578,-.04837893,.98829863],[.98886642,.04116168,-.14299972,-.03373217,.99797117,.05399705,.1449322,-.04857218,.98824865],[.9888133,.04157916,-.14324602,-.03410298,.99794443,.05425779,.14520756,-.04876571,.9881987],[.98876009,.04199769,-.14349102,-.03447472,.99791741,.0545191,.14548186,-.0489595,.98814877],[.98870679,.04241727,-.1437347,-.03484739,.99789013,.05478098,.14575509,-.04915355,.98809887],[.98865339,.04283789,-.14397706,-.03522097,.99786257,.05504344,.14602726,-.04934787,.988049],[.9885999,.04325954,-.14421809,-.03559547,.99783473,.05530646,.14629836,-.04954245,.98799916],[.98854631,.04368223,-.14445781,-.03597089,.99780663,.05557005,.14656838,-.04973729,.98794935],[.98849263,.04410595,-.1446962,-.03634722,.99777824,.05583421,.14683734,-.0499324,.98789957],[.98843885,.04453069,-.14493325,-.03672445,.99774958,.05609893,.14710522,-.05012777,.98784982],[.98838499,.04495644,-.14516898,-.03710258,.99772064,.05636421,.14737202,-.05032339,.9878001],[.98833103,.04538322,-.14540337,-.03748162,.99769142,.05663005,.14763775,-.05051928,.98775042],[.98827698,.045811,-.14563643,-.03786154,.99766192,.05689644,.1479024,-.05071543,.98770078],[.98822283,.04623978,-.14586815,-.03824236,.99763213,.05716339,.14816598,-.05091183,.98765117],[.98816859,.04666957,-.14609853,-.03862406,.99760206,.05743089,.14842847,-.05110849,.9876016],[.98811427,.04710034,-.14632756,-.03900665,.99757171,.05769894,.14868988,-.0513054,.98755206],[.98805984,.04753211,-.14655525,-.03939011,.99754107,.05796754,.1489502,-.05150257,.98750257],[.98800533,.04796487,-.14678159,-.03977445,.99751014,.05823668,.14920944,-.05169999,.98745311],[.98795073,.0483986,-.14700658,-.04015966,.99747893,.05850636,.14946759,-.05189767,.9874037],[.98789603,.04883331,-.14723022,-.04054573,.99744742,.05877659,.14972466,-.0520956,.98735433],[.98784125,.04926899,-.1474525,-.04093267,.99741562,.05904735,.14998063,-.05229378,.987305],[.98778637,.04970564,-.14767343,-.04132047,.99738354,.05931865,.15023552,-.05249221,.98725572],[.9877314,.05014324,-.147893,-.04170912,.99735115,.05959048,.15048932,-.0526909,.98720648],[.98767634,.05058181,-.14811121,-.04209862,.99731848,.05986284,.15074202,-.05288983,.98715729],[.98762119,.05102132,-.14832806,-.04248897,.99728551,.06013573,.15099363,-.05308901,.98710814],[.98756595,.05146178,-.14854355,-.04288016,.99725224,.06040914,.15124415,-.05328844,.98705904],[.98751062,.05190318,-.14875766,-.04327219,.99721867,.06068308,.15149357,-.05348811,.98700999],[.98745519,.05234552,-.14897042,-.04366506,.99718481,.06095754,.15174189,-.05368804,.98696099],[.98739968,.05278879,-.1491818,-.04405875,.99715064,.06123252,.15198912,-.0538882,.98691204],[.98734408,.05323299,-.14939181,-.04445328,.99711618,.06150801,.15223525,-.05408862,.98686314],[.98728839,.05367811,-.14960045,-.04484862,.99708141,.06178402,.15248028,-.05428927,.98681429],[.98723261,.05412414,-.14980772,-.04524479,.99704634,.06206054,.15272421,-.05449017,.98676549],[.98717674,.05457109,-.15001361,-.04564176,.99701096,.06233757,.15296704,-.05469132,.98671675],[.98712078,.05501894,-.15021812,-.04603955,.99697528,.06261511,.15320877,-.0548927,.98666806],[.98706473,.0554677,-.15042126,-.04643815,.99693929,.06289315,.1534494,-.05509433,.98661943],[.98700859,.05591735,-.15062301,-.04683755,.99690299,.0631717,.15368892,-.0552962,.98657085],[.98695236,.05636789,-.15082338,-.04723774,.99686639,.06345074,.15392735,-.0554983,.98652233],[.98689605,.05681933,-.15102238,-.04763874,.99682948,.06373028,.15416467,-.05570065,.98647387],[.98683964,.05727164,-.15121998,-.04804052,.99679225,.06401031,.15440088,-.05590323,.98642546],[.98678315,.05772483,-.15141621,-.04844308,.99675471,.06429084,.154636,-.05610605,.98637712],[.98672656,.05817889,-.15161104,-.04884643,.99671686,.06457186,.15487,-.05630911,.98632883],[.98666989,.05863382,-.15180449,-.04925056,.9966787,.06485336,.1551029,-.0565124,.98628061],[.98661313,.05908961,-.15199655,-.04965546,.99664022,.06513535,.1553347,-.05671593,.98623244],[.98655628,.05954626,-.15218722,-.05006114,.99660142,.06541782,.15556539,-.0569197,.98618434],[.98649934,.06000376,-.15237651,-.05046757,.99656231,.06570077,.15579497,-.05712369,.9861363],[.98644231,.0604621,-.15256439,-.05087477,.99652288,.0659842,.15602345,-.05732793,.98608833],[.9863852,.06092129,-.15275089,-.05128273,.99648313,.0662681,.15625082,-.05753239,.98604042],[.986328,.06138131,-.15293599,-.05169144,.99644306,.06655247,.15647709,-.05773709,.98599257],[.9862707,.06184217,-.1531197,-.0521009,.99640266,.06683732,.15670225,-.05794201,.98594479],[.98621332,.06230385,-.15330202,-.0525111,.99636195,.06712263,.1569263,-.05814717,.98589708],[.98615586,.06276635,-.15348294,-.05292205,.99632091,.0674084,.15714924,-.05835256,.98584943],[.9860983,.06322966,-.15366246,-.05333373,.99627955,.06769464,.15737108,-.05855818,.98580185],[.98604066,.06369379,-.15384059,-.05374614,.99623787,.06798134,.15759181,-.05876402,.98575434],[.98598292,.06415873,-.15401731,-.05415928,.99619586,.06826849,.15781143,-.0589701,.98570689],[.9859251,.06462446,-.15419264,-.05457315,.99615352,.0685561,.15802994,-.0591764,.98565952],[.98586719,.06509099,-.15436657,-.05498774,.99611085,.06884416,.15824735,-.05938293,.98561222],[.9858092,.06555831,-.15453911,-.05540304,.99606786,.06913267,.15846366,-.05958968,.98556498],[.98575111,.06602642,-.15471024,-.05581906,.99602453,.06942162,.15867885,-.05979666,.98551782],[.98569294,.0664953,-.15487997,-.05623578,.99598088,.06971102,.15889294,-.06000387,.98547073],[.98563468,.06696496,-.1550483,-.0566532,.99593689,.07000086,.15910593,-.06021129,.98542372],[.98557633,.06743539,-.15521523,-.05707133,.99589257,.07029114,.15931781,-.06041895,.98537677],[.98551789,.06790659,-.15538076,-.05749015,.99584792,.07058186,.15952858,-.06062682,.9853299],[.98545937,.06837854,-.15554489,-.05790966,.99580294,.07087301,.15973825,-.06083492,.98528311],[.98540075,.06885125,-.15570762,-.05832986,.99575762,.07116459,.15994682,-.06104324,.98523639],[.98534205,.0693247,-.15586894,-.05875073,.99571196,.0714566,.16015428,-.06125178,.98518974],[.98528326,.0697989,-.15602887,-.05917229,.99566597,.07174904,.16036064,-.06146054,.98514317],[.98522438,.07027384,-.15618739,-.05959452,.99561964,.0720419,.16056589,-.06166952,.98509668],[.98516542,.07074951,-.15634451,-.06001742,.99557297,.07233518,.16077005,-.06187872,.98505026],[.98510636,.0712259,-.15650023,-.06044099,.99552596,.07262887,.1609731,-.06208814,.98500392],[.98504722,.07170303,-.15665455,-.06086521,.99547861,.07292299,.16117505,-.06229777,.98495766],[.98498799,.07218086,-.15680747,-.0612901,.99543092,.07321752,.1613759,-.06250763,.98491148],[.98492867,.07265941,-.15695898,-.06171563,.99538289,.07351245,.16157566,-.0627177,.98486537],[.98486926,.07313867,-.1571091,-.06214182,.99533452,.0738078,.16177431,-.06292799,.98481934],[.98480977,.07361863,-.15725781,-.06256864,.9952858,.07410355,.16197187,-.06313849,.9847734],[.98475018,.07409928,-.15740512,-.06299611,.99523674,.0743997,.16216833,-.06334921,.98472753],[.98469051,.07458063,-.15755104,-.06342421,.99518734,.07469625,.16236369,-.06356014,.98468175],[.98463075,.07506266,-.15769555,-.06385295,.99513759,.0749932,.16255796,-.06377129,.98463604],[.9845709,.07554537,-.15783867,-.06428231,.99508749,.07529055,.16275114,-.06398265,.98459042],[.98451096,.07602875,-.15798039,-.06471229,.99503705,.07558828,.16294322,-.06419422,.98454487],[.98445093,.07651281,-.1581207,-.06514289,.99498626,.07588641,.16313421,-.064406,.98449941],[.98439081,.07699753,-.15825963,-.06557411,.99493512,.07618492,.16332411,-.064618,.98445404],[.98433061,.07748291,-.15839715,-.06600593,.99488363,.07648381,.16351292,-.06483021,.98440874],[.98427031,.07796894,-.15853328,-.06643836,.9948318,.07678309,.16370064,-.06504263,.98436353],[.98420993,.07845562,-.15866801,-.06687139,.99477961,.07708275,.16388728,-.06525526,.9843184],[.98414945,.07894294,-.15880135,-.06730502,.99472707,.07738278,.16407283,-.06546809,.98427335],[.98408889,.07943091,-.15893329,-.06773923,.99467418,.07768319,.16425729,-.06568114,.98422839],[.98402823,.0799195,-.15906385,-.06817404,.99462093,.07798396,.16444067,-.0658944,.98418352],[.98396749,.08040872,-.159193,-.06860943,.99456734,.07828511,.16462297,-.06610786,.98413872],[.98390666,.08089857,-.15932077,-.0690454,.99451339,.07858662,.16480419,-.06632153,.98409402],[.98384574,.08138903,-.15944715,-.06948194,.99445908,.07888849,.16498432,-.06653541,.9840494],[.98378472,.0818801,-.15957214,-.06991905,.99440442,.07919073,.16516338,-.0667495,.98400486],[.98372362,.08237177,-.15969574,-.07035673,.99434941,.07949332,.16534137,-.06696379,.98396041],[.98366243,.08286405,-.15981795,-.07079497,.99429403,.07979627,.16551828,-.06717828,.98391604],[.98360114,.08335692,-.15993878,-.07123377,.99423831,.08009957,.16569411,-.06739298,.98387176],[.98353977,.08385038,-.16005822,-.07167312,.99418222,.08040321,.16586888,-.06760789,.98382757],[.98347831,.08434443,-.16017628,-.07211302,.99412578,.08070721,.16604257,-.067823,.98378346],[.98341675,.08483905,-.16029296,-.07255346,.99406897,.08101155,.1662152,-.06803831,.98373945],[.9833551,.08533425,-.16040825,-.07299444,.99401181,.08131623,.16638676,-.06825382,.98369551],[.98329336,.08583001,-.16052217,-.07343595,.99395429,.08162126,.16655725,-.06846954,.98365167],[.98323154,.08632634,-.16063471,-.073878,.99389641,.08192661,.16672669,-.06868546,.98360791],[.98316962,.08682322,-.16074587,-.07432057,.99383817,.08223231,.16689506,-.06890158,.98356424],[.9831076,.08732066,-.16085566,-.07476367,.99377956,.08253833,.16706237,-.0691179,.98352066],[.9830455,.08781864,-.16096407,-.07520728,.9937206,.08284468,.16722862,-.06933442,.98347716],[.9829833,.08831717,-.16107111,-.0756514,.99366127,.08315136,.16739382,-.06955114,.98343375],[.98292101,.08881623,-.16117679,-.07609603,.99360158,.08345836,.16755797,-.06976806,.98339043],[.98285863,.08931582,-.16128109,-.07654117,.99354152,.08376568,.16772106,-.06998518,.9833472],[.98279616,.08981593,-.16138402,-.07698681,.99348111,.08407332,.1678831,-.0702025,.98330406],[.9827336,.09031656,-.1614856,-.07743294,.99342032,.08438128,.1680441,-.07042002,.983261],[.98267094,.09081771,-.1615858,-.07787956,.99335918,.08468955,.16820405,-.07063773,.98321804],[.98260819,.09131936,-.16168465,-.07832666,.99329767,.08499813,.16836296,-.07085564,.98317516],[.98254534,.09182152,-.16178213,-.07877425,.99323579,.08530702,.16852083,-.07107375,.98313237],[.9824824,.09232418,-.16187826,-.07922231,.99317354,.08561621,.16867765,-.07129205,.98308967],[.98241937,.09282733,-.16197304,-.07967085,.99311094,.0859257,.16883345,-.07151055,.98304705],[.98235625,.09333096,-.16206645,-.08011985,.99304796,.0862355,.1689882,-.07172924,.98300453],[.98229303,.09383508,-.16215852,-.08056932,.99298461,.08654559,.16914193,-.07194813,.98296209],[.98222971,.09433967,-.16224924,-.08101925,.9929209,.08685598,.16929463,-.07216721,.98291974],[.98216631,.09484473,-.16233861,-.08146963,.99285682,.08716665,.16944629,-.07238649,.98287748],[.9821028,.09535025,-.16242664,-.08192046,.99279238,.08747762,.16959694,-.07260595,.98283531],[.98203921,.09585624,-.16251332,-.08237173,.99272756,.08778888,.16974656,-.07282562,.98279323],[.98197551,.09636268,-.16259866,-.08282345,.99266238,.08810042,.16989516,-.07304547,.98275124],[.98191173,.09686957,-.16268266,-.0832756,.99259682,.08841224,.17004275,-.07326552,.98270933],[.98184784,.0973769,-.16276533,-.08372818,.9925309,.08872434,.17018932,-.07348576,.98266751],[.98178386,.09788466,-.16284666,-.08418119,.9924646,.08903671,.17033488,-.07370618,.98262578],[.98171979,.09839286,-.16292666,-.08463462,.99239794,.08934937,.17047943,-.0739268,.98258414],[.98165562,.09890149,-.16300534,-.08508847,.99233091,.08966229,.17062297,-.07414761,.98254259],[.98159135,.09941054,-.16308268,-.08554273,.9922635,.08997548,.17076551,-.07436861,.98250112],[.98152699,.09992,-.16315871,-.0859974,.99219572,.09028893,.17090704,-.0745898,.98245974],[.98146253,.10042987,-.16323341,-.08645247,.99212758,.09060266,.17104758,-.07481118,.98241845],[.98139797,.10094015,-.16330679,-.08690795,.99205906,.09091664,.17118712,-.07503275,.98237725],[.98133332,.10145082,-.16337886,-.08736381,.99199017,.09123088,.17132567,-.0752545,.98233613],[.98126856,.10196189,-.16344962,-.08782007,.9919209,.09154537,.17146323,-.07547644,.9822951],[.98120371,.10247335,-.16351906,-.08827671,.99185127,.09186012,.1715998,-.07569857,.98225416],[.98113877,.10298519,-.1635872,-.08873373,.99178126,.09217513,.17173539,-.07592089,.9822133],[.98107372,.1034974,-.16365403,-.08919113,.99171088,.09249038,.17187,-.07614339,.98217254],[.98100858,.10400999,-.16371956,-.0896489,.99164013,.09280587,.17200362,-.07636608,.98213185],[.98094333,.10452294,-.16378379,-.09010704,.991569,.09312161,.17213628,-.07658895,.98209126],[.98087799,.10503626,-.16384673,-.09056554,.9914975,.09343759,.17226796,-.07681201,.98205075],[.98081255,.10554992,-.16390837,-.09102439,.99142563,.09375381,.17239867,-.07703525,.98201032],[.98074701,.10606394,-.16396872,-.0914836,.99135339,.09407026,.17252841,-.07725868,.98196998],[.98068137,.1065783,-.16402779,-.09194316,.99128077,.09438695,.17265719,-.07748229,.98192973],[.98061563,.107093,-.16408557,-.09240305,.99120777,.09470387,.17278502,-.07770608,.98188956],[.98054979,.10760804,-.16414207,-.09286329,.99113441,.09502101,.17291188,-.07793006,.98184947],[.98048385,.1081234,-.1641973,-.09332386,.99106067,.09533839,.17303779,-.07815422,.98180947],[.98041781,.10863908,-.16425125,-.09378476,.99098655,.09565598,.17316276,-.07837856,.98176956],[.98035167,.10915507,-.16430393,-.09424598,.99091207,.0959738,.17328677,-.07860309,.98172972],[.98028542,.10967138,-.16435534,-.09470753,.99083721,.09629183,.17340984,-.07882779,.98168997],[.98021908,.110188,-.16440549,-.09516938,.99076197,.09661009,.17353198,-.07905268,.98165031],[.98015263,.11070491,-.16445438,-.09563155,.99068636,.09692855,.17365317,-.07927775,.98161072],[.98008608,.11122211,-.16450201,-.09609402,.99061038,.09724723,.17377344,-.07950299,.98157122],[.98001943,.11173961,-.16454838,-.0965568,.99053402,.09756611,.17389277,-.07972842,.9815318],[.97995268,.11225739,-.16459351,-.09701986,.99045728,.0978852,.17401118,-.07995403,.98149247],[.97988583,.11277544,-.16463739,-.09748322,.99038018,.0982045,.17412866,-.08017981,.98145321],[.97981887,.11329377,-.16468002,-.09794687,.9903027,.098524,.17424522,-.08040578,.98141404],[.97975181,.11381236,-.16472142,-.09841079,.99022484,.09884369,.17436087,-.08063192,.98137494],[.97968464,.11433121,-.16476158,-.09887499,.99014662,.09916358,.17447561,-.08085824,.98133593],[.97961737,.11485032,-.1648005,-.09933947,.99006801,.09948367,.17458944,-.08108474,.981297],[.97955,.11536968,-.1648382,-.09980421,.98998904,.09980395,.17470236,-.08131141,.98125814],[.97948252,.11588928,-.16487468,-.10026921,.98990969,.10012441,.17481439,-.08153826,.98121936],[.97941494,.11640912,-.16490993,-.10073447,.98982996,.10044507,.17492551,-.08176529,.98118067],[.97934726,.11692919,-.16494397,-.10119998,.98974987,.10076591,.17503574,-.08199249,.98114205],[.97927947,.11744949,-.16497679,-.10166573,.9896694,.10108693,.17514509,-.08221987,.98110351],[.97921157,.11797001,-.1650084,-.10213173,.98958855,.10140813,.17525354,-.08244742,.98106504],[.97914357,.11849074,-.16503881,-.10259797,.98950733,.10172951,.17536112,-.08267515,.98102666],[.97907547,.11901169,-.16506801,-.10306444,.98942574,.10205107,.17546781,-.08290305,.98098834],[.97900725,.11953284,-.16509602,-.10353113,.98934378,.10237279,.17557363,-.08313113,.98095011],[.97893894,.12005419,-.16512284,-.10399805,.98926144,.10269469,.17567858,-.08335938,.98091195],[.97887051,.12057573,-.16514846,-.10446519,.98917874,.10301676,.17578267,-.0835878,.98087386],[.97880198,.12109746,-.1651729,-.10493253,.98909566,.10333899,.17588589,-.0838164,.98083585],[.97873334,.12161937,-.16519616,-.10540009,.9890122,.10366138,.17598825,-.08404516,.98079791],[.9786646,.12214146,-.16521824,-.10586785,.98892838,.10398394,.17608976,-.0842741,.98076005],[.97859575,.12266372,-.16523915,-.10633581,.98884418,.10430666,.17619042,-.08450321,.98072226],[.97852679,.12318615,-.16525889,-.10680395,.98875962,.10462953,.17629023,-.08473249,.98068454],[.97845772,.12370874,-.16527747,-.10727229,.98867468,.10495256,.1763892,-.08496195,.98064689],[.97838854,.12423147,-.16529489,-.10774081,.98858937,.10527574,.17648733,-.08519157,.98060931],[.97831926,.12475436,-.16531115,-.10820951,.98850369,.10559907,.17658462,-.08542136,.9805718],[.97824987,.12527739,-.16532626,-.10867838,.98841764,.10592254,.17668109,-.08565133,.98053437],[.97818037,.12580056,-.16534022,-.10914741,.98833122,.10624617,.17677673,-.08588146,.980497],[.97811076,.12632386,-.16535304,-.10961661,.98824443,.10656993,.17687154,-.08611176,.9804597],[.97804104,.12684728,-.16536472,-.11008597,.98815727,.10689384,.17696554,-.08634223,.98042247],[.97797121,.12737083,-.16537527,-.11055548,.98806974,.10721789,.17705873,-.08657286,.9803853],[.97790128,.12789449,-.16538469,-.11102513,.98798184,.10754207,.17715111,-.08680367,.98034821],[.97783123,.12841826,-.16539298,-.11149493,.98789358,.10786639,.17724268,-.08703464,.98031118],[.97776107,.12894213,-.16540016,-.11196487,.98780495,.10819084,.17733345,-.08726578,.98027421],[.97769081,.1294661,-.16540622,-.11243494,.98771595,.10851541,.17742343,-.08749708,.98023731],[.97762043,.12999016,-.16541117,-.11290513,.98762658,.10884012,.17751261,-.08772856,.98020048],[.97754994,.1305143,-.16541501,-.11337545,.98753685,.10916495,.17760101,-.08796019,.9801637],[.97747934,.13103853,-.16541776,-.11384588,.98744675,.10948991,.17768862,-.088192,.98012699],[.97740864,.13156283,-.1654194,-.11431642,.98735628,.10981499,.17777546,-.08842396,.98009035],[.97733782,.1320872,-.16541996,-.11478707,.98726545,.11014018,.17786152,-.08865609,.98005376],[.97726689,.13261164,-.16541943,-.11525782,.98717425,.1104655,.17794681,-.08888839,.98001724],[.97719584,.13313613,-.16541782,-.11572867,.98708269,.11079093,.17803134,-.08912085,.97998077],[.97712469,.13366067,-.16541513,-.1161996,.98699077,.11111647,.1781151,-.08935347,.97994437],[.97705343,.13418526,-.16541136,-.11667063,.98689848,.11144212,.17819811,-.08958626,.97990802],[.97698205,.13470989,-.16540653,-.11714173,.98680584,.11176788,.17828037,-.08981921,.97987174],[.97691056,.13523455,-.16540064,-.1176129,.98671282,.11209375,.17836188,-.09005232,.97983551],[.97683896,.13575924,-.16539369,-.11808415,.98661945,.11241972,.17844265,-.09028559,.97979933],[.97676725,.13628396,-.16538569,-.11855546,.98652572,.11274579,.17852268,-.09051902,.97976322],[.97669542,.13680869,-.16537664,-.11902683,.98643162,.11307197,.17860198,-.09075262,.97972715],[.97662348,.13733344,-.16536655,-.11949825,.98633717,.11339824,.17868054,-.09098637,.97969115],[.97655143,.13785819,-.16535542,-.11996972,.98624235,.11372461,.17875839,-.09122029,.97965519],[.97647927,.13838294,-.16534326,-.12044124,.98614718,.11405107,.17883551,-.09145436,.97961929],[.976407,.13890769,-.16533007,-.12091279,.98605165,.11437763,.17891192,-.09168859,.97958345],[.97633461,.13943242,-.16531586,-.12138437,.98595576,.11470427,.17898762,-.09192299,.97954765],[.97626211,.13995714,-.16530063,-.12185598,.98585952,.115031,.17906261,-.09215754,.9795119],[.97618949,.14048183,-.1652844,-.12232761,.98576292,.11535782,.17913691,-.09239225,.97947621],[.97611676,.14100649,-.16526715,-.12279926,.98566596,.11568473,.1792105,-.09262712,.97944056],[.97604392,.14153112,-.16524891,-.12327092,.98556865,.11601171,.17928341,-.09286214,.97940496],[.97597097,.14205571,-.16522967,-.12374258,.98547099,.11633878,.17935563,-.09309732,.97936941],[.9758979,.14258025,-.16520944,-.12421424,.98537297,.11666592,.17942717,-.09333266,.97933391],[.97582472,.14310475,-.16518822,-.1246859,.9852746,.11699314,.17949803,-.09356815,.97929845],[.97575143,.14362918,-.16516602,-.12515754,.98517588,.11732043,.17956822,-.0938038,.97926304],[.97567802,.14415355,-.16514285,-.12562917,.9850768,.1176478,.17963774,-.09403961,.97922767],[.9756045,.14467785,-.16511871,-.12610078,.98497738,.11797523,.1797066,-.09427557,.97919235],[.97553086,.14520207,-.16509361,-.12657236,.98487761,.11830274,.1797748,-.09451168,.97915707],[.97545711,.14572621,-.16506755,-.1270439,.98477749,.11863031,.17984235,-.09474795,.97912183],[.97538325,.14625027,-.16504053,-.12751541,.98467702,.11895794,.17990925,-.09498437,.97908663],[.97530927,.14677423,-.16501257,-.12798687,.9845762,.11928564,.17997551,-.09522095,.97905147],[.97523518,.14729809,-.16498366,-.12845828,.98447504,.1196134,.18004112,-.09545768,.97901636],[.97516098,.14782185,-.16495382,-.12892964,.98437353,.11994121,.18010611,-.09569456,.97898128],[.97508666,.14834549,-.16492305,-.12940093,.98427168,.12026909,.18017047,-.09593159,.97894624],[.97501223,.14886902,-.16489136,-.12987216,.98416949,.12059702,.1802342,-.09616877,.97891123],[.97493769,.14939243,-.16485874,-.13034331,.98406695,.120925,.18029732,-.0964061,.97887626],[.97486303,.14991571,-.16482521,-.13081439,.98396407,.12125303,.18035982,-.09664359,.97884133],[.97478826,.15043885,-.16479077,-.13128538,.98386085,.12158111,.18042171,-.09688122,.97880643],[.97471338,.15096185,-.16475543,-.13175629,.9837573,.12190925,.180483,-.09711901,.97877157],[.97463838,.15148471,-.16471919,-.13222709,.9836534,.12223742,.18054369,-.09735694,.97873674],[.97456327,.15200741,-.16468206,-.1326978,.98354916,.12256564,.18060378,-.09759503,.97870194],[.97448805,.15252996,-.16464404,-.1331684,.98344459,.1228939,.18066329,-.09783326,.97866717],[.97441271,.15305234,-.16460514,-.13363888,.98333969,.12322221,.18072221,-.09807164,.97863243],[.97433726,.15357455,-.16456537,-.13410925,.98323444,.12355055,.18078056,-.09831016,.97859772],[.9742617,.15409658,-.16452472,-.1345795,.98312887,.12387892,.18083832,-.09854884,.97856304],[.97418603,.15461843,-.16448322,-.13504961,.98302296,.12420734,.18089552,-.09878766,.97852839],[.97411024,.15514009,-.16444086,-.13551959,.98291672,.12453578,.18095216,-.09902662,.97849376],[.97403434,.15566156,-.16439764,-.13598942,.98281015,.12486426,.18100823,-.09926573,.97845916],[.97395833,.15618282,-.16435358,-.13645911,.98270325,.12519276,.18106376,-.09950499,.97842459],[.97388221,.15670388,-.16430868,-.13692865,.98259603,.1255213,.18111873,-.09974439,.97839004],[.97380597,.15722473,-.16426294,-.13739802,.98248847,.12584986,.18117316,-.09998394,.97835551],[.97372963,.15774535,-.16421638,-.13786723,.98238059,.12617844,.18122704,-.10022363,.978321],[.97365317,.15826576,-.16416899,-.13833627,.98227239,.12650705,.1812804,-.10046346,.97828652],[.9735766,.15878593,-.16412078,-.13880513,.98216386,.12683568,.18133322,-.10070344,.97825205],[.97349992,.15930586,-.16407177,-.13927381,.98205501,.12716432,.18138552,-.10094356,.97821761],[.97342313,.15982555,-.16402194,-.1397423,.98194584,.12749299,.1814373,-.10118382,.97818318],[.97334623,.16034499,-.16397132,-.14021059,.98183635,.12782166,.18148857,-.10142422,.97814878],[.97326922,.16086418,-.16391991,-.14067869,.98172654,.12815036,.18153932,-.10166476,.97811439],[.9731921,.1613831,-.1638677,-.14114657,.98161641,.12847906,.18158957,-.10190545,.97808001],[.97311488,.16190175,-.16381471,-.14161424,.98150597,.12880778,.18163933,-.10214627,.97804565],[.97303754,.16242013,-.16376095,-.14208169,.98139521,.1291365,.18168858,-.10238723,.97801131],[.97296009,.16293823,-.16370642,-.14254892,.98128414,.12946524,.18173735,-.10262834,.97797697],[.97288254,.16345604,-.16365112,-.14301591,.98117275,.12979397,.18178563,-.10286958,.97794265],[.97280488,.16397356,-.16359506,-.14348267,.98106106,.13012272,.18183343,-.10311095,.97790835],[.97272711,.16449078,-.16353825,-.14394918,.98094906,.13045146,.18188076,-.10335247,.97787405],[.97264923,.1650077,-.1634807,-.14441545,.98083674,.1307802,.18192762,-.10359412,.97783976],[.97257124,.1655243,-.1634224,-.14488145,.98072413,.13110894,.18197401,-.10383591,.97780548],[.97249315,.16604058,-.16336337,-.14534719,.9806112,.13143768,.18201994,-.10407784,.97777121],[.97241496,.16655654,-.16330361,-.14581267,.98049797,.13176642,.18206541,-.1043199,.97773695],[.97233666,.16707217,-.16324312,-.14627787,.98038444,.13209515,.18211044,-.1045621,.97770269],[.97225825,.16758746,-.16318192,-.14674279,.98027061,.13242387,.18215502,-.10480443,.97766844],[.97217974,.16810241,-.16312001,-.14720742,.98015648,.13275258,.18219916,-.1050469,.97763419],[.97210112,.16861701,-.16305739,-.14767175,.98004205,.13308128,.18224286,-.10528949,.97759995],[.9720224,.16913125,-.16299407,-.14813579,.97992733,.13340997,.18228614,-.10553223,.97756571],[.97194358,.16964513,-.16293005,-.14859951,.97981231,.13373864,.18232898,-.10577509,.97753147],[.97186466,.17015864,-.16286535,-.14906293,.97969699,.1340673,.18237141,-.10601809,.97749723],[.97178563,.17067178,-.16279997,-.14952603,.97958139,.13439594,.18241341,-.10626121,.97746299],[.9717065,.17118453,-.16273391,-.14998879,.97946549,.13472456,.18245501,-.10650447,.97742875],[.97162728,.1716969,-.16266718,-.15045123,.97934931,.13505317,.1824962,-.10674786,.97739451],[.97154795,.17220887,-.16259979,-.15091333,.97923284,.13538174,.18253699,-.10699138,.97736027],[.97146852,.17272044,-.16253174,-.15137508,.97911608,.1357103,.18257738,-.10723503,.97732602],[.97138899,.1732316,-.16246303,-.15183648,.97899904,.13603883,.18261738,-.1074788,.97729177],[.97130937,.17374235,-.16239368,-.15229753,.97888172,.13636733,.18265699,-.10772271,.97725751],[.97122965,.17425267,-.16232369,-.1527582,.97876411,.1366958,.18269621,-.10796674,.97722325],[.97114983,.17476257,-.16225306,-.15321851,.97864623,.13702425,.18273506,-.1082109,.97718898],[.97106991,.17527204,-.16218181,-.15367844,.97852807,.13735266,.18277353,-.10845519,.9771547],[.9709899,.17578106,-.16210993,-.15413798,.97840964,.13768104,.18281164,-.1086996,.97712041],[.9709098,.17628964,-.16203743,-.15459714,.97829093,.13800938,.18284938,-.10894413,.97708612],[.9708296,.17679777,-.16196433,-.15505589,.97817195,.13833769,.18288676,-.1091888,.97705181],[.9707493,.17730543,-.16189061,-.15551424,.9780527,.13866595,.18292378,-.10943358,.97701749],[.97066892,.17781263,-.1618163,-.15597218,.97793318,.13899418,.18296045,-.10967849,.97698316],[.97058844,.17831936,-.1617414,-.1564297,.97781339,.13932237,.18299678,-.10992353,.97694882],[.97050788,.1788256,-.1616659,-.1568868,.97769334,.13965052,.18303276,-.11016868,.97691446],[.97042722,.17933136,-.16158983,-.15734346,.97757303,.13997862,.18306841,-.11041396,.97688009],[.97034648,.17983662,-.16151317,-.15779969,.97745245,.14030667,.18310372,-.11065936,.97684571],[.97026564,.18034138,-.16143595,-.15825547,.97733162,.14063468,.18313871,-.11090488,.9768113],[.97018472,.18084564,-.16135816,-.1587108,.97721053,.14096264,.18317337,-.11115052,.97677688],[.97010372,.18134938,-.16127981,-.15916567,.97708918,.14129055,.18320771,-.11139628,.97674244],[.97002263,.18185261,-.16120091,-.15962008,.97696758,.1416184,.18324174,-.11164215,.97670799],[.96994145,.1823553,-.16112146,-.16007401,.97684573,.14194621,.18327546,-.11188815,.97667351],[.96986019,.18285746,-.16104147,-.16052747,.97672363,.14227395,.18330886,-.11213426,.97663902],[.96977885,.18335908,-.16096094,-.16098044,.97660129,.14260164,.18334197,-.1123805,.9766045],[.96969743,.18386016,-.16087988,-.16143291,.97647869,.14292928,.18337478,-.11262684,.97656996],[.96961593,.18436068,-.1607983,-.16188489,.97635586,.14325685,.18340729,-.11287331,.9765354],[.96953435,.18486063,-.1607162,-.16233636,.97623278,.14358436,.18343952,-.11311989,.97650081],[.96945269,.18536002,-.16063358,-.16278732,.97610946,.14391181,.18347145,-.11336658,.9764662],[.96937095,.18585883,-.16055046,-.16323775,.97598591,.14423919,.18350311,-.11361339,.97643157],[.96928914,.18635707,-.16046683,-.16368766,.97586212,.14456651,.18353449,-.11386031,.97639691],[.96920726,.18685471,-.1603827,-.16413703,.9757381,.14489376,.1835656,-.11410735,.97636222],[.9691253,.18735175,-.16029809,-.16458586,.97561384,.14522095,.18359643,-.11435449,.97632751],[.96904327,.1878482,-.16021298,-.16503415,.97548936,.14554806,.183627,-.11460175,.97629276],[.96896117,.18834403,-.1601274,-.16548187,.97536465,.1458751,.18365731,-.11484912,.97625799],[.968879,.18883925,-.16004134,-.16592904,.97523972,.14620206,.18368736,-.1150966,.97622319],[.96879676,.18933384,-.15995481,-.16637563,.97511456,.14652895,.18371716,-.11534419,.97618836],[.96871445,.1898278,-.15986782,-.16682165,.97498919,.14685577,.1837467,-.11559189,.9761535],[.96863208,.19032113,-.15978037,-.16726708,.9748636,.1471825,.183776,-.1158397,.97611861],[.96854964,.1908138,-.15969246,-.16771192,.97473779,.14750916,.18380506,-.11608761,.97608369],[.96846714,.19130583,-.15960411,-.16815617,.97461177,.14783573,.18383388,-.11633563,.97604873],[.96838458,.1917972,-.15951531,-.1685998,.97448554,.14816222,.18386246,-.11658376,.97601374],[.96830196,.1922879,-.15942608,-.16904283,.9743591,.14848863,.18389081,-.11683199,.97597872],[.96821928,.19277792,-.15933641,-.16948523,.97423245,.14881495,.18391894,-.11708033,.97594366],[.96813655,.19326727,-.15924632,-.16992701,.9741056,.14914118,.18394684,-.11732878,.97590856],[.96805375,.19375593,-.1591558,-.17036815,.97397855,.14946732,.18397451,-.11757732,.97587343],[.96797091,.19424389,-.15906487,-.17080865,.9738513,.14979337,.18400197,-.11782597,.97583826],[.96788801,.19473115,-.15897352,-.1712485,.97372385,.15011933,.18402922,-.11807473,.97580306],[.96780506,.1952177,-.15888177,-.17168769,.97359621,.1504452,.18405625,-.11832358,.97576781],[.96772206,.19570354,-.15878961,-.17212622,.97346838,.15077097,.18408308,-.11857254,.97573253],[.96763901,.19618865,-.15869706,-.17256408,.97334035,.15109664,.1841097,-.11882159,.97569721],[.96755592,.19667303,-.15860412,-.17300126,.97321214,.15142222,.18413612,-.11907075,.97566185],[.96747278,.19715667,-.15851079,-.17343775,.97308375,.15174769,.18416234,-.11932,.97562645],[.9673896,.19763956,-.15841708,-.17387355,.97295517,.15207306,.18418837,-.11956936,.97559101],[.96730637,.1981217,-.15832299,-.17430865,.97282642,.15239833,.1842142,-.11981881,.97555552],[.96722311,.19860309,-.15822853,-.17474304,.97269749,.15272349,.18423985,-.12006835,.97552],[.96713981,.1990837,-.1581337,-.17517672,.97256838,.15304855,.18426531,-.120318,.97548443],[.96705647,.19956354,-.15803851,-.17560967,.97243911,.15337349,.18429058,-.12056774,.97544882],[.9669731,.20004259,-.15794296,-.17604189,.97230966,.15369833,.18431568,-.12081757,.97541317],[.9668897,.20052086,-.15784706,-.17647338,.97218005,.15402305,.18434059,-.1210675,.97537747],[.96680627,.20099832,-.1577508,-.17690412,.97205027,.15434766,.18436533,-.12131752,.97534173],[.9667228,.20147499,-.15765421,-.1773341,.97192034,.15467216,.1843899,-.12156764,.97530594],[.96663932,.20195084,-.15755727,-.17776333,.97179024,.15499654,.1844143,-.12181784,.97527011],[.9665558,.20242587,-.15746,-.17819178,.97165999,.1553208,.18443853,-.12206814,.97523423],[.96647226,.20290007,-.1573624,-.17861947,.97152959,.15564494,.1844626,-.12231853,.9751983],[.96638871,.20337344,-.15726447,-.17904637,.97139903,.15596896,.1844865,-.12256901,.97516233],[.96630513,.20384596,-.15716622,-.17947247,.97126833,.15629285,.18451024,-.12281958,.97512631],[.96622154,.20431764,-.15706765,-.17989779,.97113749,.15661662,.18453382,-.12307023,.97509025],[.96613793,.20478846,-.15696877,-.18032229,.9710065,.15694027,.18455725,-.12332097,.97505413],[.9660543,.20525841,-.15686958,-.18074598,.97087537,.15726378,.18458052,-.12357181,.97501797],[.96597067,.20572749,-.15677008,-.18116886,.97074411,.15758716,.18460365,-.12382272,.97498176],[.96588703,.2061957,-.15667028,-.1815909,.97061272,.15791042,.18462662,-.12407372,.9749455],[.96580338,.20666301,-.15657019,-.18201211,.97048119,.15823353,.18464944,-.12432481,.97490919],[.96571973,.20712943,-.1564698,-.18243247,.97034954,.15855651,.18467212,-.12457598,.97487283],[.96563608,.20759494,-.15636912,-.18285199,.97021776,.15887936,.18469465,-.12482724,.97483642],[.96555243,.20805955,-.15626816,-.18327064,.97008586,.15920206,.18471704,-.12507857,.97479996],[.96546877,.20852323,-.15616692,-.18368843,.96995384,.15952463,.18473929,-.12532999,.97476345],[.96538513,.208986,-.15606539,-.18410534,.96982171,.15984705,.1847614,-.12558149,.97472689],[.96530149,.20944782,-.1559636,-.18452138,.96968946,.16016933,.18478337,-.12583307,.97469028],[.96521786,.20990871,-.15586153,-.18493652,.9695571,.16049146,.18480521,-.12608473,.97465362],[.96513424,.21036865,-.1557592,-.18535077,.96942464,.16081344,.18482691,-.12633647,.9746169],[.96505064,.21082763,-.1556566,-.18576412,.96929207,.16113528,.18484848,-.12658829,.97458014],[.96496705,.21128565,-.15555374,-.18617655,.9691594,.16145696,.18486991,-.12684018,.97454332],[.96488348,.21174269,-.15545063,-.18658806,.96902663,.16177848,.18489121,-.12709215,.97450645],[.96479993,.21219876,-.15534727,-.18699865,.96889377,.16209986,.18491239,-.1273442,.97446953],[.96471641,.21265384,-.15524365,-.1874083,.96876082,.16242107,.18493343,-.12759632,.97443256],[.96463292,.21310792,-.15513979,-.18781701,.96862778,.16274213,.18495434,-.12784852,.97439553],[.96454945,.213561,-.15503568,-.18822477,.96849465,.16306302,.18497513,-.12810079,.97435845],[.96446601,.21401307,-.15493134,-.18863157,.96836144,.16338375,.18499579,-.12835313,.97432132],[.96438261,.21446412,-.15482675,-.18903741,.96822815,.16370432,.18501632,-.12860555,.97428413],[.96429924,.21491415,-.15472194,-.18944228,.96809479,.16402472,.18503673,-.12885803,.9742469],[.96421592,.21536314,-.15461689,-.18984616,.96796135,.16434495,.18505701,-.12911059,.97420961],[.96413263,.21581109,-.15451161,-.19024906,.96782784,.16466501,.18507717,-.12936322,.97417226],[.9640494,.21625799,-.15440611,-.19065096,.96769427,.16498489,.1850972,-.12961591,.97413487],[.9639662,.21670383,-.15430038,-.19105186,.96756063,.16530461,.18511711,-.12986868,.97409742],[.96388306,.21714861,-.15419443,-.19145175,.96742693,.16562414,.1851369,-.13012151,.97405992],[.96379997,.21759232,-.15408827,-.19185062,.96729318,.1659435,.18515656,-.13037441,.97402236],[.96371694,.21803494,-.15398189,-.19224846,.96715937,.16626267,.1851761,-.13062737,.97398475],[.96363397,.21847648,-.15387529,-.19264527,.96702552,.16658167,.18519551,-.1308804,.97394709],[.96355105,.21891692,-.15376849,-.19304104,.96689161,.16690048,.1852148,-.1311335,.97390938],[.96346821,.21935626,-.15366148,-.19343576,.96675766,.1672191,.18523397,-.13138666,.97387162],[.96338542,.21979448,-.15355426,-.19382943,.96662367,.16753753,.18525301,-.13163988,.9738338],[.96330271,.22023159,-.15344684,-.19422203,.96648965,.16785577,.18527192,-.13189316,.97379593],[.96322007,.22066756,-.15333921,-.19461356,.96635559,.16817382,.18529071,-.13214651,.973758],[.96313751,.22110241,-.15323139,-.19500402,.9662215,.16849167,.18530938,-.13239992,.97372003],[.96305503,.2215361,-.15312336,-.19539339,.96608738,.16880933,.18532791,-.13265338,.973682],[.96297263,.22196865,-.15301514,-.19578166,.96595324,.16912679,.18534632,-.13290691,.97364393],[.96289031,.22240004,-.15290673,-.19616884,.96581908,.16944404,.1853646,-.13316049,.9736058],[.96280808,.22283027,-.15279812,-.1965549,.96568491,.16976109,.18538275,-.13341413,.97356762],[.96272595,.22325932,-.15268932,-.19693985,.96555072,.17007794,.18540077,-.13366783,.97352939],[.9626439,.22368718,-.15258033,-.19732368,.96541652,.17039458,.18541866,-.13392159,.9734911],[.96256196,.22411386,-.15247116,-.19770638,.96528231,.17071101,.18543641,-.1341754,.97345277],[.96248011,.22453934,-.15236179,-.19808794,.9651481,.17102722,.18545403,-.13442927,.97341439],[.96239837,.22496361,-.15225224,-.19846836,.96501389,.17134322,.18547152,-.13468319,.97337596],[.96231674,.22538667,-.1521425,-.19884762,.96487969,.171659,.18548886,-.13493716,.97333748],[.96223521,.22580851,-.15203259,-.19922572,.96474549,.17197457,.18550607,-.13519118,.97329895],[.9621538,.22622913,-.15192248,-.19960266,.9646113,.17228991,.18552314,-.13544526,.97326037],[.96207251,.2266485,-.1518122,-.19997843,.96447713,.17260503,.18554006,-.13569939,.97322174],[.96199133,.22706663,-.15170173,-.20035301,.96434297,.17291992,.18555685,-.13595357,.97318307],[.96191028,.22748351,-.15159109,-.20072641,.96420884,.17323459,.18557348,-.1362078,.97314435],[.96182936,.22789913,-.15148026,-.20109861,.96407473,.17354902,.18558996,-.13646208,.97310558],[.96174856,.22831348,-.15136926,-.2014696,.96394065,.17386322,.1856063,-.1367164,.97306676],[.9616679,.22872656,-.15125807,-.20183939,.9638066,.17417719,.18562248,-.13697077,.9730279],[.96158738,.22913836,-.15114671,-.20220796,.96367259,.17449092,.18563851,-.13722519,.972989],[.96150699,.22954886,-.15103517,-.20257531,.96353862,.17480441,.18565437,-.13747966,.97295005],[.96142675,.22995807,-.15092346,-.20294143,.96340468,.17511765,.18567008,-.13773417,.97291105],[.96134666,.23036597,-.15081156,-.20330631,.9632708,.17543065,.18568563,-.13798873,.97287202],[.96126671,.23077256,-.15069949,-.20366994,.96313696,.1757434,.185701,-.13824333,.97283293],[.96118692,.23117782,-.15058724,-.20403233,.96300318,.17605591,.18571621,-.13849797,.97279381],[.96110729,.23158176,-.15047481,-.20439345,.96286946,.17636816,.18573125,-.13875266,.97275465],[.96102781,.23198436,-.15036221,-.20475332,.96273579,.17668016,.18574611,-.13900738,.97271544],[.96094851,.23238562,-.15024943,-.20511191,.96260219,.17699189,.1857608,-.13926215,.97267619],[.96086937,.23278553,-.15013646,-.20546922,.96246866,.17730337,.1857753,-.13951696,.97263691],[.9607904,.23318408,-.15002332,-.20582524,.96233519,.17761459,.18578962,-.13977181,.97259758],[.9607116,.23358127,-.14991,-.20617998,.96220181,.17792554,.18580375,-.14002669,.97255822],[.96063299,.23397708,-.1497965,-.20653342,.9620685,.17823623,.18581768,-.14028162,.97251882],[.96055455,.23437151,-.14968282,-.20688555,.96193527,.17854665,.18583143,-.14053658,.97247938],[.96047631,.23476455,-.14956895,-.20723637,.96180213,.17885679,.18584497,-.14079158,.97243991],[.96039825,.2351562,-.1494549,-.20758587,.96166908,.17916666,.18585831,-.14104662,.9724004],[.96032038,.23554644,-.14934067,-.20793405,.96153612,.17947625,.18587144,-.14130169,.97236086],[.96024272,.23593527,-.14922625,-.2082809,.96140326,.17978556,.18588436,-.1415568,.97232128],[.96016525,.23632269,-.14911165,-.20862641,.96127049,.18009459,.18589706,-.14181194,.97228168],[.96008798,.23670868,-.14899685,-.20897058,.96113783,.18040333,.18590955,-.14206711,.97224204],[.96001093,.23709324,-.14888187,-.2093134,.96100528,.18071179,.18592181,-.14232232,.97220237],[.95993408,.23747636,-.1487667,-.20965486,.96087284,.18101995,.18593384,-.14257756,.97216267],[.95985746,.23785804,-.14865133,-.20999496,.96074052,.18132782,.18594564,-.14283283,.97212294],[.95978105,.23823826,-.14853577,-.2103337,.96060831,.1816354,.1859572,-.14308813,.97208318],[.95970486,.23861702,-.14842002,-.21067106,.96047622,.18194267,.18596851,-.14334346,.9720434],[.9596289,.23899431,-.14830406,-.21100704,.96034426,.18224965,.18597958,-.14359883,.97200359],[.95955317,.23937013,-.14818791,-.21134163,.96021243,.18255632,.1859904,-.14385422,.97196375],[.95947767,.23974447,-.14807155,-.21167484,.96008073,.18286268,.18600096,-.14410964,.97192389],[.95940242,.24011731,-.14795499,-.21200664,.95994916,.18316874,.18601125,-.14436509,.97188401],[.9593274,.24048867,-.14783822,-.21233705,.95981774,.18347448,.18602128,-.14462056,.97184411],[.95925263,.24085852,-.14772124,-.21266605,.95968646,.18377991,.18603103,-.14487606,.97180419],[.95917811,.24122686,-.14760405,-.21299363,.95955533,.18408501,.18604051,-.14513159,.97176425],[.95910384,.24159369,-.14748665,-.21331979,.95942434,.1843898,.1860497,-.14538715,.97172429],[.95902983,.24195899,-.14736903,-.21364453,.95929351,.18469427,.18605859,-.14564273,.97168431],[.95895608,.24232277,-.14725119,-.21396784,.95916284,.18499841,.1860672,-.14589833,.97164432],[.95888259,.24268501,-.14713313,-.21428971,.95903233,.18530222,.1860755,-.14615396,.97160431],[.95880938,.2430457,-.14701484,-.21461014,.95890198,.1856057,.18608349,-.14640961,.97156429],[.95873643,.24340485,-.14689632,-.21492913,.9587718,.18590884,.18609117,-.14666528,.97152425],[.95866376,.24376245,-.14677757,-.21524666,.9586418,.18621165,.18609852,-.14692098,.97148421],[.95859138,.24411848,-.14665859,-.21556274,.95851197,.18651411,.18610555,-.14717669,.97144415],[.95851927,.24447294,-.14653937,-.21587736,.95838231,.18681624,.18611225,-.14743243,.97140409],[.95844746,.24482583,-.1464199,-.21619051,.95825284,.18711801,.18611861,-.14768819,.97136402],[.95837593,.24517714,-.14630019,-.21650219,.95812356,.18741944,.18612462,-.14794397,.97132395],[.9583047,.24552686,-.14618023,-.2168124,.95799446,.18772052,.18613028,-.14819977,.97128386],[.95823377,.24587499,-.14606002,-.21712113,.95786556,.18802124,.18613558,-.14845559,.97124378],[.95816314,.24622152,-.14593955,-.21742837,.95773685,.18832161,.18614052,-.14871142,.9712037],[.95809282,.24656644,-.14581882,-.21773412,.95760834,.18862161,.18614508,-.14896728,.97116361],[.95802282,.24690976,-.14569783,-.21803838,.95748004,.18892125,.18614926,-.14922315,.97112353],[.95795312,.24725145,-.14557656,-.21834115,.95735194,.18922053,.18615306,-.14947904,.97108344],[.95788375,.24759153,-.14545503,-.21864241,.95722405,.18951943,.18615646,-.14973495,.97104337],[.95781469,.24792997,-.14533321,-.21894216,.95709637,.18981797,.18615946,-.14999087,.97100329],[.95774597,.24826678,-.14521112,-.21924041,.95696891,.19011613,.18616205,-.15024681,.97096323],[.95767757,.24860195,-.14508874,-.21953714,.95684167,.19041391,.18616422,-.15050276,.97092317],[.95760951,.24893548,-.14496607,-.21983235,.95671466,.19071131,.18616597,-.15075873,.97088312],[.95754178,.24926735,-.1448431,-.22012605,.95658787,.19100832,.18616729,-.15101471,.97084309],[.9574744,.24959757,-.14471983,-.22041821,.9564613,.19130495,.18616817,-.15127071,.97080306],[.95740736,.24992612,-.14459626,-.22070885,.95633498,.1916012,.1861686,-.15152672,.97076305],[.95734067,.25025301,-.14447237,-.22099796,.95620888,.19189704,.18616858,-.15178275,.97072306],[.95727434,.25057823,-.14434818,-.22128552,.95608303,.1921925,.1861681,-.15203878,.97068308],[.95720836,.25090177,-.14422366,-.22157156,.95595742,.19248755,.18616714,-.15229483,.97064313],[.95714274,.25122362,-.14409882,-.22185604,.95583205,.19278221,.18616571,-.1525509,.97060319],[.95707749,.25154379,-.14397364,-.22213899,.95570694,.19307646,.18616379,-.15280697,.97056328],[.9570126,.25186226,-.14384813,-.22242038,.95558207,.1933703,.18616138,-.15306306,.97052338],[.95694808,.25217904,-.14372228,-.22270022,.95545747,.19366374,.18615846,-.15331916,.97048352],[.95688395,.25249411,-.14359609,-.22297851,.95533311,.19395676,.18615503,-.15357526,.97044368],[.95682019,.25280748,-.14346954,-.22325524,.95520903,.19424936,.18615109,-.15383138,.97040387],[.95675681,.25311914,-.14334263,-.22353041,.9550852,.19454155,.18614661,-.15408751,.9703641],[.95669382,.25342908,-.14321536,-.22380402,.95496164,.19483331,.1861416,-.15434365,.97032435],[.95663122,.2537373,-.14308771,-.22407607,.95483836,.19512465,.18613604,-.1545998,.97028464],[.95656901,.25404379,-.1429597,-.22434655,.95471534,.19541557,.18612993,-.15485596,.97024496],[.9565072,.25434856,-.1428313,-.22461546,.9545926,.19570605,.18612325,-.15511213,.97020532],[.9564458,.25465159,-.14270251,-.22488279,.95447015,.1959961,.18611601,-.15536831,.97016572],[.95638479,.25495288,-.14257333,-.22514856,.95434797,.19628571,.18610818,-.15562449,.97012616],[.9563242,.25525243,-.14244375,-.22541275,.95422608,.19657489,.18609976,-.15588069,.97008664],[.95626402,.25555024,-.14231376,-.22567536,.95410447,.19686362,.18609075,-.15613689,.97004717],[.95620425,.2558463,-.14218336,-.22593639,.95398316,.19715191,.18608112,-.1563931,.97000774],[.9561449,.2561406,-.14205255,-.22619585,.95386214,.19743975,.18607088,-.15664932,.96996836],[.95608597,.25643315,-.1419213,-.22645372,.95374142,.19772715,.18606002,-.15690554,.96992903],[.95602747,.25672394,-.14178963,-.22671,.95362099,.19801408,.18604852,-.15716178,.96988975],[.9559694,.25701296,-.14165751,-.22696471,.95350087,.19830057,.18603637,-.15741802,.96985052],[.95591176,.25730022,-.14152495,-.22721783,.95338105,.19858659,.18602358,-.15767427,.96981135],[.95585455,.2575857,-.14139193,-.22746936,.95326154,.19887215,.18601012,-.15793052,.96977223],[.95579779,.25786941,-.14125846,-.2277193,.95314233,.19915725,.18599598,-.15818678,.96973318],[.95574147,.25815135,-.14112452,-.22796766,.95302344,.19944189,.18598117,-.15844305,.96969418],[.95568559,.2584315,-.14099011,-.22821443,.95290486,.19972605,.18596566,-.15869933,.96965525],[.95563016,.25870987,-.14085522,-.2284596,.9527866,.20000974,.18594946,-.15895561,.96961637],[.95557519,.25898646,-.14071984,-.22870319,.95266866,.20029295,.18593254,-.1592119,.96957757],[.95552067,.25926126,-.14058396,-.22894519,.95255105,.20057569,.18591491,-.1594682,.96953883],[.95546661,.25953427,-.14044759,-.22918559,.95243375,.20085795,.18589655,-.1597245,.96950016],[.95541301,.25980548,-.14031071,-.22942441,.95231678,.20113972,.18587744,-.15998081,.96946156],[.95535987,.2600749,-.14017331,-.22966163,.95220014,.20142101,.18585759,-.16023712,.96942304],[.95530721,.26034252,-.14003538,-.22989727,.95208383,.20170181,.18583698,-.16049344,.96938458],[.95525501,.26060835,-.13989693,-.23013131,.95196786,.20198212,.1858156,-.16074977,.96934621],[.95520329,.26087237,-.13975793,-.23036377,.95185222,.20226193,.18579345,-.1610061,.96930791],[.95515205,.26113458,-.1396184,-.23059463,.95173692,.20254125,.18577051,-.16126244,.9692697],[.95510128,.26139499,-.1394783,-.23082391,.95162195,.20282008,.18574677,-.16151879,.96923156],[.955051,.26165359,-.13933765,-.2310516,.95150733,.20309839,.18572222,-.16177514,.96919351],[.95500121,.26191038,-.13919643,-.2312777,.95139305,.20337621,.18569686,-.1620315,.96915555],[.9549519,.26216537,-.13905463,-.23150221,.95127912,.20365352,.18567067,-.16228786,.96911767],[.95490308,.26241854,-.13891225,-.23172514,.95116554,.20393032,.18564364,-.16254423,.96907988],[.95485476,.26266989,-.13876928,-.23194648,.95105231,.20420661,.18561577,-.16280061,.96904218],[.95480694,.26291943,-.1386257,-.23216624,.95093942,.20448239,.18558704,-.163057,.96900457],[.95475961,.26316716,-.13848153,-.23238442,.95082689,.20475765,.18555745,-.16331339,.96896706],[.95471279,.26341307,-.13833673,-.23260102,.95071472,.2050324,.18552698,-.16356979,.96892965],[.95466647,.26365716,-.13819131,-.23281605,.9506029,.20530662,.18549562,-.16382619,.96889233],[.95462065,.26389944,-.13804526,-.23302949,.95049144,.20558032,.18546337,-.1640826,.96885512],[.95457535,.26413989,-.13789858,-.23324136,.95038035,.2058535,.18543022,-.16433902,.968818],[.95453056,.26437853,-.13775124,-.23345166,.95026961,.20612615,.18539615,-.16459545,.96878099],[.95448628,.26461534,-.13760326,-.23366039,.95015924,.20639827,.18536115,-.16485189,.96874408],[.95444252,.26485034,-.13745461,-.23386755,.95004923,.20666986,.18532522,-.16510833,.96870728],[.95439928,.26508351,-.13730528,-.23407314,.94993959,.20694091,.18528835,-.16536478,.96867059],[.95435656,.26531487,-.13715528,-.23427718,.94983031,.20721143,.18525052,-.16562124,.96863401],[.95431437,.2655444,-.1370046,-.23447965,.94972141,.20748142,.18521173,-.16587771,.96859754],[.9542727,.26577212,-.13685322,-.23468056,.94961288,.20775086,.18517196,-.16613418,.96856119],[.95423155,.26599801,-.13670113,-.23487992,.94950471,.20801976,.18513121,-.16639067,.96852495],[.95419094,.26622209,-.13654834,-.23507773,.94939693,.20828812,.18508947,-.16664716,.96848883],[.95415086,.26644435,-.13639482,-.23527398,.94928951,.20855593,.18504673,-.16690367,.96845283],[.95411131,.26666479,-.13624058,-.2354687,.94918247,.2088232,.18500297,-.16716018,.96841694],[.9540723,.26688341,-.13608561,-.23566187,.94907581,.20908991,.18495819,-.16741671,.96838118],[.95403383,.26710021,-.13592989,-.2358535,.94896953,.20935608,.18491238,-.16767324,.96834555],[.95399589,.2673152,-.13577342,-.23604359,.94886362,.20962169,.18486553,-.16792979,.96831004],[.9539585,.26752838,-.13561619,-.23623216,.94875809,.20988675,.18481762,-.16818634,.96827465],[.95392165,.26773974,-.1354582,-.23641919,.94865295,.21015125,.18476866,-.16844291,.9682394],[.95388534,.2679493,-.13529943,-.23660471,.94854818,.2104152,.18471863,-.16869949,.96820427],[.95384958,.26815704,-.13513987,-.2367887,.9484438,.21067858,.18466752,-.16895608,.96816928],[.95381437,.26836297,-.13497953,-.23697118,.9483398,.21094141,.18461532,-.16921269,.96813442],[.9537797,.2685671,-.13481838,-.23715215,.94823619,.21120367,.18456202,-.1694693,.96809969],[.95374559,.26876942,-.13465643,-.23733161,.94813296,.21146537,.18450762,-.16972593,.9680651],[.95371203,.26896994,-.13449366,-.23750957,.94803011,.2117265,.1844521,-.16998258,.96803065],[.95367902,.26916866,-.13433007,-.23768603,.94792765,.21198707,.18439546,-.17023924,.96799634],[.95364656,.26936558,-.13416565,-.23786099,.94782558,.21224707,.18433769,-.17049591,.96796217],[.95361466,.2695607,-.13400039,-.23803447,.94772389,.2125065,.18427877,-.1707526,.96792814],[.95358332,.26975403,-.13383428,-.23820647,.94762259,.21276536,.1842187,-.17100931,.96789425],[.95355254,.26994557,-.13366731,-.23837699,.94752168,.21302365,.18415747,-.17126603,.96786051],[.95352231,.27013532,-.13349949,-.23854604,.94742116,.21328136,.18409507,-.17152276,.96782692],[.95349264,.27032329,-.13333079,-.23871361,.94732102,.2135385,.18403149,-.17177952,.96779347],[.95346354,.27050947,-.13316122,-.23887973,.94722127,.21379507,.18396673,-.17203629,.96776018],[.95343499,.27069387,-.13299076,-.23904439,.94712192,.21405106,.18390077,-.17229308,.96772703],[.95340701,.2708765,-.1328194,-.2392076,.94702294,.21430648,.18383361,-.17254989,.96769403],[.95337959,.27105735,-.13264714,-.23936936,.94692436,.21456131,.18376524,-.17280672,.96766119],[.95335274,.27123644,-.13247398,-.23952969,.94682617,.21481557,.18369564,-.17306356,.9676285],[.95332644,.27141375,-.1322999,-.23968858,.94672837,.21506925,.18362482,-.17332043,.96759597],[.95330072,.27158931,-.13212489,-.23984604,.94663095,.21532235,.18355276,-.17357732,.96756359],[.95327556,.27176311,-.13194896,-.24000208,.94653393,.21557487,.18347946,-.17383423,.96753137],[.95325096,.27193515,-.13177208,-.24015671,.94643729,.21582681,.18340491,-.17409117,.96749931],[.95322693,.27210544,-.13159426,-.24030993,.94634104,.21607817,.18332909,-.17434812,.9674674],[.95320347,.27227398,-.13141548,-.24046175,.94624518,.21632894,.18325201,-.1746051,.96743566],[.95318057,.27244078,-.13123575,-.24061217,.9461497,.21657913,.18317365,-.17486211,.96740408],[.95315824,.27260585,-.13105504,-.2407612,.94605462,.21682874,.18309401,-.17511913,.96737266],[.95313647,.27276918,-.13087336,-.24090885,.94595992,.21707777,.18301308,-.17537619,.96734141],[.95311528,.27293078,-.1306907,-.24105512,.94586561,.21732621,.18293085,-.17563327,.96731032],[.95309465,.27309065,-.13050705,-.24120003,.94577168,.21757407,.18284732,-.17589037,.9672794],[.95307458,.27324881,-.13032241,-.24134357,.94567814,.21782134,.18276247,-.17614751,.96724864],[.95305508,.27340525,-.13013676,-.24148576,.94558498,.21806803,.18267631,-.17640467,.96721805],[.95303615,.27355998,-.1299501,-.2416266,.94549221,.21831414,.18258882,-.17666186,.96718763],[.95301779,.27371301,-.12976243,-.24176611,.94539982,.21855966,.1825,-.17691908,.96715738],[.95299999,.27386434,-.12957373,-.24190428,.94530782,.21880459,.18240983,-.17717634,.96712729],[.95298275,.27401397,-.129384,-.24204112,.94521619,.21904895,.18231832,-.17743362,.96709738],[.95296608,.27416192,-.12919324,-.24217665,.94512495,.21929272,.18222546,-.17769093,.96706764],[.95294997,.27430818,-.12900143,-.24231087,.94503409,.2195359,.18213125,-.17794828,.96703806],[.95293443,.27445276,-.12880858,-.24244378,.94494361,.2197785,.18203566,-.17820566,.96700867],[.95291945,.27459568,-.12861467,-.2425754,.9448535,.22002052,.18193871,-.17846308,.96697944],[.95290503,.27473692,-.1284197,-.24270574,.94476378,.22026196,.18184038,-.17872053,.96695039],[.95289118,.27487651,-.12822367,-.24283479,.94467443,.22050281,.18174066,-.17897802,.96692151],[.95287788,.27501445,-.12802656,-.24296258,.94458545,.22074309,.18163956,-.17923554,.9668928],[.95286514,.27515073,-.12782837,-.2430891,.94449685,.22098278,.18153707,-.1794931,.96686427],[.95285296,.27528538,-.1276291,-.24321437,.94440862,.22122189,.18143317,-.1797507,.96683592],[.95284134,.27541839,-.12742873,-.2433384,.94432076,.22146042,.18132787,-.18000834,.96680774],[.95283028,.27554978,-.12722728,-.24346118,.94423328,.22169838,.18122117,-.18026602,.96677973],[.95281977,.27567954,-.12702472,-.24358274,.94414616,.22193575,.18111304,-.18052374,.9667519],[.95280981,.27580769,-.12682105,-.24370308,.94405941,.22217255,.1810035,-.18078151,.96672425],[.95280041,.27593423,-.12661627,-.24382221,.94397302,.22240877,.18089254,-.18103931,.96669678],[.95279156,.27605917,-.12641038,-.24394013,.943887,.22264442,.18078015,-.18129716,.96666948],[.95278326,.27618251,-.12620336,-.24405685,.94380135,.2228795,.18066632,-.18155506,.96664235],[.9527755,.27630427,-.12599522,-.2441724,.94371605,.223114,.18055106,-.181813,.96661541],[.95276829,.27642445,-.12578594,-.24428676,.94363112,.22334793,.18043436,-.18207098,.96658864],[.95276163,.27654305,-.12557553,-.24439996,.94354654,.22358129,.18031621,-.18232902,.96656205],[.95275551,.27666009,-.12536398,-.24451199,.94346232,.22381408,.18019661,-.1825871,.96653563],[.95274993,.27677558,-.12515128,-.24462288,.94337845,.2240463,.18007556,-.18284523,.9665094],[.9527449,.27688951,-.12493743,-.24473263,.94329494,.22427796,.17995306,-.18310342,.96648333],[.9527404,.2770019,-.12472243,-.24484124,.94321178,.22450905,.1798291,-.18336165,.96645745],[.95273643,.27711276,-.12450627,-.24494873,.94312896,.22473958,.17970367,-.18361994,.96643174],[.952733,.27722209,-.12428894,-.24505511,.9430465,.22496955,.17957678,-.18387828,.96640621],[.9527301,.2773299,-.12407045,-.24516038,.94296438,.22519896,.17944842,-.18413667,.96638085],[.95272774,.2774362,-.12385079,-.24526456,.9428826,.22542782,.17931859,-.18439512,.96635567],[.95272589,.27754099,-.12362996,-.24536765,.94280116,.22565611,.17918729,-.18465363,.96633066],[.95272458,.27764429,-.12340795,-.24546967,.94272007,.22588386,.17905451,-.18491219,.96630583],[.95272379,.27774611,-.12318475,-.24557062,.94263931,.22611105,.17892026,-.18517082,.96628118],[.95272352,.27784645,-.12296038,-.24567051,.94255889,.22633769,.17878452,-.1854295,.96625669],[.95272376,.27794532,-.12273482,-.24576935,.94247879,.22656378,.1786473,-.18568824,.96623238],[.95272452,.27804272,-.12250806,-.24586716,.94239903,.22678933,.1785086,-.18594705,.96620825],[.9527258,.27813868,-.12228012,-.24596394,.9423196,.22701434,.17836842,-.18620592,.96618428],[.95272759,.27823319,-.12205097,-.2460597,.9422405,.2272388,.17822675,-.18646485,.96616049],[.95272988,.27832626,-.12182063,-.24615445,.94216171,.22746273,.17808359,-.18672385,.96613686],[.95273268,.27841791,-.12158909,-.2462482,.94208325,.22768612,.17793894,-.18698291,.96611341],[.95273598,.27850814,-.12135635,-.24634096,.94200511,.22790897,.1777928,-.18724204,.96609013],[.95273978,.27859696,-.12112239,-.24643274,.94192729,.2281313,.17764518,-.18750124,.96606701],[.95274408,.27868439,-.12088724,-.24652355,.94184978,.2283531,.17749606,-.18776051,.96604407],[.95274888,.27877042,-.12065087,-.2466134,.94177258,.22857437,.17734545,-.18801985,.96602129],[.95275416,.27885507,-.12041329,-.2467023,.94169569,.22879511,.17719335,-.18827926,.96599867],[.95275993,.27893835,-.12017449,-.24679026,.94161911,.22901534,.17703976,-.18853875,.96597622],[.95276619,.27902026,-.11993449,-.24687729,.94154283,.22923505,.17688468,-.18879831,.96595394],[.95277293,.27910082,-.11969326,-.2469634,.94146685,.22945425,.17672811,-.18905794,.96593181],[.95278015,.27918004,-.11945082,-.24704861,.94139117,.22967293,.17657005,-.18931765,.96590985],[.95278784,.27925793,-.11920716,-.24713291,.94131578,.22989111,.17641049,-.18957744,.96588805],[.952796,.27933448,-.11896228,-.24721632,.94124069,.23010878,.17624946,-.18983731,.96586641],[.95280464,.27940973,-.11871618,-.24729885,.94116589,.23032595,.17608693,-.19009725,.96584493],[.95281373,.27948366,-.11846886,-.24738051,.94109138,.23054261,.17592291,-.19035728,.9658236],[.9528233,.2795563,-.11822031,-.24746131,.94101715,.23075879,.17575742,-.1906174,.96580243],[.95283331,.27962766,-.11797055,-.24754126,.94094321,.23097447,.17559043,-.19087759,.96578142],[.95284379,.27969773,-.11771956,-.24762037,.94086954,.23118966,.17542197,-.19113787,.96576055],[.95285471,.27976654,-.11746735,-.24769865,.94079615,.23140437,.17525203,-.19139824,.96573984],[.95286609,.2798341,-.11721391,-.24777612,.94072303,.23161859,.17508061,-.19165869,.96571928],[.9528779,.2799004,-.11695926,-.24785277,.94065019,.23183234,.17490771,-.19191923,.96569887],[.95289016,.27996547,-.11670338,-.24792863,.94057761,.23204561,.17473334,-.19217987,.9656786],[.95290285,.28002932,-.11644628,-.24800369,.94050529,.23225841,.1745575,-.19244059,.96565848],[.95291598,.28009194,-.11618795,-.24807798,.94043324,.23247074,.17438019,-.19270141,.9656385],[.95292953,.28015336,-.11592841,-.2481515,.94036144,.2326826,.17420142,-.19296232,.96561867],[.95294351,.28021359,-.11566765,-.24822426,.9402899,.23289401,.17402119,-.19322332,.96559897],[.95295792,.28027262,-.11540567,-.24829628,.94021861,.23310496,.17383949,-.19348442,.96557942],[.95297273,.28033049,-.11514247,-.24836755,.94014757,.23331546,.17365635,-.19374562,.96556],[.95298796,.28038718,-.11487805,-.2484381,.94007677,.23352552,.17347175,-.19400692,.96554071],[.95300361,.28044273,-.11461242,-.24850794,.94000622,.23373512,.1732857,-.19426832,.96552156],[.95301965,.28049712,-.11434557,-.24857706,.93993591,.23394429,.17309821,-.19452982,.96550254],[.9530361,.28055039,-.11407752,-.24864549,.93986583,.23415302,.17290928,-.19479142,.96548365],[.95305294,.28060253,-.11380825,-.24871324,.93979599,.23436132,.17271892,-.19505313,.96546489],[.95307017,.28065356,-.11353777,-.2487803,.93972637,.2345692,.17252712,-.19531494,.96544625],[.9530878,.28070349,-.11326609,-.2488467,.93965698,.23477665,.1723339,-.19557686,.96542774],[.9531058,.28075232,-.11299321,-.24891245,.93958782,.23498368,.17213925,-.19583889,.96540935],[.95312419,.28080008,-.11271912,-.24897755,.93951887,.2351903,.17194319,-.19610103,.96539107],[.95314295,.28084676,-.11244384,-.24904202,.93945014,.2353965,.17174572,-.19636328,.96537292],[.95316208,.28089239,-.11216736,-.24910586,.93938162,.23560231,.17154685,-.19662564,.96535488],[.95318158,.28093696,-.11188968,-.24916908,.93931331,.23580771,.17134657,-.19688811,.96533695],[.95320144,.2809805,-.11161082,-.2492317,.93924521,.23601271,.17114489,-.1971507,.96531913],[.95322166,.28102301,-.11133076,-.24929373,.93917731,.23621733,.17094183,-.19741341,.96530142],[.95324223,.28106451,-.11104953,-.24935517,.9391096,.23642155,.17073738,-.19767624,.96528382],[.95326315,.281105,-.11076711,-.24941604,.9390421,.2366254,.17053156,-.19793918,.96526632],[.95328441,.2811445,-.11048351,-.24947635,.93897478,.23682887,.17032437,-.19820224,.96524892],[.95330601,.28118302,-.11019874,-.2495361,.93890765,.23703196,.17011581,-.19846543,.96523162],[.95332795,.28122056,-.10991281,-.24959531,.93884071,.23723469,.16990589,-.19872874,.96521442],[.95335021,.28125714,-.1096257,-.24965398,.93877395,.23743706,.16969462,-.19899218,.96519731],[.9533728,.28129278,-.10933743,-.24971214,.93870737,.23763906,.16948201,-.19925574,.96518029],[.95339571,.28132747,-.10904801,-.24976977,.93864096,.23784072,.16926806,-.19951943,.96516337],[.95341894,.28136124,-.10875743,-.24982691,.93857472,.23804203,.16905277,-.19978325,.96514653],[.95344248,.28139409,-.1084657,-.24988355,.93850865,.23824299,.16883617,-.20004719,.96512977],[.95346632,.28142604,-.10817283,-.24993971,.93844274,.23844362,.16861825,-.20031128,.96511309],[.95349047,.28145709,-.10787881,-.2499954,.93837699,.23864392,.16839902,-.20057549,.96509649],[.95351491,.28148726,-.10758366,-.25005063,.9383114,.23884388,.16817849,-.20083984,.96507997],[.95353964,.28151655,-.10728738,-.2501054,.93824596,.23904353,.16795667,-.20110433,.96506353],[.95356466,.28154499,-.10698998,-.25015973,.93818067,.23924286,.16773356,-.20136895,.96504715],[.95358996,.28157258,-.10669145,-.25021363,.93811552,.23944188,.16750917,-.20163372,.96503084],[.95361554,.28159933,-.10639181,-.25026711,.93805051,.23964059,.16728352,-.20189862,.96501459],[.95364139,.28162526,-.10609106,-.25032017,.93798564,.23983901,.16705661,-.20216367,.96499841],[.95366751,.28165037,-.1057892,-.25037283,.93792091,.24003713,.16682845,-.20242887,.96498229],[.95369389,.28167467,-.10548625,-.2504251,.9378563,.24023495,.16659904,-.2026942,.96496623],[.95372052,.28169819,-.1051822,-.25047698,.93779182,.2404325,.16636841,-.20295969,.96495022],[.95374741,.28172092,-.10487706,-.25052849,.93772746,.24062976,.16613654,-.20322532,.96493426],[.95377455,.28174289,-.10457085,-.25057964,.93766322,.24082676,.16590346,-.20349111,.96491834],[.95380192,.2817641,-.10426355,-.25063044,.93759909,.24102348,.16566918,-.20375704,.96490248],[.95382954,.28178456,-.10395519,-.25068089,.93753508,.24121995,.16543369,-.20402313,.96488665],[.95385738,.28180428,-.10364577,-.25073101,.93747117,.24141616,.16519702,-.20428937,.96487087],[.95388545,.28182329,-.10333528,-.25078081,.93740737,.24161211,.16495918,-.20455577,.96485512],[.95391374,.28184158,-.10302375,-.2508303,.93734366,.24180783,.16472016,-.20482233,.96483941],[.95394225,.28185917,-.10271117,-.25087948,.93728005,.2420033,.16447998,-.20508905,.96482372],[.95397097,.28187607,-.10239756,-.25092836,.93721653,.24219854,.16423866,-.20535593,.96480807],[.9539999,.2818923,-.10208292,-.25097696,.9371531,.24239356,.1639962,-.20562297,.96479243],[.95402903,.28190786,-.10176725,-.25102529,.93708975,.24258835,.16375261,-.20589018,.96477682],[.95405835,.28192276,-.10145056,-.25107335,.93702648,.24278293,.1635079,-.20615755,.96476123],[.95408787,.28193703,-.10113287,-.25112116,.93696328,.2429773,.16326208,-.20642509,.96474565],[.95411756,.28195066,-.10081417,-.25116873,.93690016,.24317146,.16301517,-.20669279,.96473009],[.95414744,.28196368,-.10049448,-.25121605,.93683711,.24336543,.16276717,-.20696067,.96471453],[.9541775,.28197609,-.1001738,-.25126316,.93677411,.2435592,.16251809,-.20722872,.96469898],[.95420772,.2819879,-.09985214,-.25131004,.93671118,.24375279,.16226795,-.20749695,.96468343],[.95423811,.28199913,-.0995295,-.25135672,.93664831,.2439462,.16201675,-.20776535,.96466789],[.95426866,.28200979,-.0992059,-.25140321,.93658548,.24413943,.16176451,-.20803393,.96465233],[.95429936,.28201988,-.09888134,-.2514495,.93652271,.2443325,.16151124,-.20830269,.96463678],[.95433021,.28202943,-.09855583,-.25149562,.93645997,.24452541,.16125695,-.20857162,.96462121],[.9543612,.28203844,-.09822937,-.25154157,.93639728,.24471816,.16100164,-.20884074,.96460563],[.95439234,.28204693,-.09790198,-.25158737,.93633462,.24491076,.16074534,-.20911005,.96459003],[.9544236,.2820549,-.09757367,-.25163301,.93627199,.24510321,.16048805,-.20937954,.96457441],[.954455,.28206237,-.09724443,-.25167852,.93620939,.24529553,.16022979,-.20964921,.96455877],[.95448651,.28206936,-.09691428,-.2517239,.93614681,.24548772,.15997056,-.20991908,.9645431],[.95451814,.28207586,-.09658323,-.25176915,.93608426,.24567979,.15971038,-.21018913,.96452741],[.95454989,.2820819,-.09625129,-.2518143,.93602171,.24587173,.15944926,-.21045938,.96451168],[.95458174,.28208748,-.09591845,-.25185935,.93595918,.24606356,.15918721,-.21072983,.96449592],[.9546137,.28209263,-.09558474,-.2519043,.93589666,.24625529,.15892424,-.21100046,.96448011],[.95464575,.28209734,-.09525016,-.25194918,.93583414,.24644692,.15866037,-.2112713,.96446427],[.95467789,.28210163,-.09491471,-.25199398,.93577161,.24663845,.1583956,-.21154234,.96444838],[.95471011,.28210552,-.09457841,-.25203872,.93570908,.24682989,.15812995,-.21181357,.96443244],[.95474242,.28210901,-.09424126,-.25208341,.93564654,.24702126,.15786344,-.21208501,.96441645],[.9547748,.28211212,-.09390328,-.25212806,.93558399,.24721255,.15759606,-.21235666,.9644004],[.95480725,.28211486,-.09356447,-.25217267,.93552142,.24740377,.15732785,-.21262851,.96438429],[.95483977,.28211725,-.09322484,-.25221726,.93545882,.24759493,.1570588,-.21290057,.96436813],[.95487235,.28211928,-.0928844,-.25226183,.9353962,.24778603,.15678893,-.21317284,.96435189],[.95490498,.28212098,-.09254315,-.2523064,.93533355,.24797708,.15651825,-.21344532,.96433559],[.95493766,.28212236,-.09220111,-.25235097,.93527086,.24816809,.15624678,-.21371801,.96431922],[.95497038,.28212343,-.09185828,-.25239556,.93520814,.24835906,.15597452,-.21399092,.96430277],[.95500314,.28212419,-.09151468,-.25244017,.93514537,.24855,.1557015,-.21426405,.96428624],[.95503594,.28212468,-.09117031,-.25248482,.93508255,.24874092,.15542772,-.2145374,.96426964],[.95506876,.28212488,-.09082518,-.25252951,.93501968,.24893182,.15515319,-.21481097,.96425294],[.95510161,.28212483,-.09047929,-.25257425,.93495675,.24912271,.15487793,-.21508476,.96423616],[.95513447,.28212453,-.09013267,-.25261905,.93489376,.24931359,.15460195,-.21535877,.96421929],[.95516734,.28212398,-.08978531,-.25266392,.93483071,.24950447,.15432526,-.21563302,.96420232],[.95520023,.28212321,-.08943723,-.25270888,.93476759,.24969536,.15404788,-.21590749,.96418526],[.95523311,.28212223,-.08908843,-.25275392,.9347044,.24988627,.15376982,-.21618219,.96416809],[.95526599,.28212105,-.08873893,-.25279907,.93464112,.25007719,.15349109,-.21645712,.96415082],[.95529887,.28211967,-.08838872,-.25284432,.93457777,.25026814,.1532117,-.21673229,.96413344],[.95533172,.28211812,-.08803783,-.2528897,.93451433,.25045913,.15293167,-.21700769,.96411595],[.95536457,.28211641,-.08768625,-.2529352,.93445079,.25065015,.15265101,-.21728333,.96409835],[.95539738,.28211454,-.08733401,-.25298085,.93438716,.25084122,.15236973,-.21755922,.96408063],[.95543017,.28211253,-.0869811,-.25302664,.93432344,.25103234,.15208785,-.21783534,.96406278],[.95546292,.2821104,-.08662753,-.25307259,.9342596,.25122352,.15180537,-.21811171,.96404482],[.95549563,.28210814,-.08627332,-.2531187,.93419566,.25141477,.15152232,-.21838832,.96402673],[.9555283,.28210579,-.08591848,-.253165,.93413161,.25160608,.1512387,-.21866518,.9640085],[.95556092,.28210334,-.085563,-.25321148,.93406744,.25179748,.15095452,-.21894229,.96399015],[.95559349,.28210082,-.0852069,-.25325816,.93400314,.25198895,.15066981,-.21921966,.96397166],[.95562599,.28209822,-.0848502,-.25330505,.93393872,.25218052,.15038456,-.21949727,.96395302],[.95565843,.28209558,-.08449289,-.25335215,.93387417,.25237218,.1500988,-.21977515,.96393425],[.9556908,.28209289,-.08413498,-.25339948,.93380949,.25256395,.14981254,-.22005328,.96391533],[.9557231,.28209017,-.08377649,-.25344704,.93374466,.25275582,.14952579,-.22033167,.96389626],[.95575531,.28208743,-.08341743,-.25349485,.93367969,.25294781,.14923856,-.22061032,.96387703],[.95578744,.28208469,-.08305779,-.25354292,.93361457,.25313992,.14895086,-.22088924,.96385766],[.95581948,.28208196,-.0826976,-.25359125,.9335493,.25333216,.14866272,-.22116842,.96383812],[.95585142,.28207925,-.08233685,-.25363986,.93348387,.25352453,.14837413,-.22144788,.96381842],[.95588326,.28207657,-.08197556,-.25368875,.93341828,.25371704,.14808512,-.2217276,.96379856],[.955915,.28207394,-.08161374,-.25373794,.93335252,.2539097,.1477957,-.22200759,.96377853],[.95594663,.28207136,-.08125138,-.25378743,.93328659,.25410252,.14750587,-.22228786,.96375833],[.95597814,.28206886,-.08088851,-.25383724,.93322048,.25429549,.14721565,-.22256841,.96373796],[.95600953,.28206644,-.08052513,-.25388737,.93315419,.25448862,.14692506,-.22284924,.96371741],[.9560408,.28206411,-.08016124,-.25393784,.93308772,.25468193,.1466341,-.22313034,.96369668],[.95607194,.28206189,-.07979686,-.25398865,.93302106,.25487541,.14634279,-.22341173,.96367577],[.95610294,.28205979,-.079432,-.25403982,.9329542,.25506908,.14605114,-.22369341,.96365467],[.9561338,.28205783,-.07906665,-.25409136,.93288714,.25526293,.14575917,-.22397537,.96363338],[.95616452,.28205601,-.07870083,-.25414327,.93281988,.25545699,.14546688,-.22425762,.96361191],[.95619509,.28205435,-.07833455,-.25419556,.93275241,.25565124,.14517428,-.22454016,.96359024],[.9562255,.28205286,-.07796781,-.25424825,.93268473,.2558457,.1448814,-.224823,.96356837],[.95625575,.28205155,-.07760062,-.25430135,.93261683,.25604037,.14458823,-.22510614,.9635463],[.95628584,.28205044,-.077233,-.25435487,.93254871,.25623527,.1442948,-.22538957,.96352403],[.95631576,.28204954,-.07686493,-.25440881,.93248036,.25643038,.14400111,-.2256733,.96350155],[.95634551,.28204887,-.07649644,-.25446319,.93241177,.25662573,.14370718,-.22595734,.96347887],[.95637508,.28204842,-.07612753,-.25451802,.93234296,.25682132,.14341302,-.22624168,.96345597],[.95640446,.28204823,-.07575821,-.2545733,.9322739,.25701715,.14311864,-.22652633,.96343286],[.95643366,.28204829,-.07538849,-.25462905,.93220459,.25721323,.14282404,-.22681129,.96340953],[.95646266,.28204863,-.07501836,-.25468529,.93213503,.25740956,.14252925,-.22709656,.96338599],[.95649146,.28204925,-.07464784,-.25474201,.93206522,.25760616,.14223428,-.22738215,.96336222],[.95652007,.28205017,-.07427694,-.25479923,.93199515,.25780302,.14193913,-.22766805,.96333823],[.95654846,.28205141,-.07390565,-.25485696,.93192481,.25800015,.14164382,-.22795427,.96331401],[.95657664,.28205296,-.073534,-.25491522,.9318542,.25819756,.14134835,-.22824082,.96328956],[.95660461,.28205486,-.07316197,-.254974,.93178332,.25839525,.14105274,-.22852769,.96326488],[.95663236,.2820571,-.07278959,-.25503333,.93171216,.25859323,.140757,-.22881488,.96323996],[.95665988,.28205971,-.07241685,-.25509321,.93164071,.25879151,.14046114,-.2291024,.9632148],[.95668717,.28206269,-.07204377,-.25515366,.93156897,.25899008,.14016517,-.22939026,.96318941],[.95671422,.28206606,-.07167034,-.25521468,.93149694,.25918896,.13986911,-.22967844,.96316377],[.95674104,.28206983,-.07129657,-.25527628,.93142461,.25938815,.13957295,-.22996697,.96313789],[.95676761,.28207402,-.07092247,-.25533849,.93135198,.25958766,.13927672,-.23025583,.96311175],[.95679393,.28207863,-.07054805,-.2554013,.93127903,.25978749,.13898042,-.23054503,.96308537],[.95682,.28208368,-.0701733,-.25546473,.93120578,.25998764,.13868406,-.23083457,.96305874],[.95684581,.28208918,-.06979824,-.25552879,.9311322,.26018813,.13838765,-.23112446,.96303185],[.95687136,.28209515,-.06942287,-.25559348,.9310583,.26038895,.1380912,-.2314147,.9630047],[.95689664,.2821016,-.0690472,-.25565884,.93098408,.26059012,.13779473,-.23170529,.9629773],[.95692165,.28210854,-.06867122,-.25572485,.93090951,.26079164,.13749824,-.23199623,.96294963],[.95694638,.28211598,-.06829494,-.25579154,.93083461,.2609935,.13720173,-.23228752,.9629217],[.95697083,.28212394,-.06791837,-.25585891,.93075937,.26119573,.13690523,-.23257917,.9628935],[.956995,.28213243,-.06754152,-.25592698,.93068378,.26139832,.13660874,-.23287119,.96286503],[.95701888,.28214146,-.06716437,-.25599576,.93060784,.26160127,.13631226,-.23316356,.96283629],[.95704247,.28215105,-.06678695,-.25606525,.93053153,.2618046,.13601581,-.23345631,.96280728],[.95706576,.28216121,-.06640925,-.25613548,.93045487,.26200831,.1357194,-.23374941,.96277799],[.95708874,.28217195,-.06603128,-.25620644,.93037784,.2622124,.13542302,-.23404289,.96274842],[.95711142,.28218328,-.06565304,-.25627816,.93030043,.26241687,.13512671,-.23433675,.96271858],[.95713379,.28219522,-.06527453,-.25635065,.93022264,.26262174,.13483045,-.23463097,.96268845],[.95715585,.28220777,-.06489576,-.25642391,.93014448,.262827,.13453426,-.23492558,.96265804],[.95717758,.28222097,-.06451673,-.25649796,.93006592,.26303267,.13423815,-.23522056,.96262735],[.95719899,.2822348,-.06413744,-.2565728,.92998697,.26323874,.13394212,-.23551593,.96259636],[.95722007,.2822493,-.0637579,-.25664846,.92990762,.26344522,.13364618,-.23581168,.96256509],[.95724082,.28226446,-.0633781,-.25672494,.92982787,.26365211,.13335034,-.23610783,.96253352],[.95726124,.28228031,-.06299805,-.25680225,.92974771,.26385942,.13305461,-.23640436,.96250166],[.95728131,.28229686,-.06261775,-.25688041,.92966714,.26406716,.13275899,-.23670128,.96246951],[.95730104,.28231411,-.06223721,-.25695943,.92958615,.26427532,.1324635,-.2369986,.96243705],[.95732041,.28233209,-.06185642,-.25703931,.92950473,.26448392,.13216813,-.23729632,.9624043],[.95733944,.2823508,-.06147538,-.25712008,.92942289,.26469295,.13187289,-.23759444,.96237125],[.95735811,.28237025,-.06109411,-.25720174,.92934061,.26490242,.1315778,-.23789297,.96233789],[.95737642,.28239047,-.06071259,-.2572843,.9292579,.26511233,.13128285,-.2381919,.96230423],[.95739436,.28241146,-.06033083,-.25736778,.92917474,.26532269,.13098805,-.23849124,.96227026],[.95741193,.28243323,-.05994883,-.25745218,.92909113,.2655335,.13069341,-.23879099,.96223599],[.95742913,.28245581,-.05956659,-.25753753,.92900707,.26574477,.13039893,-.23909115,.9622014],[.95744595,.28247919,-.05918411,-.25762383,.92892255,.26595649,.13010463,-.23939173,.96216651],[.95746239,.28250339,-.05880139,-.25771109,.92883757,.26616868,.1298105,-.23969273,.9621313],[.95747845,.28252843,-.05841843,-.25779932,.92875212,.26638133,.12951654,-.23999415,.96209577],[.95749411,.28255431,-.05803524,-.25788855,.92866619,.26659445,.12922278,-.240296,.96205993],[.95750938,.28258106,-.0576518,-.25797877,.92857979,.26680805,.1289292,-.24059827,.96202377],[.95752426,.28260867,-.05726812,-.25807001,.9284929,.26702212,.12863581,-.24090097,.96198729],[.95753873,.28263717,-.0568842,-.25816227,.92840552,.26723667,.12834263,-.24120411,.96195049],[.9575528,.28266657,-.05650004,-.25825556,.92831765,.2674517,.12804964,-.24150768,.96191337],[.95756645,.28269687,-.05611563,-.2583499,.92822928,.26766722,.12775686,-.24181168,.96187593],[.9575797,.2827281,-.05573098,-.2584453,.9281404,.26788323,.12746429,-.24211613,.96183815],[.95759253,.28276025,-.05534608,-.25854178,.92805102,.26809972,.12717193,-.24242102,.96180006],[.95760494,.28279336,-.05496093,-.25863933,.92796112,.26831672,.12687979,-.24272635,.96176163],[.95761692,.28282741,-.05457553,-.25873799,.9278707,.2685342,.12658787,-.24303214,.96172288],[.95762848,.28286244,-.05418987,-.25883775,.92777976,.26875219,.12629617,-.24333837,.96168379],[.9576396,.28289844,-.05380396,-.25893863,.92768829,.26897068,.12600469,-.24364506,.96164438],[.95765029,.28293544,-.05341779,-.25904064,.92759628,.26918968,.12571344,-.2439522,.96160463],[.95766054,.28297344,-.05303135,-.2591438,.92750374,.26940918,.12542242,-.2442598,.96156454],[.95767035,.28301245,-.05264466,-.25924811,.92741065,.2696292,.12513164,-.24456786,.96152412],[.95767971,.2830525,-.05225769,-.25935359,.92731701,.26984972,.12484108,-.24487639,.96148336],[.95768862,.28309358,-.05187045,-.25946026,.92722282,.27007076,.12455076,-.24518538,.96144227],[.95769707,.2831357,-.05148293,-.25956811,.92712807,.27029232,.12426067,-.24549484,.96140084],[.95770507,.28317889,-.05109513,-.25967717,.92703276,.27051439,.12397082,-.24580477,.96135906],[.95771261,.28322315,-.05070705,-.25978744,.92693687,.27073699,.12368121,-.24611517,.96131695],[.95771968,.2832685,-.05031867,-.25989895,.92684042,.2709601,.12339184,-.24642605,.96127449],[.95772629,.28331494,-.04993001,-.26001169,.92674338,.27118374,.12310271,-.24673742,.96123169],[.95773242,.28336248,-.04954104,-.26012569,.92664576,.27140791,.12281382,-.24704926,.96118855],[.95773808,.28341114,-.04915177,-.26024095,.92654756,.2716326,.12252516,-.24736158,.96114506],[.95774326,.28346092,-.0487622,-.26035749,.92644876,.27185782,.12223674,-.2476744,.96110123],[.95774796,.28351184,-.0483723,-.26047532,.92634936,.27208358,.12194857,-.2479877,.96105705],[.95775217,.28356391,-.04798209,-.26059445,.92624936,.27230986,.12166063,-.24830149,.96101252],[.9577559,.28361714,-.04759155,-.26071489,.92614875,.27253667,.12137293,-.24861578,.96096764],[.95775913,.28367154,-.04720068,-.26083665,.92604753,.27276402,.12108546,-.24893057,.96092241],[.95776187,.28372712,-.04680946,-.26095975,.92594569,.2729919,.12079823,-.24924585,.96087684],[.95776411,.28378388,-.04641791,-.2610842,.92584324,.27322032,.12051123,-.24956163,.96083091],[.95776584,.28384185,-.046026,-.26121001,.92574015,.27344927,.12022446,-.24987792,.96078463],[.95776708,.28390103,-.04563373,-.26133718,.92563644,.27367876,.11993793,-.25019472,.960738],[.9577678,.28396142,-.0452411,-.26146574,.92553208,.27390879,.11965161,-.25051202,.96069101],[.95776801,.28402304,-.04484809,-.2615957,.92542709,.27413936,.11936553,-.25082984,.96064367],[.95776771,.2840859,-.0444547,-.26172706,.92532146,.27437046,.11907967,-.25114817,.96059598],[.95776688,.28415001,-.04406092,-.26185984,.92521517,.2746021,.11879402,-.25146702,.96054793],[.95776554,.28421538,-.04366674,-.26199405,.92510823,.27483429,.11850859,-.25178638,.96049952],[.95776367,.28428201,-.04327216,-.26212969,.92500063,.27506701,.11822338,-.25210627,.96045076],[.95776128,.28434992,-.04287716,-.26226679,.92489237,.27530026,.11793837,-.25242668,.96040164],[.95775836,.28441912,-.04248175,-.26240536,.92478344,.27553406,.11765357,-.25274761,.96035217],[.9577549,.2844896,-.0420859,-.26254539,.92467384,.2757684,.11736897,-.25306907,.96030233],[.9577509,.28456139,-.04168961,-.26268691,.92456356,.27600327,.11708457,-.25339107,.96025214],[.95774637,.2846345,-.04129287,-.26282993,.9244526,.27623868,.11680036,-.25371359,.96020159],[.95774129,.28470892,-.04089568,-.26297446,.92434096,.27647463,.11651634,-.25403665,.96015068],[.95773567,.28478466,-.04049802,-.2631205,.92422863,.27671112,.11623251,-.25436025,.96009941],[.9577295,.28486175,-.04009988,-.26326807,.9241156,.27694814,.11594885,-.25468438,.96004777],[.95772277,.28494017,-.03970125,-.26341719,.92400188,.27718569,.11566537,-.25500906,.95999578],[.9577155,.28501995,-.03930212,-.26356785,.92388746,.27742378,.11538205,-.25533428,.95994343],[.95770766,.28510109,-.03890249,-.26372008,.92377233,.27766241,.1150989,-.25566005,.95989072],[.95769927,.28518359,-.03850234,-.26387387,.92365648,.27790156,.1148159,-.25598636,.95983764],[.95769031,.28526747,-.03810166,-.26402925,.92353993,.27814124,.11453306,-.25631322,.9597842],[.95768079,.28535273,-.03770044,-.26418622,.92342266,.27838146,.11425035,-.25664064,.9597304],[.9576707,.28543938,-.03729868,-.2643448,.92330466,.2786222,.11396779,-.25696861,.95967624],[.95766004,.28552742,-.03689635,-.26450499,.92318594,.27886347,.11368536,-.25729713,.95962171],[.9576488,.28561687,-.03649345,-.2646668,.92306649,.27910526,.11340305,-.25762622,.95956682],[.95763699,.28570772,-.03608996,-.26483025,.9229463,.27934757,.11312086,-.25795586,.95951157],[.9576246,.28579999,-.03568588,-.26499533,.92282538,.27959041,.11283877,-.25828606,.95945595],[.95761163,.28589368,-.0352812,-.26516208,.92270371,.27983376,.11255679,-.25861683,.95939997],[.95759808,.2859888,-.03487589,-.26533048,.9225813,.28007763,.11227491,-.25894817,.95934363],[.95758394,.28608534,-.03446996,-.26550056,.92245814,.28032202,.11199311,-.25928007,.95928692],[.95756921,.28618333,-.03406338,-.26567231,.92233423,.28056691,.11171139,-.25961254,.95922984],[.95755388,.28628276,-.03365615,-.26584576,.92220956,.28081232,.11142975,-.25994558,.95917241],[.95753797,.28638365,-.03324825,-.26602091,.92208413,.28105823,.11114816,-.2602792,.9591146],[.95752146,.28648598,-.03283967,-.26619777,.92195794,.28130465,.11086663,-.26061339,.95905644],[.95750434,.28658978,-.0324304,-.26637634,.92183098,.28155156,.11058515,-.26094816,.95899791],[.95748663,.28669504,-.03202042,-.26655665,.92170325,.28179898,.1103037,-.2612835,.95893901],[.95746831,.28680177,-.03160973,-.26673869,.92157475,.28204689,.11002228,-.26161942,.95887975],[.95744939,.28690997,-.03119831,-.26692247,.92144547,.2822953,.10974087,-.26195593,.95882012],[.95742986,.28701965,-.03078614,-.267108,.92131542,.28254419,.10945948,-.26229302,.95876013],[.95740972,.2871308,-.03037322,-.2672953,.92118457,.28279357,.10917808,-.26263069,.95869978],[.95738896,.28724345,-.02995952,-.26748437,.92105295,.28304343,.10889668,-.26296895,.95863906],[.95736759,.28735758,-.02954504,-.26767521,.92092053,.28329377,.10861525,-.2633078,.95857797],[.95734561,.28747321,-.02912977,-.26786784,.92078732,.28354459,.1083338,-.26364724,.95851652],[.957323,.28759033,-.02871369,-.26806226,.92065332,.28379588,.1080523,-.26398727,.95845471],[.95729977,.28770895,-.02829678,-.26825848,.92051851,.28404763,.10777075,-.26432788,.95839253],[.95727592,.28782906,-.02787903,-.2684565,.92038291,.28429985,.10748914,-.2646691,.95832998],[.95725144,.28795069,-.02746043,-.26865635,.9202465,.28455253,.10720746,-.2650109,.95826707],[.95722634,.28807381,-.02704097,-.26885801,.92010929,.28480567,.1069257,-.26535331,.9582038],[.9572006,.28819845,-.02662063,-.2690615,.91997126,.28505926,.10664385,-.26569631,.95814016],[.95717424,.28832459,-.02619939,-.26926683,.91983243,.28531329,.10636189,-.26603991,.95807615],[.95714724,.28845225,-.02577725,-.26947401,.91969278,.28556777,.10607981,-.2663841,.95801179],[.9571196,.28858142,-.02535418,-.26968303,.91955231,.28582269,.10579761,-.2667289,.95794705],[.95709133,.2887121,-.02493018,-.2698939,.91941103,.28607804,.10551527,-.2670743,.95788196],[.95706241,.2888443,-.02450523,-.27010664,.91926892,.28633381,.10523279,-.26742031,.9578165],[.95703286,.28897802,-.02407931,-.27032125,.91912599,.28659002,.10495014,-.26776691,.95775067],[.95700266,.28911325,-.02365242,-.27053772,.91898223,.28684664,.10466732,-.26811413,.95768448],[.95697182,.28925,-.02322453,-.27075608,.91883765,.28710368,.10438431,-.26846194,.95761793],[.95694033,.28938826,-.02279564,-.27097632,.91869223,.28736112,.10410111,-.26881037,.95755101],[.95690819,.28952804,-.02236572,-.27119845,.91854599,.28761897,.1038177,-.2691594,.95748373],[.9568754,.28966934,-.02193477,-.27142247,.9183989,.28787722,.10353408,-.26950904,.95741609],[.95684196,.28981216,-.02150277,-.2716484,.91825099,.28813586,.10325022,-.26985929,.95734809],[.95680787,.28995649,-.0210697,-.27187622,.91810223,.28839489,.10296611,-.27021015,.95727972],[.95677312,.29010234,-.02063556,-.27210596,.91795263,.2886543,.10268175,-.27056162,.95721098],[.95673772,.2902497,-.02020032,-.27233761,.9178022,.28891409,.10239712,-.2709137,.95714189],[.95670165,.29039858,-.01976397,-.27257117,.91765092,.28917425,.10211221,-.2712664,.95707243],[.95666493,.29054896,-.01932649,-.27280666,.91749879,.28943478,.10182701,-.27161971,.95700261],[.95662754,.29070086,-.01888789,-.27304407,.91734582,.28969566,.1015415,-.27197363,.95693243],[.9565895,.29085426,-.01844813,-.27328341,.917192,.2899569,.10125567,-.27232816,.95686188],[.95655078,.29100917,-.0180072,-.27352468,.91703734,.29021849,.10096952,-.27268331,.95679098],[.95651141,.29116558,-.01756509,-.27376789,.91688182,.29048041,.10068301,-.27303907,.95671971],[.95647136,.29132349,-.01712179,-.27401304,.91672545,.29074267,.10039615,-.27339545,.95664808],[.95643065,.2914829,-.01667728,-.27426012,.91656823,.29100527,.10010893,-.27375244,.95657608],[.95638927,.2916438,-.01623155,-.27450915,.91641016,.29126818,.09982131,-.27411005,.95650373],[.95634721,.29180619,-.01578458,-.27476012,.91625123,.29153141,.09953331,-.27446828,.95643101],[.95630449,.29197007,-.01533636,-.27501305,.91609144,.29179494,.0992449,-.27482712,.95635794],[.95626109,.29213543,-.01488687,-.27526792,.9159308,.29205879,.09895606,-.27518657,.9562845],[.95621701,.29230228,-.0144361,-.27552474,.91576931,.29232292,.0986668,-.27554665,.9562107],[.95617226,.29247059,-.01398404,-.27578352,.91560695,.29258735,.09837708,-.27590734,.95613654],[.95612684,.29264038,-.01353068,-.27604425,.91544374,.29285206,.09808691,-.27626865,.95606202],[.95608073,.29281164,-.01307599,-.27630694,.91527967,.29311704,.09779627,-.27663057,.95598714],[.95603395,.29298435,-.01261997,-.27657159,.91511474,.2933823,.09750514,-.27699311,.9559119],[.95598648,.29315853,-.01216259,-.27683819,.91494895,.29364781,.09721351,-.27735627,.9558363],[.95593833,.29333415,-.01170386,-.27710675,.9147823,.29391358,.09692138,-.27772004,.95576034],[.9558895,.29351122,-.01124375,-.27737727,.91461479,.2941796,.09662872,-.27808443,.95568402],[.95583999,.29368973,-.01078225,-.27764975,.91444642,.29444586,.09633552,-.27844944,.95560733],[.95578979,.29386968,-.01031935,-.27792419,.91427719,.29471235,.09604177,-.27881506,.95553029],[.95573891,.29405105,-.00985504,-.27820058,.9141071,.29497907,.09574747,-.2791813,.95545289],[.95568734,.29423385,-.00938929,-.27847894,.91393614,.29524601,.09545258,-.27954815,.95537513],[.95563508,.29441806,-.00892211,-.27875925,.91376433,.29551316,.09515712,-.27991562,.95529701],[.95558213,.29460368,-.00845347,-.27904152,.91359166,.29578051,.09486105,-.2802837,.95521852],[.9555285,.2947907,-.00798337,-.27932574,.91341813,.29604806,.09456437,-.2806524,.95513968],[.95547417,.29497911,-.00751178,-.27961192,.91324374,.2963158,.09426706,-.28102171,.95506048],[.95541916,.29516891,-.00703871,-.27990005,.91306849,.29658372,.09396912,-.28139164,.95498092],[.95536345,.2953601,-.00656413,-.28019013,.91289238,.29685182,.09367052,-.28176217,.954901],[.95530705,.29555265,-.00608803,-.28048216,.91271541,.29712008,.09337127,-.28213332,.95482071],[.95524996,.29574657,-.00561041,-.28077613,.91253759,.2973885,.09307134,-.28250508,.95474007],[.95519218,.29594184,-.00513124,-.28107205,.9123589,.29765707,.09277072,-.28287745,.95465907],[.9551337,.29613847,-.00465053,-.28136992,.91217937,.29792578,.0924694,-.28325044,.95457771],[.95507452,.29633643,-.00416825,-.28166972,.91199898,.29819463,.09216737,-.28362403,.95449599],[.95501465,.29653572,-.0036844,-.28197145,.91181773,.29846361,.09186462,-.28399822,.9544139],[.95495409,.29673634,-.00319896,-.28227512,.91163563,.29873271,.09156114,-.28437303,.95433146],[.95489283,.29693827,-.00271193,-.28258072,.91145268,.29900191,.09125691,-.28474844,.95424866],[.95483087,.2971415,-.00222329,-.28288825,.91126888,.29927123,.09095192,-.28512446,.95416549],[.95476821,.29734602,-.00173303,-.2831977,.91108423,.29954064,.09064615,-.28550109,.95408197],[.95470486,.29755184,-.00124114,-.28350907,.91089873,.29981013,.09033961,-.28587831,.95399808],[.9546408,.29775892,-74762e-8,-.28382235,.91071238,.30007971,.09003228,-.28625615,.95391384],[.95457605,.29796727,-25245e-8,-.28413753,.91052519,.30034936,.08972414,-.28663458,.95382923],[.9545106,.29817688,24439e-8,-.28445463,.91033715,.30061907,.08941518,-.28701361,.95374426],[.95444445,.29838773,74289e-8,-.28477362,.91014828,.30088885,.0891054,-.28739324,.95365893],[.9543776,.29859982,.00124307,-.28509451,.90995856,.30115866,.08879478,-.28777347,.95357323],[.95431005,.29881313,.00174493,-.28541729,.909768,.30142852,.08848332,-.2881543,.95348718],[.9542418,.29902765,.00224849,-.28574196,.9095766,.30169841,.08817099,-.28853573,.95340076],[.95417285,.29924337,.00275376,-.2860685,.90938437,.30196833,.0878578,-.28891774,.95331398],[.95410319,.29946029,.00326074,-.28639692,.90919131,.30223826,.08754372,-.28930036,.95322684],[.95403284,.29967839,.00376944,-.2867272,.90899741,.3025082,.08722876,-.28968356,.95313933],[.95396178,.29989765,.00427987,-.28705935,.90880269,.30277814,.08691289,-.29006735,.95305146],[.95389002,.30011808,.00479204,-.28739335,.90860714,.30304808,.08659612,-.29045174,.95296322],[.95381756,.30033964,.00530596,-.28772919,.90841076,.30331799,.08627843,-.29083671,.95287462],[.9537444,.30056235,.00582163,-.28806688,.90821356,.30358789,.0859598,-.29122227,.95278565],[.95367054,.30078617,.00633906,-.2884064,.90801554,.30385775,.08564024,-.29160841,.95269632],[.95359597,.30101111,.00685826,-.28874775,.9078167,.30412757,.08531973,-.29199513,.95260663],[.9535207,.30123714,.00737924,-.28909092,.90761704,.30439734,.08499826,-.29238244,.95251656],[.95344473,.30146426,.007902,-.28943591,.90741657,.30466706,.08467583,-.29277033,.95242613],[.95336806,.30169245,.00842654,-.28978269,.9072153,.30493671,.08435242,-.29315879,.95233534],[.95329069,.3019217,.00895288,-.29013128,.90701321,.3052063,.08402802,-.29354783,.95224417],[.95321261,.302152,.00948102,-.29048165,.90681032,.3054758,.08370264,-.29393745,.95215264],[.95313383,.30238333,.01001097,-.2908338,.90660662,.30574521,.08337625,-.29432763,.95206074],[.95305435,.30261569,.01054272,-.29118773,.90640213,.30601453,.08304885,-.29471839,.95196846],[.95297417,.30284906,.0110763,-.29154342,.90619683,.30628375,.08272044,-.29510972,.95187582],[.95289328,.30308342,.01161169,-.29190086,.90599075,.30655286,.082391,-.29550162,.95178281],[.9528117,.30331876,.01214891,-.29226005,.90578387,.30682184,.08206053,-.29589408,.95168942],[.95272941,.30355508,.01268796,-.29262098,.90557621,.3070907,.08172903,-.29628711,.95159567],[.95264642,.30379235,.01322885,-.29298363,.90536776,.30735943,.08139647,-.2966807,.95150154],[.95256273,.30403056,.01377157,-.293348,.90515853,.30762801,.08106286,-.29707484,.95140704],[.95247834,.3042697,.01431614,-.29371408,.90494852,.30789645,.08072819,-.29746955,.95131216],[.95239325,.30450976,.01486255,-.29408186,.90473773,.30816472,.08039246,-.29786481,.95121691],[.95230746,.30475072,.01541081,-.29445133,.90452617,.30843284,.08005565,-.29826063,.95112128],[.95222098,.30499256,.01596092,-.29482248,.90431385,.30870078,.07971776,-.29865699,.95102528],[.95213379,.30523528,.01651289,-.29519529,.90410076,.30896854,.07937878,-.29905391,.9509289],[.9520459,.30547886,.01706672,-.29556977,.90388691,.30923611,.07903871,-.29945138,.95083214],[.95195731,.30572328,.0176224,-.29594589,.9036723,.30950349,.07869755,-.29984939,.950735],[.95186803,.30596854,.01817994,-.29632365,.90345693,.30977067,.07835528,-.30024794,.95063748],[.95177805,.30621461,.01873935,-.29670304,.90324082,.31003763,.07801191,-.30064704,.95053958],[.95168737,.30646148,.01930062,-.29708404,.90302395,.31030439,.07766742,-.30104667,.95044131],[.95159599,.30670914,.01986375,-.29746664,.90280635,.31057091,.07732182,-.30144684,.95034264],[.95150392,.30695758,.02042875,-.29785084,.902588,.31083721,.07697509,-.30184754,.9502436],[.95141115,.30720677,.02099562,-.29823662,.90236892,.31110327,.07662724,-.30224878,.95014417],[.95131769,.30745671,.02156435,-.29862397,.90214911,.31136908,.07627826,-.30265055,.95004435],[.95122354,.30770738,.02213495,-.29901288,.90192857,.31163464,.07592814,-.30305284,.94994415],[.95112869,.30795876,.02270741,-.29940334,.90170731,.31189995,.07557688,-.30345566,.94984356],[.95103314,.30821084,.02328174,-.29979533,.90148532,.31216498,.07522449,-.303859,.94974259],[.95093691,.30846361,.02385793,-.30018884,.90126262,.31242975,.07487095,-.30426286,.94964122],[.95083998,.30871705,.02443599,-.30058387,.90103921,.31269423,.07451626,-.30466724,.94953947],[.95074236,.30897114,.02501591,-.30098039,.90081509,.31295844,.07416042,-.30507214,.94943732],[.95064405,.30922587,.02559769,-.3013784,.90059027,.31322234,.07380342,-.30547755,.94933478],[.95054506,.30948123,.02618133,-.30177788,.90036474,.31348595,.07344527,-.30588347,.94923184],[.95044537,.3097372,.02676682,-.30217882,.90013853,.31374926,.07308597,-.3062899,.94912852],[.950345,.30999377,.02735417,-.30258121,.89991162,.31401225,.0727255,-.30669683,.94902479],[.95024394,.31025091,.02794337,-.30298503,.89968402,.31427492,.07236388,-.30710427,.94892067],[.95014219,.31050862,.02853442,-.30339028,.89945575,.31453728,.07200109,-.3075122,.94881615],[.95003976,.31076688,.02912732,-.30379694,.89922679,.3147993,.07163713,-.30792064,.94871123],[.94993664,.31102568,.02972206,-.30420499,.89899717,.31506098,.07127201,-.30832957,.94860591],[.94983284,.31128499,.03031863,-.30461442,.89876687,.31532232,.07090573,-.30873899,.94850019],[.94972836,.31154481,.03091704,-.30502522,.89853591,.31558332,.07053827,-.3091489,.94839407],[.9496232,.31180512,.03151728,-.30543738,.89830429,.31584396,.07016965,-.30955931,.94828754],[.94951736,.31206591,.03211935,-.30585088,.89807202,.31610424,.06979987,-.30997019,.9481806],[.94941084,.31232715,.03272323,-.30626571,.89783909,.31636415,.06942891,-.31038156,.94807326],[.94930364,.31258884,.03332894,-.30668185,.89760552,.3166237,.06905679,-.31079341,.94796551],[.94919577,.31285095,.03393645,-.30709929,.89737131,.31688286,.06868351,-.31120573,.94785736],[.94908721,.31311348,.03454577,-.30751802,.89713647,.31714165,.06830905,-.31161853,.94774879],[.94897799,.3133764,.03515689,-.30793802,.89690099,.31740005,.06793344,-.3120318,.94763981],[.94886809,.31363971,.0357698,-.30835928,.89666488,.31765806,.06755666,-.31244554,.94753041],[.94875752,.31390339,.0363845,-.30878178,.89642816,.31791566,.06717871,-.31285975,.9474206],[.94864628,.31416741,.03700098,-.30920551,.89619081,.31817287,.06679961,-.31327442,.94731038],[.94853437,.31443178,.03761924,-.30963046,.89595286,.31842967,.06641934,-.31368955,.94719974],[.94842179,.31469646,.03823926,-.3100566,.8957143,.31868606,.06603792,-.31410514,.94708867],[.94830855,.31496146,.03886104,-.31048394,.89547513,.31894203,.06565535,-.31452118,.94697719],[.94819464,.31522674,.03948458,-.31091244,.89523537,.31919757,.06527162,-.31493767,.94686529],[.94808006,.3154923,.04010986,-.3113421,.89499501,.31945269,.06488674,-.31535462,.94675296],[.94796483,.31575812,.04073688,-.3117729,.89475407,.31970738,.06450072,-.31577201,.94664021],[.94784893,.31602419,.04136562,-.31220483,.89451255,.31996164,.06411355,-.31618984,.94652704],[.94773238,.31629048,.04199609,-.31263787,.89427045,.32021545,.06372524,-.31660812,.94641344],[.94761516,.31655699,.04262827,-.313072,.89402777,.32046882,.06333579,-.31702683,.94629941],[.9474973,.31682371,.04326215,-.31350722,.89378453,.32072174,.06294521,-.31744598,.94618494],[.94737877,.3170906,.04389773,-.3139435,.89354073,.32097421,.0625535,-.31786556,.94607005],[.9472596,.31735767,.04453499,-.31438083,.89329637,.32122623,.06216066,-.31828557,.94595473],[.94713977,.31762489,.04517393,-.3148192,.89305146,.32147778,.0617667,-.31870601,.94583897],[.94701929,.31789226,.04581453,-.31525859,.892806,.32172887,.06137163,-.31912687,.94572277],[.94689817,.31815974,.04645679,-.31569899,.89256,.32197949,.06097544,-.31954815,.94560614],[.9467764,.31842734,.0471007,-.31614037,.89231347,.32222964,.06057814,-.31996985,.94548907],[.94665399,.31869504,.04774624,-.31658273,.8920664,.32247932,.06017974,-.32039197,.94537156],[.94653093,.31896281,.0483934,-.31702605,.89181881,.32272852,.05978025,-.32081449,.94525361],[.94640724,.31923065,.04904218,-.31747031,.8915707,.32297723,.05937966,-.32123743,.94513521],[.9462829,.31949854,.04969257,-.3179155,.89132207,.32322547,.05897798,-.32166077,.94501637],[.94615793,.31976646,.05034454,-.3183616,.89107294,.32347321,.05857522,-.32208452,.94489709]];return a}function Fi(){var a=[[0,0,0,0,0,0,0,0,0],[1,-2e-8,72e-8,2e-8,1,-18e-8,-72e-8,18e-8,1],[1,-5e-8,215e-8,5e-8,1,-55e-8,-215e-8,55e-8,1],[1,-1e-7,428e-8,1e-7,1,-11e-7,-428e-8,11e-7,1],[1,-14e-8,711e-8,14e-8,1,-182e-8,-711e-8,182e-8,1],[1,-18e-8,1063e-8,18e-8,1,-273e-8,-1063e-8,273e-8,1],[1,-21e-8,1483e-8,21e-8,1,-381e-8,-1483e-8,381e-8,1],[1,-23e-8,197e-7,23e-8,1,-506e-8,-197e-7,506e-8,1],[1,-22e-8,2524e-8,22e-8,1,-648e-8,-2524e-8,648e-8,1],[1,-19e-8,3144e-8,19e-8,1,-807e-8,-3144e-8,807e-8,1],[1,-12e-8,3829e-8,12e-8,1,-983e-8,-3829e-8,983e-8,1],[1,-2e-8,4579e-8,2e-8,1,-1176e-8,-4579e-8,1176e-8,1],[1,13e-8,5392e-8,-13e-8,1,-1385e-8,-5392e-8,1385e-8,1],[1,33e-8,6268e-8,-33e-8,1,-1611e-8,-6268e-8,1611e-8,1],[1,58e-8,7206e-8,-58e-8,1,-1852e-8,-7206e-8,1852e-8,1],[1,9e-7,8205e-8,-9e-7,1,-2109e-8,-8205e-8,2109e-8,1],[1,129e-8,9265e-8,-129e-8,1,-2382e-8,-9265e-8,2382e-8,1],[.99999999,175e-8,10384e-8,-175e-8,1,-2671e-8,-10384e-8,2671e-8,.99999999],[.99999999,229e-8,11563e-8,-229e-8,1,-2975e-8,-11563e-8,2975e-8,.99999999],[.99999999,292e-8,12799e-8,-292e-8,1,-3294e-8,-12799e-8,3294e-8,.99999999],[.99999999,364e-8,14094e-8,-363e-8,1,-3627e-8,-14094e-8,3627e-8,.99999999],[.99999999,446e-8,15445e-8,-445e-8,1,-3976e-8,-15445e-8,3976e-8,.99999999],[.99999999,538e-8,16851e-8,-537e-8,1,-4339e-8,-16851e-8,4339e-8,.99999998],[.99999998,641e-8,18313e-8,-64e-7,1,-4717e-8,-18313e-8,4717e-8,.99999998],[.99999998,756e-8,19829e-8,-755e-8,1,-5109e-8,-19829e-8,5109e-8,.99999998],[.99999998,883e-8,21399e-8,-882e-8,1,-5515e-8,-21399e-8,5515e-8,.99999998],[.99999997,1023e-8,23021e-8,-1022e-8,1,-5935e-8,-23021e-8,5935e-8,.99999997],[.99999997,1176e-8,24696e-8,-1175e-8,1,-6368e-8,-24696e-8,6368e-8,.99999997],[.99999997,1344e-8,26421e-8,-1342e-8,1,-6815e-8,-26421e-8,6815e-8,.99999996],[.99999996,1525e-8,28197e-8,-1523e-8,1,-7276e-8,-28197e-8,7275e-8,.99999996],[.99999995,1722e-8,30022e-8,-172e-7,1,-7749e-8,-30022e-8,7748e-8,.99999995],[.99999995,1935e-8,31896e-8,-1933e-8,1,-8235e-8,-31897e-8,8235e-8,.99999995],[.99999994,2164e-8,33818e-8,-2161e-8,1,-8734e-8,-33819e-8,8734e-8,.99999994],[.99999994,2411e-8,35787e-8,-2407e-8,1,-9246e-8,-35788e-8,9245e-8,.99999993],[.99999993,2674e-8,37803e-8,-2671e-8,.99999999,-977e-7,-37803e-8,9769e-8,.99999992],[.99999992,2956e-8,39864e-8,-2952e-8,.99999999,-10306e-8,-39864e-8,10305e-8,.99999992],[.99999991,3257e-8,41969e-8,-3252e-8,.99999999,-10855e-8,-4197e-7,10853e-8,.99999991],[.9999999,3576e-8,44119e-8,-3571e-8,.99999999,-11415e-8,-44119e-8,11413e-8,.9999999],[.99999989,3916e-8,46311e-8,-3911e-8,.99999999,-11986e-8,-46312e-8,11985e-8,.99999989],[.99999988,4277e-8,48546e-8,-427e-7,.99999999,-1257e-7,-48546e-8,12568e-8,.99999987],[.99999987,4658e-8,50822e-8,-4651e-8,.99999999,-13164e-8,-50822e-8,13162e-8,.99999986],[.99999986,5061e-8,53138e-8,-5054e-8,.99999999,-1377e-7,-53139e-8,13767e-8,.99999985],[.99999984,5486e-8,55494e-8,-5478e-8,.99999999,-14387e-8,-55495e-8,14384e-8,.99999984],[.99999983,5934e-8,57889e-8,-5926e-8,.99999999,-15014e-8,-5789e-7,15011e-8,.99999982],[.99999982,6406e-8,60322e-8,-6396e-8,.99999999,-15652e-8,-60323e-8,15648e-8,.99999981],[.9999998,6901e-8,62793e-8,-6891e-8,.99999998,-16301e-8,-62794e-8,16296e-8,.99999979],[.99999978,7421e-8,65299e-8,-741e-7,.99999998,-16959e-8,-65301e-8,16954e-8,.99999977],[.99999977,7967e-8,67841e-8,-7955e-8,.99999998,-17628e-8,-67843e-8,17623e-8,.99999975],[.99999975,8538e-8,70418e-8,-8525e-8,.99999998,-18307e-8,-7042e-7,18301e-8,.99999974],[.99999973,9135e-8,73029e-8,-9121e-8,.99999998,-18995e-8,-7303e-7,18988e-8,.99999972],[.99999971,9759e-8,75672e-8,-9744e-8,.99999998,-19693e-8,-75674e-8,19685e-8,.99999969],[.99999969,10411e-8,78348e-8,-10395e-8,.99999997,-204e-6,-7835e-7,20392e-8,.99999967],[.99999967,1109e-7,81054e-8,-11073e-8,.99999997,-21116e-8,-81057e-8,21107e-8,.99999965],[.99999964,11798e-8,83791e-8,-1178e-7,.99999997,-21842e-8,-83794e-8,21832e-8,.99999963],[.99999962,12535e-8,86558e-8,-12516e-8,.99999997,-22576e-8,-86561e-8,22565e-8,.9999996],[.99999959,13302e-8,89353e-8,-13282e-8,.99999996,-23319e-8,-89356e-8,23307e-8,.99999957],[.99999957,141e-6,92176e-8,-14077e-8,.99999996,-2407e-7,-92179e-8,24057e-8,.99999955],[.99999954,14927e-8,95025e-8,-14904e-8,.99999996,-2483e-7,-95029e-8,24816e-8,.99999952],[.99999951,15787e-8,97901e-8,-15762e-8,.99999995,-25598e-8,-97905e-8,25583e-8,.99999949],[.99999948,16678e-8,.00100802,-16651e-8,.99999995,-26374e-8,-.00100806,26357e-8,.99999946],[.99999945,17601e-8,.00103727,-17573e-8,.99999995,-27158e-8,-.00103731,27139e-8,.99999943],[.99999941,18558e-8,.00106675,-18528e-8,.99999994,-27949e-8,-.0010668,27929e-8,.99999939],[.99999938,19548e-8,.00109645,-19517e-8,.99999994,-28748e-8,-.00109651,28727e-8,.99999936],[.99999934,20572e-8,.00112637,-20539e-8,.99999994,-29554e-8,-.00112644,29531e-8,.99999932],[.99999931,21631e-8,.0011565,-21596e-8,.99999993,-30368e-8,-.00115657,30343e-8,.99999929],[.99999927,22725e-8,.00118683,-22688e-8,.99999993,-31188e-8,-.0011869,31161e-8,.99999925],[.99999923,23854e-8,.00121734,-23815e-8,.99999992,-32015e-8,-.00121741,31986e-8,.99999921],[.99999919,2502e-7,.00124803,-24979e-8,.99999991,-32849e-8,-.00124811,32818e-8,.99999917],[.99999915,26222e-8,.00127889,-26179e-8,.99999991,-3369e-7,-.00127898,33656e-8,.99999913],[.9999991,27462e-8,.00130991,-27417e-8,.9999999,-34537e-8,-.00131001,34501e-8,.99999908],[.99999906,28739e-8,.00134108,-28692e-8,.9999999,-3539e-7,-.00134119,35351e-8,.99999904],[.99999901,30055e-8,.0013724,-30005e-8,.99999989,-36249e-8,-.00137251,36208e-8,.99999899],[.99999897,31409e-8,.00140385,-31357e-8,.99999988,-37114e-8,-.00140396,3707e-7,.99999895],[.99999892,32803e-8,.00143542,-32748e-8,.99999987,-37985e-8,-.00143554,37938e-8,.9999989],[.99999887,34236e-8,.00146711,-34179e-8,.99999987,-38861e-8,-.00146724,38811e-8,.99999885],[.99999881,35709e-8,.0014989,-3565e-7,.99999986,-39743e-8,-.00149904,3969e-7,.9999988],[.99999876,37224e-8,.00153079,-37162e-8,.99999985,-4063e-7,-.00153094,40573e-8,.99999875],[.9999987,38779e-8,.00156276,-38714e-8,.99999984,-41523e-8,-.00156292,41462e-8,.99999869],[.99999865,40376e-8,.00159481,-40309e-8,.99999983,-4242e-7,-.00159498,42356e-8,.99999864],[.99999859,42016e-8,.00162693,-41945e-8,.99999982,-43322e-8,-.00162711,43254e-8,.99999858],[.99999853,43698e-8,.0016591,-43624e-8,.99999981,-44229e-8,-.00165929,44157e-8,.99999853],[.99999847,45423e-8,.00169132,-45347e-8,.9999998,-4514e-7,-.00169153,45064e-8,.99999847],[.9999984,47192e-8,.00172359,-47112e-8,.99999978,-46056e-8,-.0017238,45975e-8,.99999841],[.99999834,49004e-8,.00175588,-48922e-8,.99999977,-46976e-8,-.00175611,4689e-7,.99999835],[.99999827,50862e-8,.00178819,-50776e-8,.99999976,-47901e-8,-.00178843,4781e-7,.99999829],[.9999982,52764e-8,.00182051,-52675e-8,.99999974,-48829e-8,-.00182077,48733e-8,.99999822],[.99999813,54712e-8,.00185283,-5462e-7,.99999973,-49761e-8,-.0018531,4966e-7,.99999816],[.99999806,56705e-8,.00188514,-5661e-7,.99999971,-50697e-8,-.00188543,5059e-7,.99999809],[.99999799,58745e-8,.00191743,-58646e-8,.99999969,-51637e-8,-.00191774,51524e-8,.99999803],[.99999791,60832e-8,.0019497,-60729e-8,.99999968,-5258e-7,-.00195002,52461e-8,.99999796],[.99999784,62965e-8,.00198192,-62859e-8,.99999966,-53526e-8,-.00198226,53401e-8,.99999789],[.99999776,65147e-8,.0020141,-65037e-8,.99999964,-54476e-8,-.00201445,54345e-8,.99999782],[.99999768,67376e-8,.00204621,-67263e-8,.99999962,-55428e-8,-.00204659,55291e-8,.99999775],[.9999976,69654e-8,.00207826,-69537e-8,.9999996,-56384e-8,-.00207865,56239e-8,.99999768],[.99999751,7198e-7,.00211023,-71859e-8,.99999958,-57342e-8,-.00211064,57191e-8,.99999761],[.99999743,74356e-8,.00214211,-74231e-8,.99999955,-58304e-8,-.00214254,58144e-8,.99999754],[.99999734,76781e-8,.00217389,-76653e-8,.99999953,-59267e-8,-.00217435,59101e-8,.99999746],[.99999725,79257e-8,.00220557,-79124e-8,.99999951,-60234e-8,-.00220604,60059e-8,.99999739],[.99999716,81782e-8,.00223712,-81646e-8,.99999948,-61202e-8,-.00223762,61019e-8,.99999731],[.99999707,84359e-8,.00226855,-84218e-8,.99999945,-62173e-8,-.00226907,61982e-8,.99999723],[.99999698,86986e-8,.00229983,-86841e-8,.99999942,-63146e-8,-.00230038,62946e-8,.99999716],[.99999688,89666e-8,.00233097,-89516e-8,.99999939,-64121e-8,-.00233154,63912e-8,.99999708],[.99999678,92397e-8,.00236195,-92243e-8,.99999936,-65098e-8,-.00236255,6488e-7,.999997],[.99999668,9518e-7,.00239276,-95022e-8,.99999933,-66076e-8,-.00239339,65849e-8,.99999692],[.99999658,98016e-8,.00242339,-97853e-8,.9999993,-67057e-8,-.00242404,66819e-8,.99999684],[.99999648,.00100904,.00245383,-.00100738,.99999926,-68039e-8,-.00245451,67791e-8,.99999676],[.99999638,.00103846,.00248407,-.00103675,.99999922,-69022e-8,-.00248478,68764e-8,.99999668],[.99999627,.00106842,.0025141,-.00106666,.99999919,-70007e-8,-.00251484,69738e-8,.99999659],[.99999616,.00109891,.00254391,-.00109711,.99999915,-70993e-8,-.00254468,70713e-8,.99999651],[.99999605,.00112995,.00257348,-.0011281,.9999991,-7198e-7,-.00257429,71689e-8,.99999643],[.99999594,.00116153,.00260282,-.00115963,.99999906,-72968e-8,-.00260366,72666e-8,.99999635],[.99999582,.00119366,.0026319,-.00119172,.99999902,-73958e-8,-.00263278,73644e-8,.99999626],[.99999571,.00122634,.00266072,-.00122435,.99999897,-74948e-8,-.00266164,74622e-8,.99999618],[.99999559,.00125957,.00268927,-.00125754,.99999892,-75939e-8,-.00269022,756e-6,.9999961],[.99999547,.00129337,.00271753,-.00129128,.99999887,-7693e-7,-.00271852,76579e-8,.99999601],[.99999535,.00132772,.0027455,-.00132558,.99999882,-77923e-8,-.00274653,77558e-8,.99999593],[.99999523,.00136263,.00277317,-.00136045,.99999876,-78915e-8,-.00277424,78538e-8,.99999584],[.9999951,.00139811,.00280052,-.00139588,.99999871,-79909e-8,-.00280163,79517e-8,.99999576],[.99999497,.00143416,.00282754,-.00143188,.99999865,-80902e-8,-.0028287,80497e-8,.99999568],[.99999485,.00147078,.00285423,-.00146845,.99999859,-81896e-8,-.00285543,81476e-8,.99999559],[.99999471,.00150797,.00288057,-.00150559,.99999852,-8289e-7,-.00288181,82456e-8,.99999551],[.99999458,.00154574,.00290655,-.0015433,.99999846,-83884e-8,-.00290784,83435e-8,.99999542],[.99999445,.00158408,.00293216,-.0015816,.99999839,-84879e-8,-.0029335,84415e-8,.99999534],[.99999431,.001623,.0029574,-.00162047,.99999832,-85873e-8,-.00295879,85393e-8,.99999526],[.99999417,.00166251,.00298224,-.00165992,.99999825,-86867e-8,-.00298368,86372e-8,.99999518],[.99999403,.00170259,.00300669,-.00169996,.99999817,-87861e-8,-.00300818,8735e-7,.99999509],[.99999389,.00174327,.00303072,-.00174058,.99999809,-88855e-8,-.00303227,88327e-8,.99999501],[.99999374,.00178453,.00305433,-.00178179,.99999801,-89849e-8,-.00305593,89304e-8,.99999493],[.9999936,.00182638,.00307751,-.00182359,.99999792,-90842e-8,-.00307916,9028e-7,.99999485],[.99999345,.00186882,.00310024,-.00186598,.99999784,-91835e-8,-.00310195,91256e-8,.99999477],[.9999933,.00191185,.00312252,-.00190896,.99999775,-92827e-8,-.00312429,92231e-8,.99999469],[.99999314,.00195548,.00314434,-.00195254,.99999765,-93819e-8,-.00314616,93205e-8,.99999462],[.99999299,.00199971,.00316567,-.00199671,.99999756,-94811e-8,-.00316756,94178e-8,.99999454],[.99999283,.00204453,.00318652,-.00204149,.99999746,-95802e-8,-.00318847,9515e-7,.99999446],[.99999267,.00208995,.00320687,-.00208685,.99999735,-96792e-8,-.00320889,96122e-8,.99999439],[.99999251,.00213597,.00322672,-.00213282,.99999725,-97781e-8,-.0032288,97092e-8,.99999432],[.99999235,.00218259,.00324604,-.00217939,.99999714,-9877e-7,-.00324819,98062e-8,.99999424],[.99999218,.00222981,.00326483,-.00222657,.99999702,-99758e-8,-.00326705,9903e-7,.99999417],[.99999202,.00227764,.00328308,-.00227434,.99999691,-.00100745,-.00328536,99997e-8,.9999941],[.99999185,.00232607,.00330078,-.00232273,.99999679,-.00101731,-.00330313,.00100963,.99999403],[.99999168,.00237511,.00331791,-.00237171,.99999666,-.00102716,-.00332034,.00101929,.99999397],[.9999915,.00242475,.00333447,-.0024213,.99999653,-.00103701,-.00333697,.00102892,.9999939],[.99999132,.002475,.00335044,-.0024715,.9999964,-.00104684,-.00335302,.00103855,.99999384],[.99999115,.00252585,.00336581,-.00252231,.99999626,-.00105667,-.00336847,.00104817,.99999378],[.99999096,.00257732,.00338058,-.00257373,.99999612,-.00106648,-.00338332,.00105777,.99999372],[.99999078,.00262939,.00339473,-.00262575,.99999597,-.00107629,-.00339755,.00106736,.99999366],[.9999906,.00268207,.00340825,-.00267838,.99999582,-.00108608,-.00341115,.00107694,.9999936],[.99999041,.00273536,.00342113,-.00273162,.99999567,-.00109586,-.00342411,.00108651,.99999355],[.99999022,.00278925,.00343335,-.00278547,.99999551,-.00110563,-.00343642,.00109606,.99999349],[.99999002,.00284376,.00344492,-.00283993,.99999535,-.0011154,-.00344807,.0011056,.99999344],[.99998983,.00289887,.00345581,-.002895,.99999518,-.00112515,-.00345905,.00111513,.9999934],[.99998963,.0029546,.00346601,-.00295068,.999995,-.00113489,-.00346935,.00112465,.99999335],[.99998943,.00301093,.00347552,-.00300697,.99999482,-.00114461,-.00347895,.00113415,.99999331],[.99998922,.00306787,.00348432,-.00306386,.99999464,-.00115433,-.00348784,.00114364,.99999326],[.99998902,.00312542,.0034924,-.00312137,.99999445,-.00116403,-.00349602,.00115312,.99999322],[.99998881,.00318357,.00349976,-.00317948,.99999426,-.00117373,-.00350347,.00116259,.99999319],[.9999886,.00324234,.00350637,-.00323821,.99999406,-.00118341,-.00351019,.00117204,.99999315],[.99998838,.00330171,.00351223,-.00329754,.99999385,-.00119308,-.00351615,.00118149,.99999312],[.99998816,.00336168,.00351733,-.00335747,.99999364,-.00120274,-.00352136,.00119092,.99999309],[.99998794,.00342226,.00352166,-.00341801,.99999342,-.00121239,-.00352579,.00120034,.99999306],[.99998772,.00348345,.00352521,-.00347916,.9999932,-.00122203,-.00352944,.00120975,.99999304],[.99998749,.00354523,.00352796,-.00354091,.99999297,-.00123166,-.0035323,.00121915,.99999302],[.99998726,.00360762,.0035299,-.00360326,.99999274,-.00124127,-.00353435,.00122854,.999993],[.99998703,.00367061,.00353102,-.00366621,.9999925,-.00125088,-.00353559,.00123792,.99999298],[.99998679,.0037342,.00353132,-.00372977,.99999225,-.00126047,-.003536,.00124729,.99999297],[.99998655,.00379839,.00353078,-.00379392,.999992,-.00127006,-.00353558,.00125665,.99999296],[.99998631,.00386317,.00352939,-.00385867,.99999174,-.00127963,-.00353431,.001266,.99999295],[.99998606,.00392855,.00352714,-.00392402,.99999147,-.0012892,-.00353218,.00127534,.99999295],[.99998581,.00399452,.00352402,-.00398996,.9999912,-.00129876,-.00352918,.00128468,.99999295],[.99998556,.00406108,.00352001,-.0040565,.99999092,-.00130831,-.00352529,.00129401,.99999295],[.9999853,.00412823,.00351511,-.00412362,.99999063,-.00131785,-.00352052,.00130333,.99999295],[.99998504,.00419597,.00350931,-.00419134,.99999034,-.00132738,-.00351485,.00131265,.99999296],[.99998477,.0042643,.0035026,-.00425964,.99999003,-.00133691,-.00350826,.00132196,.99999297],[.9999845,.00433321,.00349495,-.00432853,.99998973,-.00134642,-.00350075,.00133127,.99999299],[.99998423,.0044027,.00348637,-.004398,.99998941,-.00135593,-.00349231,.00134058,.999993],[.99998395,.00447277,.00347685,-.00446805,.99998909,-.00136544,-.00348292,.00134988,.99999302],[.99998367,.00454342,.00346636,-.00453868,.99998875,-.00137494,-.00347257,.00135918,.99999305],[.99998338,.00461464,.00345491,-.00460988,.99998842,-.00138443,-.00346126,.00136848,.99999307],[.99998309,.00468643,.00344248,-.00468166,.99998807,-.00139392,-.00344897,.00137778,.9999931],[.9999828,.0047588,.00342905,-.00475401,.99998771,-.00140341,-.00343569,.00138708,.99999314],[.9999825,.00483172,.00341463,-.00482692,.99998735,-.00141289,-.00342141,.00139638,.99999317],[.99998219,.00490522,.0033992,-.0049004,.99998698,-.00142237,-.00340613,.00140568,.99999321],[.99998188,.00497927,.00338274,-.00497445,.9999866,-.00143184,-.00338983,.00141499,.99999325],[.99998157,.00505388,.00336525,-.00504905,.99998621,-.00144132,-.00337249,.0014243,.9999933],[.99998125,.00512904,.00334672,-.00512421,.99998582,-.00145079,-.00335412,.00143362,.99999335],[.99998092,.00520475,.00332714,-.00519992,.99998541,-.00146027,-.00333469,.00144294,.9999934],[.99998059,.00528101,.00330649,-.00527618,.999985,-.00146974,-.0033142,.00145227,.99999345],[.99998025,.00535782,.00328477,-.00535298,.99998458,-.00147922,-.00329265,.00146161,.99999351],[.99997991,.00543516,.00326197,-.00543033,.99998415,-.0014887,-.00327001,.00147096,.99999357],[.99997956,.00551305,.00323807,-.00550822,.99998371,-.00149818,-.00324627,.00148032,.99999364],[.99997921,.00559146,.00321306,-.00558664,.99998326,-.00150767,-.00322144,.00148969,.9999937],[.99997884,.0056704,.00318694,-.00566559,.9999828,-.00151716,-.00319549,.00149907,.99999377],[.99997848,.00574987,.0031597,-.00574507,.99998233,-.00152666,-.00316842,.00150847,.99999384],[.9999781,.00582986,.00313132,-.00582508,.99998185,-.00153616,-.00314022,.00151789,.99999392],[.99997772,.00591037,.00310179,-.0059056,.99998137,-.00154567,-.00311087,.00152732,.99999399],[.99997734,.00599139,.00307111,-.00598664,.99998087,-.00155519,-.00308037,.00153677,.99999407],[.99997694,.00607292,.00303927,-.00606819,.99998036,-.00156473,-.00304871,.00154625,.99999416],[.99997654,.00615496,.00300625,-.00615024,.99997985,-.00157427,-.00301588,.00155574,.99999424],[.99997613,.00623749,.00297204,-.0062328,.99997932,-.00158382,-.00298186,.00156526,.99999433],[.99997571,.00632052,.00293664,-.00631586,.99997879,-.00159338,-.00294665,.0015748,.99999442],[.99997529,.00640403,.00290004,-.00639941,.99997824,-.00160296,-.00291024,.00158437,.99999451],[.99997486,.00648804,.00286222,-.00648344,.99997768,-.00161256,-.00287262,.00159396,.9999946],[.99997442,.00657252,.00282317,-.00656796,.99997711,-.00162217,-.00283377,.00160359,.9999947],[.99997397,.00665748,.0027829,-.00665296,.99997654,-.0016318,-.0027937,.00161324,.9999948],[.99997351,.00674292,.00274138,-.00673843,.99997595,-.00164144,-.00275238,.00162293,.9999949],[.99997304,.00682881,.0026986,-.00682437,.99997535,-.00165111,-.00270981,.00163265,.999995],[.99997257,.00691517,.00265457,-.00691078,.99997474,-.0016608,-.00266599,.00164241,.9999951],[.99997208,.00700198,.00260926,-.00699764,.99997412,-.00167051,-.00262089,.0016522,.9999952],[.99997159,.00708924,.00256268,-.00708495,.99997349,-.00168024,-.00257452,.00166204,.9999953],[.99997108,.00717695,.0025148,-.00717271,.99997285,-.00169,-.00252686,.00167191,.99999541],[.99997057,.00726509,.00246562,-.00726091,.99997219,-.00169978,-.0024779,.00168183,.99999552],[.99997004,.00735367,.00241514,-.00734955,.99997153,-.00170959,-.00242764,.00169179,.99999562],[.99996951,.00744267,.00236334,-.00743862,.99997085,-.00171944,-.00237607,.0017018,.99999573],[.99996896,.0075321,.00231021,-.00752811,.99997017,-.00172931,-.00232317,.00171186,.99999584],[.99996841,.00762194,.00225575,-.00761802,.99996947,-.00173921,-.00226894,.00172197,.99999594],[.99996784,.00771219,.00219995,-.00770835,.99996876,-.00174915,-.00221337,.00173213,.99999605],[.99996726,.00780284,.00214279,-.00779908,.99996804,-.00175912,-.00215645,.00174235,.99999616],[.99996667,.00789389,.00208427,-.00789021,.99996731,-.00176912,-.00209817,.00175262,.99999626],[.99996607,.00798533,.00202438,-.00798173,.99996656,-.00177917,-.00203852,.00176295,.99999637],[.99996545,.00807715,.00196311,-.00807364,.99996581,-.00178925,-.0019775,.00177334,.99999647],[.99996482,.00816935,.00190046,-.00816594,.99996504,-.00179938,-.00191509,.00178379,.99999658],[.99996418,.00826193,.00183641,-.0082586,.99996426,-.00180954,-.00185129,.00179431,.99999668],[.99996353,.00835486,.00177096,-.00835164,.99996347,-.00181975,-.0017861,.0018049,.99999678],[.99996286,.00844816,.00170409,-.00844504,.99996267,-.00183001,-.00171949,.00181555,.99999687],[.99996218,.0085418,.00163581,-.00853879,.99996185,-.00184031,-.00165147,.00182628,.99999697],[.99996148,.00863579,.0015661,-.00863289,.99996102,-.00185067,-.00158202,.00183708,.99999706],[.99996077,.00873012,.00149496,-.00872733,.99996018,-.00186107,-.00151114,.00184795,.99999715],[.99996005,.00882477,.00142237,-.0088221,.99995933,-.00187153,-.00143882,.0018589,.99999724],[.99995931,.00891975,.00134833,-.00891721,.99995847,-.00188203,-.00136506,.00186993,.99999732],[.99995855,.00901505,.00127283,-.00901263,.99995759,-.0018926,-.00128984,.00188105,.9999974],[.99995778,.00911065,.00119586,-.00910836,.99995671,-.00190322,-.00121315,.00189225,.99999747],[.99995699,.00920655,.00111742,-.0092044,.99995581,-.00191391,-.00113499,.00190354,.99999754],[.99995619,.00930275,.0010375,-.00930074,.99995489,-.00192465,-.00105536,.00191491,.99999761],[.99995537,.00939923,95609e-8,-.00939737,.99995397,-.00193546,-97424e-8,.00192638,.99999767],[.99995453,.00949599,87319e-8,-.00949428,.99995303,-.00194633,-89163e-8,.00193795,.99999772],[.99995367,.00959302,78878e-8,-.00959146,.99995209,-.00195726,-80752e-8,.00194961,.99999777],[.9999528,.00969032,70287e-8,-.00968892,.99995112,-.00196827,-7219e-7,.00196137,.99999782],[.99995191,.00978787,61543e-8,-.00978663,.99995015,-.00197935,-63478e-8,.00197323,.99999785],[.999951,.00988566,52648e-8,-.0098846,.99994917,-.0019905,-54613e-8,.0019852,.99999788],[.99995007,.0099837,43599e-8,-.00998281,.99994817,-.00200172,-45595e-8,.00199727,.9999979],[.99994912,.01008197,34396e-8,-.01008125,.99994716,-.00201302,-36424e-8,.00200945,.99999791],[.99994815,.01018046,2504e-7,-.01017993,.99994613,-.0020244,-27099e-8,.00202175,.99999792],[.99994716,.01027916,15528e-8,-.01027882,.9999451,-.00203586,-1762e-7,.00203416,.99999792],[.99994614,.01037807,586e-7,-.01037793,.99994405,-.00204741,-7985e-8,.00204669,.9999979],[.99994511,.01047718,-3963e-8,-.01047724,.99994299,-.00205903,1806e-8,.00205934,.99999788],[.99994406,.01057648,-13944e-8,-.01057675,.99994192,-.00207075,11753e-8,.00207211,.99999785],[.99994298,.01067596,-24081e-8,-.01067644,.99994084,-.00208255,21857e-8,.002085,.9999978],[.99994188,.01077561,-34377e-8,-.01077631,.99993974,-.00209444,32118e-8,.00209803,.99999775],[.99994076,.01087543,-44832e-8,-.01087635,.99993863,-.00210643,42538e-8,.00211118,.99999768],[.99993961,.01097541,-55445e-8,-.01097656,.99993751,-.00211851,53117e-8,.00212447,.9999976],[.99993845,.01107553,-66219e-8,-.01107691,.99993638,-.00213069,63855e-8,.00213789,.99999751],[.99993725,.01117579,-77153e-8,-.01117742,.99993523,-.00214297,74753e-8,.00215146,.99999741],[.99993603,.01127617,-88247e-8,-.01127805,.99993408,-.00215535,85811e-8,.00216516,.99999729],[.99993479,.01137668,-99503e-8,-.01137882,.99993291,-.00216783,9703e-7,.00217901,.99999716],[.99993352,.0114773,-.0011092,-.0114797,.99993173,-.00218042,.0010841,.00219301,.99999701],[.99993222,.01157802,-.001225,-.01158069,.99993054,-.00219312,.00119953,.00220716,.99999684],[.9999309,.01167884,-.00134243,-.01168178,.99992933,-.00220593,.00131658,.00222146,.99999667],[.99992955,.01177974,-.00146149,-.01178297,.99992812,-.00221885,.00143525,.00223592,.99999647],[.99992817,.01188072,-.00158219,-.01188423,.99992689,-.00223189,.00155556,.00225053,.99999626],[.99992676,.01198176,-.00170453,-.01198557,.99992565,-.00224505,.00167751,.00226531,.99999603],[.99992533,.01208286,-.00182852,-.01208698,.9999244,-.00225832,.0018011,.00228025,.99999578],[.99992386,.012184,-.00195416,-.01218843,.99992314,-.00227172,.00192633,.00229536,.99999551],[.99992237,.01228519,-.00208146,-.01228994,.99992186,-.00228524,.00205322,.00231064,.99999522],[.99992084,.0123864,-.00221041,-.01239148,.99992058,-.00229889,.00218176,.0023261,.99999491],[.99991929,.01248763,-.00234103,-.01249304,.99991928,-.00231267,.00231196,.00234173,.99999459],[.9999177,.01258887,-.00247331,-.01259463,.99991798,-.00232658,.00244382,.00235754,.99999423],[.99991608,.01269011,-.00260726,-.01269622,.99991666,-.00234063,.00257734,.00237353,.99999386],[.99991443,.01279134,-.00274289,-.01279781,.99991533,-.00235481,.00271254,.00238971,.99999347],[.99991274,.01289256,-.0028802,-.0128994,.99991399,-.00236913,.00284941,.00240608,.99999305],[.99991102,.01299374,-.00301919,-.01300096,.99991264,-.00238359,.00298795,.00242263,.9999926],[.99990927,.01309488,-.00315986,-.01310249,.99991128,-.0023982,.00312817,.00243938,.99999213],[.99990748,.01319598,-.00330222,-.01320398,.99990991,-.00241295,.00327008,.00245633,.99999164],[.99990565,.01329702,-.00344627,-.01330542,.99990853,-.00242786,.00341367,.00247348,.99999111],[.99990379,.01339799,-.00359201,-.01340681,.99990714,-.00244291,.00355895,.00249083,.99999056],[.99990189,.01349888,-.00373945,-.01350812,.99990574,-.00245812,.00370592,.00250839,.99998999],[.99989996,.01359968,-.00388859,-.01360936,.99990433,-.00247349,.00385458,.00252616,.99998938],[.99989799,.01370039,-.00403943,-.01371051,.99990291,-.00248901,.00400493,.00254414,.99998874],[.99989597,.01380099,-.00419197,-.01381156,.99990148,-.0025047,.00415699,.00256234,.99998808],[.99989392,.01390147,-.00434622,-.01391251,.99990004,-.00252056,.00431074,.00258076,.99998738],[.99989183,.01400182,-.00450217,-.01401334,.99989859,-.00253658,.0044662,.00259939,.99998665],[.9998897,.01410203,-.00465984,-.01411404,.99989713,-.00255277,.00462336,.00261825,.99998588],[.99988753,.0142021,-.00481921,-.0142146,.99989567,-.00256913,.00478222,.00263734,.99998509],[.99988532,.01430201,-.0049803,-.01431501,.99989419,-.00258567,.00494279,.00265666,.99998426],[.99988306,.01440175,-.0051431,-.01441527,.99989271,-.00260238,.00510507,.00267622,.99998339],[.99988076,.01450131,-.00530763,-.01451536,.99989122,-.00261928,.00526906,.00269601,.99998248],[.99987842,.01460068,-.00547386,-.01461528,.99988972,-.00263636,.00543477,.00271604,.99998154],[.99987603,.01469985,-.00564182,-.01471501,.99988821,-.00265363,.00560218,.00273632,.99998056],[.9998736,.01479882,-.0058115,-.01481454,.99988669,-.00267108,.00577131,.00275684,.99997955],[.99987113,.01489756,-.00598289,-.01491386,.99988517,-.00268873,.00594215,.00277761,.99997849],[.9998686,.01499608,-.00615601,-.01501297,.99988364,-.00270657,.00611471,.00279863,.99997739],[.99986603,.01509435,-.00633085,-.01511184,.9998821,-.0027246,.00628898,.00281991,.99997625],[.99986341,.01519237,-.00650742,-.01521049,.99988055,-.00274284,.00646497,.00284145,.99997506],[.99986075,.01529014,-.0066857,-.01530888,.999879,-.00276128,.00664267,.00286324,.99997384],[.99985803,.01538763,-.00686571,-.01540702,.99987744,-.00277992,.0068221,.00288531,.99997257],[.99985527,.01548484,-.00704745,-.01550489,.99987587,-.00279878,.00700324,.00290764,.99997125],[.99985245,.01558176,-.00723091,-.01560248,.9998743,-.00281784,.00718609,.00293024,.99996989],[.99984958,.01567837,-.00741609,-.01569978,.99987273,-.00283711,.00737066,.00295312,.99996848],[.99984667,.01577468,-.00760299,-.01579678,.99987114,-.00285661,.00755695,.00297627,.99996702],[.99984369,.01587066,-.00779162,-.01589348,.99986955,-.00287632,.00774496,.00299971,.99996551],[.99984067,.0159663,-.00798197,-.01598986,.99986796,-.00289625,.00793468,.00302342,.99996395],[.99983759,.0160616,-.00817405,-.01608591,.99986636,-.00291641,.00812611,.00304743,.99996234],[.99983446,.01615655,-.00836784,-.01618162,.99986476,-.0029368,.00831926,.00307172,.99996068],[.99983127,.01625113,-.00856336,-.01627698,.99986315,-.00295742,.00851412,.0030963,.99995896],[.99982803,.01634534,-.00876059,-.01637199,.99986153,-.00297827,.0087107,.00312118,.99995719],[.99982472,.01643916,-.00895954,-.01646662,.99985992,-.00299935,.00890898,.00314636,.99995536],[.99982137,.01653259,-.00916021,-.01656087,.9998583,-.00302068,.00910898,.00317184,.99995348],[.99981795,.01662561,-.0093626,-.01665474,.99985667,-.00304225,.00931068,.00319762,.99995154],[.99981447,.01671821,-.0095667,-.01674821,.99985504,-.00306406,.00951409,.00322371,.99994954],[.99981094,.01681038,-.00977251,-.01684126,.99985341,-.00308612,.0097192,.00325012,.99994749],[.99980734,.01690212,-.00998004,-.0169339,.99985178,-.00310843,.00992602,.00327683,.99994537],[.99980368,.01699341,-.01018927,-.01702611,.99985014,-.00313099,.01013454,.00330386,.99994319],[.99979996,.01708424,-.01040021,-.01711787,.9998485,-.00315381,.01034475,.00333121,.99994094],[.99979618,.0171746,-.01061285,-.01720919,.99984686,-.0031769,.01055667,.00335889,.99993864],[.99979233,.01726448,-.0108272,-.01730005,.99984522,-.00320024,.01077028,.00338688,.99993626],[.99978842,.01735387,-.01104325,-.01739044,.99984358,-.00322385,.01098558,.00341521,.99993382],[.99978445,.01744276,-.011261,-.01748034,.99984193,-.00324772,.01120257,.00344387,.99993132],[.99978041,.01753114,-.01148044,-.01756976,.99984029,-.00327187,.01142125,.00347286,.99992874],[.9997763,.017619,-.01170157,-.01765868,.99983864,-.00329629,.01164161,.00350219,.9999261],[.99977212,.01770633,-.0119244,-.01774708,.99983699,-.00332099,.01186365,.00353186,.99992339],[.99976788,.01779311,-.01214891,-.01783497,.99983535,-.00334597,.01208737,.00356187,.9999206],[.99976356,.01787935,-.0123751,-.01792233,.9998337,-.00337123,.01231277,.00359222,.99991774],[.99975918,.01796502,-.01260298,-.01800915,.99983205,-.00339678,.01253984,.00362293,.99991481],[.99975473,.01805012,-.01283253,-.01809541,.99983041,-.00342261,.01276858,.00365398,.9999118],[.99975021,.01813463,-.01306376,-.01818112,.99982876,-.00344874,.01299898,.00368539,.99990872],[.99974561,.01821855,-.01329666,-.01826626,.99982712,-.00347516,.01323104,.00371716,.99990556],[.99974094,.01830187,-.01353122,-.01835082,.99982548,-.00350188,.01346477,.00374928,.99990232],[.9997362,.01838458,-.01376744,-.01843479,.99982384,-.0035289,.01370014,.00378177,.999899],[.99973138,.01846666,-.01400533,-.01851816,.9998222,-.00355623,.01393717,.00381462,.9998956],[.99972649,.01854811,-.01424487,-.01860092,.99982056,-.00358386,.01417584,.00384784,.99989211],[.99972152,.01862892,-.01448606,-.01868307,.99981893,-.0036118,.01441615,.00388144,.99988855],[.99971648,.01870907,-.01472889,-.01876459,.9998173,-.00364005,.0146581,.0039154,.9998849],[.99971135,.01878856,-.01497337,-.01884546,.99981568,-.00366862,.01490168,.00394974,.99988116],[.99970615,.01886737,-.01521949,-.0189257,.99981406,-.00369751,.0151469,.00398446,.99987734],[.99970087,.0189455,-.01546724,-.01900527,.99981244,-.00372672,.01539373,.00401956,.99987343],[.99969551,.01902294,-.01571661,-.01908418,.99981082,-.00375625,.01564218,.00405504,.99986943],[.99969007,.01909967,-.01596761,-.01916242,.99980922,-.00378611,.01589225,.00409092,.99986534],[.99968455,.01917568,-.01622023,-.01923997,.99980761,-.0038163,.01614393,.00412717,.99986116],[.99967894,.01925098,-.01647446,-.01931682,.99980601,-.00384683,.01639721,.00416383,.99985689],[.99967326,.01932554,-.0167303,-.01939297,.99980442,-.00387769,.01665209,.00420087,.99985252],[.99966749,.01939936,-.01698774,-.01946841,.99980283,-.00390889,.01690856,.00423831,.99984806],[.99966163,.01947242,-.01724678,-.01954312,.99980125,-.00394043,.01716663,.00427616,.9998435],[.99965569,.01954472,-.01750742,-.01961711,.99979967,-.00397232,.01742627,.0043144,.99983884],[.99964966,.01961625,-.01776964,-.01969035,.99979811,-.00400456,.01768749,.00435305,.99983409],[.99964355,.019687,-.01803344,-.01976284,.99979655,-.00403715,.01795029,.0043921,.99982923],[.99963734,.01975696,-.01829881,-.01983458,.99979499,-.00407009,.01821465,.00443156,.99982428],[.99963105,.01982611,-.01856575,-.01990554,.99979344,-.00410339,.01848056,.00447144,.99981922],[.99962467,.01989445,-.01883426,-.01997573,.99979191,-.00413705,.01874804,.00451173,.99981406],[.9996182,.01996198,-.01910432,-.02004513,.99979038,-.00417107,.01901706,.00455243,.9998088],[.99961164,.02002867,-.01937594,-.02011374,.99978885,-.00420546,.01928762,.00459355,.99980342],[.99960498,.02009452,-.0196491,-.02018154,.99978734,-.00424022,.01955972,.0046351,.99979795],[.99959824,.02015953,-.0199238,-.02024853,.99978584,-.00427535,.01983334,.00467706,.99979236],[.9995914,.02022368,-.02020003,-.0203147,.99978434,-.00431086,.02010849,.00471946,.99978666],[.99958446,.02028696,-.02047778,-.02038003,.99978286,-.00434675,.02038515,.00476228,.99978086],[.99957743,.02034936,-.02075705,-.02044453,.99978138,-.00438301,.02066333,.00480553,.99977494],[.99957031,.02041088,-.02103784,-.02050818,.99977992,-.00441966,.020943,.00484921,.99976891],[.99956309,.0204715,-.02132013,-.02057097,.99977846,-.0044567,.02122417,.00489333,.99976277],[.99955577,.02053123,-.02160392,-.0206329,.99977702,-.00449413,.02150683,.00493788,.99975651],[.99954835,.02059003,-.0218892,-.02069396,.99977559,-.00453195,.02179097,.00498287,.99975013],[.99954084,.02064792,-.02217596,-.02075413,.99977416,-.00457016,.02207659,.00502831,.99974364],[.99953323,.02070487,-.0224642,-.02081342,.99977275,-.00460878,.02236367,.00507418,.99973702],[.99952551,.02076089,-.0227539,-.0208718,.99977136,-.00464779,.02265221,.0051205,.99973029],[.99951769,.02081596,-.02304507,-.02092928,.99976997,-.00468722,.0229422,.00516727,.99972344],[.99950978,.02087007,-.0233377,-.02098584,.9997686,-.00472704,.02323364,.00521449,.99971646],[.99950176,.02092321,-.02363177,-.02104149,.99976724,-.00476728,.02352652,.00526216,.99970936],[.99949363,.02097538,-.02392728,-.02109619,.99976589,-.00480794,.02382083,.00531028,.99970214],[.9994854,.02102657,-.02422422,-.02114997,.99976456,-.00484901,.02411656,.00535885,.99969479],[.99947707,.02107676,-.02452259,-.02120279,.99976323,-.00489049,.0244137,.00540788,.99968731],[.99946863,.02112596,-.02482237,-.02125466,.99976193,-.0049324,.02471226,.00545737,.99967971],[.99946009,.02117414,-.02512356,-.02130556,.99976063,-.00497474,.02501221,.00550733,.99967198],[.99945143,.02122131,-.02542614,-.0213555,.99975935,-.0050175,.02531355,.00555774,.99966411],[.99944267,.02126746,-.02573012,-.02140445,.99975809,-.0050607,.02561627,.00560862,.99965612],[.9994338,.02131257,-.02603549,-.02145242,.99975684,-.00510433,.02592037,.00565996,.99964799],[.99942483,.02135663,-.02634222,-.0214994,.99975561,-.00514839,.02622583,.00571177,.99963973],[.99941574,.02139965,-.02665033,-.02154538,.99975439,-.0051929,.02653266,.00576405,.99963133],[.99940654,.02144161,-.02695979,-.02159034,.99975318,-.00523784,.02684083,.00581681,.9996228],[.99939723,.0214825,-.02727061,-.02163429,.99975199,-.00528323,.02715034,.00587003,.99961413],[.9993878,.02152232,-.02758276,-.02167722,.99975082,-.00532907,.02746119,.00592373,.99960532],[.99937827,.02156106,-.02789625,-.02171912,.99974966,-.00537537,.02777336,.00597791,.99959637],[.99936862,.02159871,-.02821106,-.02175998,.99974852,-.00542211,.02808685,.00603256,.99958728],[.99935885,.02163525,-.02852718,-.02179979,.9997474,-.00546931,.02840165,.00608769,.99957805],[.99934897,.0216707,-.02884461,-.02183855,.99974629,-.00551697,.02871774,.0061433,.99956868],[.99933898,.02170503,-.02916334,-.02187625,.9997452,-.00556509,.02903512,.0061994,.99955917],[.99932887,.02173824,-.02948336,-.02191289,.99974412,-.00561368,.02935379,.00625598,.99954951],[.99931864,.02177032,-.02980466,-.02194845,.99974307,-.00566274,.02967372,.00631304,.9995397],[.99930829,.02180126,-.03012723,-.02198294,.99974203,-.00571226,.02999492,.00637059,.99952975],[.99929782,.02183106,-.03045105,-.02201633,.99974101,-.00576226,.03031737,.00642863,.99951965],[.99928724,.02185971,-.03077614,-.02204863,.99974,-.00581273,.03064107,.00648716,.9995094],[.99927653,.0218872,-.03110246,-.02207984,.99973901,-.00586369,.030966,.00654618,.999499],[.99926571,.02191353,-.03143001,-.02210993,.99973805,-.00591512,.03129216,.00660569,.99948845],[.99925476,.02193868,-.0317588,-.02213892,.9997371,-.00596704,.03161954,.0066657,.99947775],[.99924369,.02196265,-.03208879,-.02216678,.99973617,-.00601945,.03194812,.0067262,.9994669],[.9992325,.02198544,-.03241999,-.02219352,.99973525,-.00607234,.0322779,.0067872,.99945589],[.99922118,.02200703,-.03275238,-.02221912,.99973436,-.00612573,.03260888,.00684869,.99944472],[.99920974,.02202742,-.03308597,-.02224359,.99973348,-.00617962,.03294103,.00691068,.99943341],[.99919818,.02204661,-.03342072,-.02226691,.99973263,-.006234,.03327435,.00697318,.99942193],[.99918649,.02206457,-.03375665,-.02228908,.99973179,-.00628888,.03360883,.00703617,.9994103],[.99917468,.02208132,-.03409373,-.02231009,.99973097,-.00634426,.03394447,.00709966,.9993985],[.99916273,.02209684,-.03443195,-.02232995,.99973017,-.00640016,.03428124,.00716366,.99938655],[.99915067,.02211113,-.03477132,-.02234863,.99972939,-.00645655,.03461915,.00722816,.99937444],[.99913847,.02212417,-.03511181,-.02236614,.99972863,-.00651347,.03495818,.00729317,.99936216],[.99912615,.02213597,-.03545342,-.02238246,.99972789,-.00657089,.03529832,.00735868,.99934973],[.99911369,.02214651,-.03579614,-.02239761,.99972717,-.00662883,.03563956,.0074247,.99933713],[.99910111,.02215579,-.03613995,-.02241156,.99972646,-.00668729,.0359819,.00749123,.99932436],[.9990884,.02216381,-.03648485,-.02242431,.99972578,-.00674627,.03632532,.00755827,.99931143],[.99907555,.02217055,-.03683083,-.02243586,.99972512,-.00680578,.03666982,.00762581,.99929834],[.99906258,.02217601,-.03717787,-.0224462,.99972448,-.00686581,.03701537,.00769387,.99928508],[.99904947,.02218019,-.03752597,-.02245533,.99972385,-.00692637,.03736198,.00776244,.99927165],[.99903623,.02218308,-.03787512,-.02246324,.99972325,-.00698746,.03770964,.00783152,.99925805],[.99902286,.02218467,-.03822531,-.02246993,.99972267,-.00704909,.03805832,.00790112,.99924428],[.99900935,.02218496,-.03857652,-.02247538,.9997221,-.00711125,.03840803,.00797123,.99923035],[.99899571,.02218394,-.03892874,-.02247961,.99972156,-.00717396,.03875876,.00804185,.99921624],[.99898193,.0221816,-.03928197,-.02248259,.99972104,-.0072372,.03911048,.00811299,.99920196],[.99896802,.02217794,-.0396362,-.02248433,.99972054,-.00730099,.0394632,.00818465,.9991875],[.99895398,.02217296,-.03999141,-.02248482,.99972005,-.00736533,.0398169,.00825682,.99917288],[.99893979,.02216665,-.04034759,-.02248406,.99971959,-.00743021,.04017158,.00832951,.99915808],[.99892547,.02215899,-.04070474,-.02248204,.99971915,-.00749565,.04052722,.00840272,.9991431],[.99891102,.02215,-.04106284,-.02247875,.99971872,-.00756164,.0408838,.00847645,.99912795],[.99889642,.02213966,-.04142189,-.0224742,.99971832,-.00762819,.04124134,.0085507,.99911263],[.99888169,.02212796,-.04178186,-.02246837,.99971794,-.0076953,.0415998,.00862546,.99909712],[.99886682,.02211491,-.04214276,-.02246127,.99971757,-.00776297,.04195918,.00870075,.99908144],[.99885181,.02210049,-.04250457,-.02245289,.99971723,-.0078312,.04231948,.00877656,.99906558],[.99883665,.02208471,-.04286728,-.02244322,.99971691,-.0079,.04268067,.00885289,.99904954],[.99882136,.02206755,-.04323088,-.02243226,.9997166,-.00796937,.04304276,.00892974,.99903332],[.99880593,.02204901,-.04359535,-.02242001,.99971632,-.00803931,.04340573,.00900711,.99901692],[.99879036,.02202909,-.0439607,-.02240646,.99971605,-.00810982,.04376956,.00908501,.99900034],[.99877464,.02200778,-.0443269,-.0223916,.9997158,-.00818091,.04413426,.00916343,.99898358],[.99875878,.02198508,-.04469395,-.02237544,.99971558,-.00825257,.0444998,.00924237,.99896664],[.99874278,.02196098,-.04506183,-.02235797,.99971537,-.00832482,.04486618,.00932184,.99894951],[.99872664,.02193548,-.04543054,-.02233919,.99971518,-.00839764,.0452334,.00940183,.9989322],[.99871035,.02190857,-.04580006,-.02231909,.99971501,-.00847106,.04560142,.00948235,.99891471],[.99869392,.02188025,-.04617039,-.02229766,.99971486,-.00854506,.04597026,.00956339,.99889703],[.99867735,.02185051,-.04654151,-.02227491,.99971472,-.00861965,.04633989,.00964495,.99887917],[.99866063,.02181935,-.04691341,-.02225083,.99971461,-.00869483,.04671031,.00972704,.99886112],[.99864376,.02178677,-.04728609,-.02222542,.99971451,-.0087706,.0470815,.00980966,.99884288],[.99862675,.02175276,-.04765952,-.02219868,.99971443,-.00884697,.04745346,.0098928,.99882446],[.99860959,.02171732,-.0480337,-.02217059,.99971437,-.00892394,.04782618,.00997647,.99880585],[.99859229,.02168044,-.04840862,-.02214116,.99971433,-.00900151,.04819964,.01006066,.99878705],[.99857484,.02164211,-.04878427,-.02211039,.9997143,-.00907968,.04857383,.01014538,.99876807],[.99855724,.02160235,-.04916063,-.02207826,.9997143,-.00915845,.04894875,.01023062,.99874889],[.9985395,.02156113,-.0495377,-.02204479,.9997143,-.00923783,.04932437,.01031639,.99872953],[.99852161,.02151846,-.04991547,-.02200995,.99971433,-.00931782,.04970071,.01040269,.99870998],[.99850357,.02147433,-.05029392,-.02197376,.99971437,-.00939843,.05007773,.01048951,.99869024],[.99848538,.02142874,-.05067304,-.02193621,.99971443,-.00947964,.05045543,.01057686,.99867031],[.99846704,.02138169,-.05105282,-.02189729,.9997145,-.00956147,.05083381,.01066473,.99865018],[.99844855,.02133317,-.05143326,-.02185701,.99971459,-.00964392,.05121284,.01075313,.99862987],[.99842992,.02128318,-.05181433,-.02181536,.9997147,-.00972698,.05159253,.01084206,.99860936],[.99841113,.02123171,-.05219604,-.02177233,.99971482,-.00981067,.05197285,.01093151,.99858867],[.9983922,.02117877,-.05257836,-.02172793,.99971495,-.00989498,.05235381,.01102149,.99856778],[.99837311,.02112434,-.05296129,-.02168215,.9997151,-.00997991,.05273538,.01111199,.9985467],[.99835387,.02106843,-.05334481,-.02163498,.99971527,-.01006547,.05311756,.01120302,.99852542],[.99833448,.02101103,-.05372892,-.02158644,.99971544,-.01015166,.05350034,.01129457,.99850395],[.99831494,.02095214,-.05411361,-.02153651,.99971564,-.01023848,.0538837,.01138665,.99848229],[.99829525,.02089175,-.05449886,-.02148519,.99971584,-.01032594,.05426765,.01147925,.99846044],[.99827541,.02082987,-.05488466,-.02143248,.99971606,-.01041403,.05465215,.01157238,.99843839],[.99825541,.02076648,-.055271,-.02137838,.99971629,-.01050275,.05503722,.01166603,.99841615],[.99823527,.02070159,-.05565788,-.02132289,.99971653,-.01059212,.05542283,.01176021,.99839371],[.99821496,.0206352,-.05604527,-.021266,.99971678,-.01068212,.05580897,.01185491,.99837108],[.99819451,.02056729,-.05643317,-.02120771,.99971705,-.01077277,.05619564,.01195013,.99834826],[.99817391,.02049788,-.05682157,-.02114801,.99971733,-.01086406,.05658282,.01204588,.99832524],[.99815315,.02042695,-.05721046,-.02108692,.99971761,-.01095599,.05697051,.01214215,.99830202],[.99813223,.0203545,-.05759982,-.02102442,.99971791,-.01104858,.05735869,.01223894,.99827861],[.99811117,.02028053,-.05798965,-.02096051,.99971822,-.01114181,.05774735,.01233626,.99825501],[.99808995,.02020504,-.05837993,-.0208952,.99971854,-.0112357,.05813648,.01243409,.99823121],[.99806857,.02012802,-.05877066,-.02082847,.99971886,-.01133023,.05852608,.01253245,.99820721],[.99804704,.02004947,-.05916182,-.02076034,.99971919,-.01142543,.05891613,.01263133,.99818302],[.99802536,.0199694,-.0595534,-.02069079,.99971954,-.01152127,.05930662,.01273073,.99815863],[.99800352,.01988779,-.05994539,-.02061982,.99971989,-.01161778,.05969754,.01283065,.99813405],[.99798153,.01980465,-.06033778,-.02054744,.99972024,-.01171495,.06008889,.01293109,.99810927],[.99795938,.01971997,-.06073056,-.02047364,.99972061,-.01181278,.06048064,.01303205,.99808429],[.99793708,.01963376,-.06112371,-.02039842,.99972097,-.01191127,.0608728,.01313352,.99805912],[.99791462,.019546,-.06151724,-.02032178,.99972135,-.01201042,.06126534,.01323552,.99803376],[.997892,.0194567,-.06191112,-.02024372,.99972173,-.01211025,.06165827,.01333803,.99800819],[.99786923,.01936586,-.06230535,-.02016423,.99972211,-.01221074,.06205156,.01344106,.99798244],[.99784631,.01927347,-.06269991,-.02008333,.9997225,-.0123119,.06244522,.0135446,.99795648],[.99782323,.01917953,-.0630948,-.02000099,.99972289,-.01241373,.06283923,.01364866,.99793033],[.99779999,.01908404,-.06349,-.01991723,.99972329,-.01251623,.06323357,.01375324,.99790399],[.9977766,.01898699,-.0638855,-.01983204,.99972368,-.01261941,.06362825,.01385833,.99787744],[.99775305,.0188884,-.0642813,-.01974542,.99972408,-.01272326,.06402324,.01396393,.99785071],[.99772934,.01878824,-.06467738,-.01965737,.99972448,-.01282779,.06441854,.01407005,.99782377],[.99770548,.01868654,-.06507372,-.01956789,.99972488,-.012933,.06481415,.01417668,.99779665],[.99768146,.01858327,-.06547033,-.01947698,.99972528,-.01303889,.06521004,.01428382,.99776932],[.99765729,.01847844,-.06586719,-.01938464,.99972568,-.01314546,.06560621,.01439148,.99774181],[.99763295,.01837205,-.06626429,-.01929086,.99972608,-.01325271,.06600266,.01449964,.99771409],[.99760847,.0182641,-.06666161,-.01919565,.99972647,-.01336065,.06639936,.01460831,.99768618],[.99758382,.01815458,-.06705916,-.01909901,.99972687,-.01346928,.06679631,.0147175,.99765808],[.99755902,.0180435,-.06745691,-.01900093,.99972726,-.01357859,.0671935,.01482719,.99762978],[.99753406,.01793085,-.06785485,-.01890142,.99972764,-.01368859,.06759092,.01493739,.99760129],[.99750895,.01781664,-.06825298,-.01880046,.99972802,-.01379928,.06798856,.01504809,.99757261],[.99748367,.01770085,-.06865129,-.01869808,.9997284,-.01391066,.06838642,.0151593,.99754373],[.99745825,.01758349,-.06904977,-.01859425,.99972877,-.01402273,.06878447,.01527102,.99751466],[.99743266,.01746457,-.06944839,-.01848899,.99972914,-.0141355,.06918271,.01538324,.99748539],[.99740692,.01734407,-.06984717,-.01838229,.99972949,-.01424896,.06958114,.01549596,.99745593],[.99738102,.017222,-.07024607,-.01827416,.99972984,-.01436312,.06997973,.01560919,.99742628],[.99735496,.01709835,-.0706451,-.01816458,.99973018,-.01447798,.07037849,.01572292,.99739644],[.99732875,.01697313,-.07104424,-.01805357,.99973051,-.01459353,.0707774,.01583715,.9973664],[.99730238,.01684633,-.07144349,-.01794112,.99973083,-.01470979,.07117645,.01595188,.99733618],[.99727585,.01671796,-.07184283,-.01782723,.99973114,-.01482674,.07157564,.01606711,.99730576],[.99724916,.01658801,-.07224225,-.0177119,.99973144,-.0149444,.07197495,.01618284,.99727515],[.99722232,.01645649,-.07264174,-.01759513,.99973173,-.01506277,.07237437,.01629907,.99724435],[.99719533,.01632338,-.07304129,-.01747692,.999732,-.01518183,.0727739,.01641579,.99721336],[.99716817,.0161887,-.07344089,-.01735728,.99973226,-.01530161,.07317352,.01653301,.99718218],[.99714086,.01605243,-.07384054,-.0172362,.9997325,-.01542208,.07357322,.01665072,.99715081],[.99711339,.01591459,-.07424021,-.01711367,.99973273,-.01554327,.07397301,.01676893,.99711925],[.99708577,.01577517,-.07463991,-.01698971,.99973294,-.01566517,.07437286,.01688763,.9970875],[.99705799,.01563416,-.07503962,-.01686432,.99973313,-.01578778,.07477276,.01700682,.99705557],[.99703005,.01549158,-.07543933,-.01673748,.99973331,-.01591109,.07517272,.0171265,.99702344],[.99700196,.01534742,-.07583903,-.01660921,.99973347,-.01603512,.07557271,.01724668,.99699113],[.99697371,.01520167,-.0762387,-.0164795,.99973361,-.01615987,.07597274,.01736734,.99695863],[.9969453,.01505434,-.07663835,-.01634835,.99973372,-.01628532,.07637278,.01748849,.99692595],[.99691674,.01490543,-.07703796,-.01621577,.99973382,-.0164115,.07677284,.01761013,.99689308],[.99688802,.01475494,-.07743752,-.01608175,.99973389,-.01653838,.07717289,.01773225,.99686003],[.99685914,.01460287,-.07783702,-.0159463,.99973394,-.01666599,.07757294,.01785486,.99682679],[.99683011,.01444921,-.07823646,-.01580941,.99973397,-.01679431,.07797298,.01797795,.99679336],[.99680093,.01429398,-.07863581,-.01567109,.99973397,-.01692335,.07837299,.01810152,.99675976],[.99677159,.01413716,-.07903507,-.01553133,.99973395,-.01705312,.07877296,.01822558,.99672596],[.99674209,.01397876,-.07943424,-.01539014,.9997339,-.0171836,.07917289,.01835012,.99669199],[.99671244,.01381878,-.07983329,-.01524752,.99973382,-.0173148,.07957277,.01847514,.99665784],[.99668263,.01365721,-.08023223,-.01510347,.99973371,-.01744672,.07997259,.01860063,.9966235],[.99665267,.01349407,-.08063104,-.01495799,.99973358,-.01757937,.08037234,.01872661,.99658898],[.99662255,.01332935,-.08102971,-.01481107,.99973341,-.01771274,.08077201,.01885306,.99655429],[.99659228,.01316304,-.08142823,-.01466273,.99973321,-.01784684,.08117159,.01897998,.99651941],[.99656186,.01299516,-.0818266,-.01451296,.99973298,-.01798166,.08157108,.01910738,.99648435],[.99653128,.01282569,-.0822248,-.01436176,.99973272,-.01811721,.08197046,.01923526,.99644912],[.99650054,.01265465,-.08262282,-.01420914,.99973242,-.01825348,.08236972,.0193636,.99641371],[.99646965,.01248203,-.08302066,-.01405509,.99973209,-.01839048,.08276887,.01949242,.99637812],[.99643861,.01230783,-.0834183,-.01389962,.99973172,-.01852821,.08316788,.01962171,.99634236],[.99640741,.01213205,-.08381574,-.01374272,.99973131,-.01866667,.08356675,.01975146,.99630642],[.99637606,.01195469,-.08421296,-.0135844,.99973087,-.01880585,.08396548,.01988168,.9962703],[.99634456,.01177576,-.08460996,-.01342466,.99973038,-.01894577,.08436405,.02001237,.99623402],[.99631291,.01159526,-.08500672,-.0132635,.99972986,-.01908642,.08476245,.02014353,.99619755],[.9962811,.01141317,-.08540325,-.01310092,.99972929,-.01922779,.08516068,.02027515,.99616092],[.99624914,.01122952,-.08579952,-.01293692,.99972868,-.0193699,.08555872,.02040723,.99612411],[.99621702,.01104429,-.08619553,-.01277151,.99972803,-.01951274,.08595658,.02053978,.99608714],[.99618476,.01085749,-.08659127,-.01260468,.99972734,-.01965632,.08635424,.02067278,.99604999],[.99615234,.01066911,-.08698673,-.01243644,.9997266,-.01980063,.08675169,.02080625,.99601267],[.99611977,.01047917,-.0873819,-.01226678,.99972581,-.01994567,.08714892,.02094017,.99597519],[.99608705,.01028765,-.08777677,-.01209572,.99972498,-.02009144,.08754594,.02107455,.99593753],[.99605417,.01009457,-.08817134,-.01192324,.99972409,-.02023795,.08794272,.02120938,.99589971],[.99602115,.00989992,-.08856559,-.01174935,.99972316,-.0203852,.08833926,.02134468,.99586173],[.99598797,.0097037,-.08895951,-.01157406,.99972218,-.02053318,.08873555,.02148042,.99582358],[.99595465,.00950591,-.0893531,-.01139736,.99972114,-.02068189,.08913158,.02161662,.99578526],[.99592117,.00930657,-.08974635,-.01121926,.99972005,-.02083135,.08952735,.02175327,.99574678],[.99588755,.00910565,-.09013924,-.01103975,.99971891,-.02098153,.08992285,.02189036,.99570814],[.99585377,.00890318,-.09053177,-.01085885,.99971771,-.02113246,.09031807,.02202791,.99566933],[.99581984,.00869914,-.09092393,-.01067654,.99971646,-.02128412,.090713,.02216591,.99563037],[.99578577,.00849355,-.09131572,-.01049284,.99971515,-.02143652,.09110763,.02230435,.99559124],[.99575155,.00828639,-.09170711,-.01030774,.99971378,-.02158966,.09150196,.02244323,.99555195],[.99571717,.00807768,-.09209811,-.01012124,.99971235,-.02174354,.09189598,.02258256,.99551251],[.99568265,.00786741,-.09248871,-.00993335,.99971086,-.02189816,.09228968,.02272234,.99547291],[.99564798,.00765559,-.09287889,-.00974407,.99970931,-.02205351,.09268305,.02286255,.99543315],[.99561316,.00744221,-.09326864,-.0095534,.99970769,-.0222096,.09307609,.02300321,.99539324],[.9955782,.00722728,-.09365797,-.00936135,.99970601,-.02236644,.09346878,.0231443,.99535317],[.99554309,.0070108,-.09404685,-.0091679,.99970427,-.02252401,.09386113,.02328583,.99531295],[.99550783,.00679278,-.09443529,-.00897308,.99970245,-.02268232,.09425311,.0234278,.99527257],[.99547242,.0065732,-.09482327,-.00877687,.99970057,-.02284137,.09464473,.0235702,.99523204],[.99543687,.00635208,-.09521078,-.00857928,.99969863,-.02300116,.09503598,.02371304,.99519137],[.99540117,.00612942,-.09559782,-.00838031,.99969661,-.02316169,.09542685,.02385631,.99515054],[.99536532,.00590521,-.09598437,-.00817996,.99969452,-.02332296,.09581733,.02400001,.99510956],[.99532933,.00567947,-.09637044,-.00797824,.99969235,-.02348497,.09620741,.02414414,.99506844],[.9952932,.00545218,-.09675601,-.00777515,.99969012,-.02364772,.09659709,.02428871,.99502717],[.99525692,.00522336,-.09714106,-.00757068,.99968781,-.02381121,.09698636,.02443369,.99498575],[.99522049,.004993,-.0975256,-.00736485,.99968542,-.02397544,.09737521,.02457911,.99494419],[.99518392,.00476111,-.09790962,-.00715765,.99968295,-.02414041,.09776364,.02472495,.99490248],[.99514721,.00452768,-.0982931,-.00694908,.99968041,-.02430612,.09815164,.02487122,.99486063],[.99511035,.00429273,-.09867605,-.00673915,.99967779,-.02447257,.0985392,.0250179,.99481864],[.99507335,.00405625,-.09905844,-.00652787,.99967508,-.02463976,.09892631,.02516501,.99477651],[.99503621,.00381824,-.09944028,-.00631522,.99967229,-.02480769,.09931297,.02531254,.99473424],[.99499892,.0035787,-.09982155,-.00610121,.99966942,-.02497637,.09969917,.02546049,.99469183],[.99496149,.00333765,-.10020225,-.00588585,.99966647,-.02514578,.1000849,.02560886,.99464928],[.99492392,.00309507,-.10058237,-.00566914,.99966343,-.02531593,.10047016,.02575764,.9946066],[.99488621,.00285098,-.10096189,-.00545108,.9996603,-.02548682,.10085493,.02590684,.99456378],[.99484836,.00260537,-.10134082,-.00523167,.99965708,-.02565845,.10123922,.02605645,.99452083],[.99481036,.00235824,-.10171915,-.00501092,.99965377,-.02583082,.10162301,.02620647,.99447774],[.99477223,.00210961,-.10209686,-.00478882,.99965037,-.02600393,.10200631,.02635691,.99443453],[.99473395,.00185946,-.10247395,-.00456538,.99964688,-.02617777,.10238909,.02650775,.99439118],[.99469554,.00160781,-.10285041,-.00434061,.99964329,-.02635236,.10277136,.02665901,.9943477],[.99465698,.00135465,-.10322624,-.00411449,.99963961,-.02652768,.1031531,.02681067,.99430409],[.99461829,.00109998,-.10360142,-.00388705,.99963583,-.02670375,.10353432,.02696274,.99426036],[.99457945,84382e-8,-.10397595,-.00365827,.99963196,-.02688055,.103915,.02711521,.99421649],[.99454048,58616e-8,-.10434982,-.00342816,.99962798,-.02705808,.10429514,.02726809,.99417251],[.99450137,327e-6,-.10472302,-.00319672,.99962391,-.02723636,.10467473,.02742137,.9941284],[.99446213,6634e-8,-.10509555,-.00296396,.99961973,-.02741537,.10505376,.02757505,.99408416],[.99442274,-1958e-7,-.10546739,-.00272988,.99961545,-.02759512,.10543224,.02772913,.99403981],[.99438322,-45944e-8,-.10583855,-.00249448,.99961107,-.0277756,.10581014,.02788361,.99399533],[.99434356,-72456e-8,-.106209,-.00225776,.99960658,-.02795683,.10618748,.02803848,.99395073],[.99430377,-99117e-8,-.10657876,-.00201973,.99960199,-.02813878,.10656423,.02819376,.99390602],[.99426384,-.00125926,-.1069478,-.00178038,.99959728,-.02832147,.10694039,.02834942,.99386119],[.99422377,-.00152882,-.10731612,-.00153973,.99959247,-.0285049,.10731596,.02850549,.99381624],[.99418357,-.00179987,-.10768371,-.00129776,.99958754,-.02868906,.10769093,.02866194,.99377118],[.99414324,-.00207239,-.10805057,-.0010545,.9995825,-.02887395,.1080653,.02881879,.993726],[.99410277,-.00234638,-.10841669,-80993e-8,.99957735,-.02905958,.10843905,.02897602,.99368071],[.99406217,-.00262184,-.10878206,-56406e-8,.99957209,-.02924594,.10881219,.02913364,.99363531],[.99402143,-.00289877,-.10914667,-3169e-7,.9995667,-.02943303,.1091847,.02929165,.99358981],[.99398056,-.00317717,-.10951052,-6844e-8,.9995612,-.02962086,.10955658,.02945005,.99354419],[.99393956,-.00345702,-.1098736,18131e-8,.99955558,-.02980941,.10992782,.02960883,.99349846],[.99389842,-.00373833,-.1102359,43235e-8,.99954984,-.0299987,.11029843,.029768,.99345263],[.99385715,-.0040211,-.11059742,68468e-8,.99954398,-.03018871,.11066838,.02992754,.99340669],[.99381575,-.00430532,-.11095815,93829e-8,.999538,-.03037946,.11103768,.03008747,.99336065],[.99377422,-.004591,-.11131808,.00119318,.99953189,-.03057093,.11140632,.03024778,.9933145],[.99373256,-.00487812,-.1116772,.00144935,.99952565,-.03076313,.11177429,.03040847,.99326826],[.99369077,-.00516668,-.11203551,.00170679,.99951929,-.03095606,.1121416,.03056953,.99322191],[.99364885,-.00545669,-.11239301,.00196551,.9995128,-.03114972,.11250822,.03073097,.99317547],[.9936068,-.00574814,-.11274967,.00222549,.99950618,-.0313441,.11287416,.03089279,.99312892],[.99356462,-.00604102,-.11310551,.00248674,.99949942,-.0315392,.11323942,.03105497,.99308228],[.99352231,-.00633534,-.1134605,.00274926,.99949254,-.03173504,.11360398,.03121753,.99303555],[.99347987,-.00663109,-.11381465,.00301304,.99948552,-.03193159,.11396784,.03138047,.99298872],[.9934373,-.00692826,-.11416795,.00327808,.99947836,-.03212887,.11433099,.03154377,.9929418],[.99339461,-.00722686,-.11452039,.00354437,.99947107,-.03232687,.11469343,.03170744,.99289479],[.99335179,-.00752689,-.11487196,.00381191,.99946363,-.03252559,.11505516,.03187147,.99284768],[.99330884,-.00782833,-.11522266,.00408071,.99945606,-.03272504,.11541616,.03203588,.99280049],[.99326577,-.00813118,-.11557248,.00435075,.99944835,-.0329252,.11577644,.03220065,.99275321],[.99322257,-.00843545,-.11592141,.00462204,.99944049,-.03312608,.11613598,.03236578,.99270584],[.99317924,-.00874113,-.11626945,.00489456,.99943249,-.03332768,.11649479,.03253127,.99265839],[.99313579,-.00904822,-.1166166,.00516833,.99942435,-.03353,.11685285,.03269713,.99261085],[.99309221,-.00935671,-.11696284,.00544333,.99941606,-.03373303,.11721017,.03286334,.99256324],[.99304851,-.00966659,-.11730817,.00571957,.99940762,-.03393678,.11756673,.03302992,.99251554],[.99300469,-.00997788,-.11765258,.00599703,.99939902,-.03414125,.11792253,.03319685,.99246776],[.99296074,-.01029056,-.11799607,.00627572,.99939028,-.03434642,.11827757,.03336414,.9924199],[.99291667,-.01060463,-.11833863,.00655563,.99938139,-.03455231,.11863184,.03353178,.99237196],[.99287247,-.01092009,-.11868025,.00683677,.99937234,-.03475892,.11898533,.03369978,.99232395],[.99282816,-.01123693,-.11902093,.00711912,.99936314,-.03496623,.11933804,.03386813,.99227586],[.99278372,-.01155515,-.11936066,.00740268,.99935378,-.03517425,.11968997,.03403683,.9922277],[.99273916,-.01187475,-.11969944,.00768746,.99934426,-.03538298,.12004112,.03420589,.99217946],[.99269447,-.01219572,-.12003726,.00797344,.99933458,-.03559242,.12039146,.03437529,.99213116],[.99264967,-.01251807,-.12037412,.00826063,.99932474,-.03580256,.12074101,.03454504,.99208278],[.99260475,-.01284178,-.12071,.00854902,.99931474,-.03601341,.12108976,.03471513,.99203434],[.9925597,-.01316686,-.1210449,.00883862,.99930457,-.03622497,.12143769,.03488558,.99198583],[.99251454,-.0134933,-.12137882,.0091294,.99929424,-.03643723,.12178481,.03505636,.99193725],[.99246926,-.01382109,-.12171175,.00942138,.99928374,-.03665019,.12213112,.03522749,.99188861],[.99242386,-.01415024,-.12204368,.00971455,.99927308,-.03686385,.1224766,.03539896,.9918399],[.99237834,-.01448074,-.12237462,.01000891,.99926224,-.03707821,.12282125,.03557078,.99179114],[.9923327,-.01481258,-.12270454,.01030445,.99925123,-.03729327,.12316508,.03574293,.99174231],[.99228694,-.01514577,-.12303346,.01060116,.99924006,-.03750903,.12350806,.03591542,.99169342],[.99224107,-.0154803,-.12336135,.01089906,.9992287,-.03772548,.12385021,.03608825,.99164447],[.99219508,-.01581617,-.12368822,.01119813,.99921717,-.03794263,.12419151,.03626141,.99159547],[.99214897,-.01615337,-.12401407,.01149837,.99920547,-.03816047,.12453195,.03643491,.99154641],[.99210275,-.01649189,-.12433888,.01179978,.99919358,-.038379,.12487155,.03660875,.9914973],[.99205641,-.01683175,-.12466264,.01210235,.99918152,-.03859823,.12521028,.03678291,.99144813],[.99200995,-.01717292,-.12498536,.01240608,.99916928,-.03881815,.12554816,.03695741,.99139892],[.99196338,-.01751542,-.12530704,.01271097,.99915685,-.03903875,.12588516,.03713224,.99134965],[.9919167,-.01785922,-.12562765,.01301701,.99914424,-.03926004,.1262213,.0373074,.99130033],[.9918699,-.01820434,-.1259472,.01332421,.99913144,-.03948202,.12655655,.03748288,.99125096],[.99182299,-.01855077,-.12626569,.01363255,.99911846,-.03970468,.12689093,.03765869,.99120155],[.99177597,-.0188985,-.1265831,.01394204,.99910529,-.03992803,.12722443,.03783483,.99115209],[.99172883,-.01924753,-.12689944,.01425267,.99909192,-.04015206,.12755703,.0380113,.99110259],[.99168158,-.01959786,-.12721469,.01456443,.99907837,-.04037677,.12788874,.03818809,.99105305],[.99163421,-.01994948,-.12752885,.01487733,.99906463,-.04060215,.12821956,.0383652,.99100346],[.99158674,-.02030239,-.12784193,.01519137,.99905069,-.04082822,.12854948,.03854263,.99095383],[.99153915,-.02065658,-.1281539,.01550652,.99903655,-.04105496,.12887849,.03872038,.99090417],[.99149145,-.02101206,-.12846477,.01582281,.99902222,-.04128238,.12920659,.03889845,.99085446],[.99144364,-.02136881,-.12877454,.01614021,.99900769,-.04151047,.12953378,.03907684,.99080472],[.99139572,-.02172683,-.12908319,.01645874,.99899297,-.04173923,.12986006,.03925555,.99075495],[.99134769,-.02208613,-.12939072,.01677837,.99897804,-.04196866,.13018541,.03943457,.99070514],[.99129955,-.02244669,-.12969713,.01709912,.9989629,-.04219876,.13050984,.03961391,.9906553],[.9912513,-.02280851,-.13000241,.01742097,.99894757,-.04242953,.13083335,.03979356,.99060542],[.99120294,-.02317159,-.13030656,.01774393,.99893203,-.04266097,.13115592,.03997353,.99055552],[.99115448,-.02353592,-.13060958,.01806799,.99891628,-.04289307,.13147756,.0401538,.99050559],[.9911059,-.02390151,-.13091145,.01839315,.99890032,-.04312583,.13179826,.04033439,.99045563],[.99105722,-.02426833,-.13121217,.0187194,.99888416,-.04335925,.13211802,.04051528,.99040564],[.99100843,-.02463641,-.13151175,.01904674,.99886778,-.04359333,.13243683,.04069649,.99035563],[.99095953,-.02500572,-.13181017,.01937516,.99885119,-.04382807,.1327547,.040878,.9903056],[.99091053,-.02537626,-.13210743,.01970467,.99883439,-.04406347,.13307161,.04105982,.99025554],[.99086142,-.02574803,-.13240352,.02003526,.99881737,-.04429952,.13338757,.04124194,.99020546],[.9908122,-.02612103,-.13269845,.02036693,.99880014,-.04453622,.13370256,.04142437,.99015536],[.99076288,-.02649525,-.1329922,.02069967,.99878268,-.04477358,.1340166,.0416071,.99010525],[.99071345,-.02687069,-.13328478,.02103347,.99876501,-.04501158,.13432967,.04179014,.99005511],[.99066391,-.02724734,-.13357617,.02136835,.99874712,-.04525023,.13464177,.04197347,.99000496],[.99061427,-.0276252,-.13386638,.02170428,.99872901,-.04548953,.1349529,.04215711,.98995479],[.99056453,-.02800427,-.1341554,.02204128,.99871067,-.04572947,.13526305,.04234104,.98990461],[.99051468,-.02838454,-.13444322,.02237933,.9986921,-.04597006,.13557222,.04252527,.98985442],[.99046473,-.028766,-.13472984,.02271843,.99867331,-.04621129,.13588041,.0427098,.98980422],[.99041468,-.02914866,-.13501526,.02305857,.9986543,-.04645315,.13618762,.04289462,.989754],[.99036452,-.02953251,-.13529948,.02339977,.99863505,-.04669566,.13649384,.04307974,.98970378],[.99031426,-.02991754,-.13558248,.023742,.99861558,-.04693879,.13679907,.04326516,.98965355],[.9902639,-.03030375,-.13586427,.02408527,.99859587,-.04718257,.1371033,.04345087,.98960331],[.99021343,-.03069114,-.13614484,.02442957,.99857593,-.04742697,.13740654,.04363686,.98955306],[.99016286,-.03107969,-.13642418,.02477491,.99855575,-.04767201,.13770878,.04382315,.98950282],[.99011219,-.03146942,-.1367023,.02512127,.99853534,-.04791767,.13801002,.04400973,.98945256],[.99006142,-.03186031,-.13697919,.02546865,.99851469,-.04816396,.13831025,.0441966,.98940231],[.99001055,-.03225236,-.13725484,.02581705,.9984938,-.04841087,.13860947,.04438376,.98935206],[.98995958,-.03264556,-.13752925,.02616647,.99847267,-.04865841,.13890768,.04457121,.98930181],[.98990851,-.03303991,-.13780243,.02651689,.9984513,-.04890657,.13920488,.04475894,.98925155],[.98985734,-.03343541,-.13807435,.02686833,.99842969,-.04915535,.13950106,.04494695,.98920131],[.98980606,-.03383205,-.13834503,.02722077,.99840783,-.04940474,.13979623,.04513525,.98915106],[.98975469,-.03422983,-.13861446,.02757421,.99838573,-.04965475,.14009037,.04532383,.98910082],[.98970322,-.03462873,-.13888263,.02792865,.99836338,-.04990537,.14038349,.0455127,.98905059],[.98965165,-.03502877,-.13914953,.02828408,.99834079,-.0501566,.14067558,.04570185,.98900037],[.98959998,-.03542993,-.13941518,.0286405,.99831794,-.05040844,.14096664,.04589127,.98895015],[.98954822,-.03583221,-.13967956,.0289979,.99829484,-.05066089,.14125667,.04608098,.98889994],[.98949635,-.03623561,-.13994267,.02935629,.9982715,-.05091395,.14154567,.04627097,.98884975],[.98944439,-.03664012,-.1402045,.02971566,.99824789,-.0511676,.14183364,.04646123,.98879956],[.98939233,-.03704573,-.14046506,.030076,.99822404,-.05142186,.14212056,.04665177,.98874939],[.98934017,-.03745244,-.14072434,.03043731,.99819992,-.05167672,.14240644,.04684258,.98869924],[.98928792,-.03786025,-.14098233,.03079959,.99817555,-.05193217,.14269128,.04703367,.98864909],[.98923557,-.03826916,-.14123904,.03116283,.99815092,-.05218822,.14297508,.04722504,.98859897],[.98918312,-.03867915,-.14149446,.03152703,.99812604,-.05244487,.14325783,.04741668,.98854886],[.98913057,-.03909022,-.14174858,.03189219,.99810089,-.0527021,.14353952,.04760859,.98849877],[.98907793,-.03950237,-.14200141,.03225829,.99807547,-.05295992,.14382017,.04780077,.98844871],[.9890252,-.0399156,-.14225295,.03262535,.9980498,-.05321833,.14409976,.04799322,.98839866],[.98897237,-.0403299,-.14250317,.03299335,.99802385,-.05347732,.1443783,.04818594,.98834863],[.98891944,-.04074526,-.1427521,.03336229,.99799765,-.0537369,.14465578,.04837893,.98829863],[.98886642,-.04116168,-.14299972,.03373217,.99797117,-.05399705,.1449322,.04857218,.98824865],[.9888133,-.04157916,-.14324602,.03410298,.99794443,-.05425779,.14520756,.04876571,.9881987],[.98876009,-.04199769,-.14349102,.03447472,.99791741,-.0545191,.14548186,.0489595,.98814877],[.98870679,-.04241727,-.1437347,.03484739,.99789013,-.05478098,.14575509,.04915355,.98809887],[.98865339,-.04283789,-.14397706,.03522097,.99786257,-.05504344,.14602726,.04934787,.988049],[.9885999,-.04325954,-.14421809,.03559547,.99783473,-.05530646,.14629836,.04954245,.98799916],[.98854631,-.04368223,-.14445781,.03597089,.99780663,-.05557005,.14656838,.04973729,.98794935],[.98849263,-.04410595,-.1446962,.03634722,.99777824,-.05583421,.14683734,.0499324,.98789957],[.98843885,-.04453069,-.14493325,.03672445,.99774958,-.05609893,.14710522,.05012777,.98784982],[.98838499,-.04495644,-.14516898,.03710258,.99772064,-.05636421,.14737202,.05032339,.9878001],[.98833103,-.04538322,-.14540337,.03748162,.99769142,-.05663005,.14763775,.05051928,.98775042],[.98827698,-.045811,-.14563643,.03786154,.99766192,-.05689644,.1479024,.05071543,.98770078],[.98822283,-.04623978,-.14586815,.03824236,.99763213,-.05716339,.14816598,.05091183,.98765117],[.98816859,-.04666957,-.14609853,.03862406,.99760206,-.05743089,.14842847,.05110849,.9876016],[.98811427,-.04710034,-.14632756,.03900665,.99757171,-.05769894,.14868988,.0513054,.98755206],[.98805984,-.04753211,-.14655525,.03939011,.99754107,-.05796754,.1489502,.05150257,.98750257],[.98800533,-.04796487,-.14678159,.03977445,.99751014,-.05823668,.14920944,.05169999,.98745311],[.98795073,-.0483986,-.14700658,.04015966,.99747893,-.05850636,.14946759,.05189767,.9874037],[.98789603,-.04883331,-.14723022,.04054573,.99744742,-.05877659,.14972466,.0520956,.98735433],[.98784125,-.04926899,-.1474525,.04093267,.99741562,-.05904735,.14998063,.05229378,.987305],[.98778637,-.04970564,-.14767343,.04132047,.99738354,-.05931865,.15023552,.05249221,.98725572],[.9877314,-.05014324,-.147893,.04170912,.99735115,-.05959048,.15048932,.0526909,.98720648],[.98767634,-.05058181,-.14811121,.04209862,.99731848,-.05986284,.15074202,.05288983,.98715729],[.98762119,-.05102132,-.14832806,.04248897,.99728551,-.06013573,.15099363,.05308901,.98710814],[.98756595,-.05146178,-.14854355,.04288016,.99725224,-.06040914,.15124415,.05328844,.98705904],[.98751062,-.05190318,-.14875766,.04327219,.99721867,-.06068308,.15149357,.05348811,.98700999],[.98745519,-.05234552,-.14897042,.04366506,.99718481,-.06095754,.15174189,.05368804,.98696099],[.98739968,-.05278879,-.1491818,.04405875,.99715064,-.06123252,.15198912,.0538882,.98691204],[.98734408,-.05323299,-.14939181,.04445328,.99711618,-.06150801,.15223525,.05408862,.98686314],[.98728839,-.05367811,-.14960045,.04484862,.99708141,-.06178402,.15248028,.05428927,.98681429],[.98723261,-.05412414,-.14980772,.04524479,.99704634,-.06206054,.15272421,.05449017,.98676549],[.98717674,-.05457109,-.15001361,.04564176,.99701096,-.06233757,.15296704,.05469132,.98671675],[.98712078,-.05501894,-.15021812,.04603955,.99697528,-.06261511,.15320877,.0548927,.98666806],[.98706473,-.0554677,-.15042126,.04643815,.99693929,-.06289315,.1534494,.05509433,.98661943],[.98700859,-.05591735,-.15062301,.04683755,.99690299,-.0631717,.15368892,.0552962,.98657085],[.98695236,-.05636789,-.15082338,.04723774,.99686639,-.06345074,.15392735,.0554983,.98652233],[.98689605,-.05681933,-.15102238,.04763874,.99682948,-.06373028,.15416467,.05570065,.98647387],[.98683964,-.05727164,-.15121998,.04804052,.99679225,-.06401031,.15440088,.05590323,.98642546],[.98678315,-.05772483,-.15141621,.04844308,.99675471,-.06429084,.154636,.05610605,.98637712],[.98672656,-.05817889,-.15161104,.04884643,.99671686,-.06457186,.15487,.05630911,.98632883],[.98666989,-.05863382,-.15180449,.04925056,.9966787,-.06485336,.1551029,.0565124,.98628061],[.98661313,-.05908961,-.15199655,.04965546,.99664022,-.06513535,.1553347,.05671593,.98623244],[.98655628,-.05954626,-.15218722,.05006114,.99660142,-.06541782,.15556539,.0569197,.98618434],[.98649934,-.06000376,-.15237651,.05046757,.99656231,-.06570077,.15579497,.05712369,.9861363],[.98644231,-.0604621,-.15256439,.05087477,.99652288,-.0659842,.15602345,.05732793,.98608833],[.9863852,-.06092129,-.15275089,.05128273,.99648313,-.0662681,.15625082,.05753239,.98604042],[.986328,-.06138131,-.15293599,.05169144,.99644306,-.06655247,.15647709,.05773709,.98599257],[.9862707,-.06184217,-.1531197,.0521009,.99640266,-.06683732,.15670225,.05794201,.98594479],[.98621332,-.06230385,-.15330202,.0525111,.99636195,-.06712263,.1569263,.05814717,.98589708],[.98615586,-.06276635,-.15348294,.05292205,.99632091,-.0674084,.15714924,.05835256,.98584943],[.9860983,-.06322966,-.15366246,.05333373,.99627955,-.06769464,.15737108,.05855818,.98580185],[.98604066,-.06369379,-.15384059,.05374614,.99623787,-.06798134,.15759181,.05876402,.98575434],[.98598292,-.06415873,-.15401731,.05415928,.99619586,-.06826849,.15781143,.0589701,.98570689],[.9859251,-.06462446,-.15419264,.05457315,.99615352,-.0685561,.15802994,.0591764,.98565952],[.98586719,-.06509099,-.15436657,.05498774,.99611085,-.06884416,.15824735,.05938293,.98561222],[.9858092,-.06555831,-.15453911,.05540304,.99606786,-.06913267,.15846366,.05958968,.98556498],[.98575111,-.06602642,-.15471024,.05581906,.99602453,-.06942162,.15867885,.05979666,.98551782],[.98569294,-.0664953,-.15487997,.05623578,.99598088,-.06971102,.15889294,.06000387,.98547073],[.98563468,-.06696496,-.1550483,.0566532,.99593689,-.07000086,.15910593,.06021129,.98542372],[.98557633,-.06743539,-.15521523,.05707133,.99589257,-.07029114,.15931781,.06041895,.98537677],[.98551789,-.06790659,-.15538076,.05749015,.99584792,-.07058186,.15952858,.06062682,.9853299],[.98545937,-.06837854,-.15554489,.05790966,.99580294,-.07087301,.15973825,.06083492,.98528311],[.98540075,-.06885125,-.15570762,.05832986,.99575762,-.07116459,.15994682,.06104324,.98523639],[.98534205,-.0693247,-.15586894,.05875073,.99571196,-.0714566,.16015428,.06125178,.98518974],[.98528326,-.0697989,-.15602887,.05917229,.99566597,-.07174904,.16036064,.06146054,.98514317],[.98522438,-.07027384,-.15618739,.05959452,.99561964,-.0720419,.16056589,.06166952,.98509668],[.98516542,-.07074951,-.15634451,.06001742,.99557297,-.07233518,.16077005,.06187872,.98505026],[.98510636,-.0712259,-.15650023,.06044099,.99552596,-.07262887,.1609731,.06208814,.98500392],[.98504722,-.07170303,-.15665455,.06086521,.99547861,-.07292299,.16117505,.06229777,.98495766],[.98498799,-.07218086,-.15680747,.0612901,.99543092,-.07321752,.1613759,.06250763,.98491148],[.98492867,-.07265941,-.15695898,.06171563,.99538289,-.07351245,.16157566,.0627177,.98486537],[.98486926,-.07313867,-.1571091,.06214182,.99533452,-.0738078,.16177431,.06292799,.98481934],[.98480977,-.07361863,-.15725781,.06256864,.9952858,-.07410355,.16197187,.06313849,.9847734],[.98475018,-.07409928,-.15740512,.06299611,.99523674,-.0743997,.16216833,.06334921,.98472753],[.98469051,-.07458063,-.15755104,.06342421,.99518734,-.07469625,.16236369,.06356014,.98468175],[.98463075,-.07506266,-.15769555,.06385295,.99513759,-.0749932,.16255796,.06377129,.98463604],[.9845709,-.07554537,-.15783867,.06428231,.99508749,-.07529055,.16275114,.06398265,.98459042],[.98451096,-.07602875,-.15798039,.06471229,.99503705,-.07558828,.16294322,.06419422,.98454487],[.98445093,-.07651281,-.1581207,.06514289,.99498626,-.07588641,.16313421,.064406,.98449941],[.98439081,-.07699753,-.15825963,.06557411,.99493512,-.07618492,.16332411,.064618,.98445404],[.98433061,-.07748291,-.15839715,.06600593,.99488363,-.07648381,.16351292,.06483021,.98440874],[.98427031,-.07796894,-.15853328,.06643836,.9948318,-.07678309,.16370064,.06504263,.98436353],[.98420993,-.07845562,-.15866801,.06687139,.99477961,-.07708275,.16388728,.06525526,.9843184],[.98414945,-.07894294,-.15880135,.06730502,.99472707,-.07738278,.16407283,.06546809,.98427335],[.98408889,-.07943091,-.15893329,.06773923,.99467418,-.07768319,.16425729,.06568114,.98422839],[.98402823,-.0799195,-.15906385,.06817404,.99462093,-.07798396,.16444067,.0658944,.98418352],[.98396749,-.08040872,-.159193,.06860943,.99456734,-.07828511,.16462297,.06610786,.98413872],[.98390666,-.08089857,-.15932077,.0690454,.99451339,-.07858662,.16480419,.06632153,.98409402],[.98384574,-.08138903,-.15944715,.06948194,.99445908,-.07888849,.16498432,.06653541,.9840494],[.98378472,-.0818801,-.15957214,.06991905,.99440442,-.07919073,.16516338,.0667495,.98400486],[.98372362,-.08237177,-.15969574,.07035673,.99434941,-.07949332,.16534137,.06696379,.98396041],[.98366243,-.08286405,-.15981795,.07079497,.99429403,-.07979627,.16551828,.06717828,.98391604],[.98360114,-.08335692,-.15993878,.07123377,.99423831,-.08009957,.16569411,.06739298,.98387176],[.98353977,-.08385038,-.16005822,.07167312,.99418222,-.08040321,.16586888,.06760789,.98382757],[.98347831,-.08434443,-.16017628,.07211302,.99412578,-.08070721,.16604257,.067823,.98378346],[.98341675,-.08483905,-.16029296,.07255346,.99406897,-.08101155,.1662152,.06803831,.98373945],[.9833551,-.08533425,-.16040825,.07299444,.99401181,-.08131623,.16638676,.06825382,.98369551],[.98329336,-.08583001,-.16052217,.07343595,.99395429,-.08162126,.16655725,.06846954,.98365167],[.98323154,-.08632634,-.16063471,.073878,.99389641,-.08192661,.16672669,.06868546,.98360791],[.98316962,-.08682322,-.16074587,.07432057,.99383817,-.08223231,.16689506,.06890158,.98356424],[.9831076,-.08732066,-.16085566,.07476367,.99377956,-.08253833,.16706237,.0691179,.98352066],[.9830455,-.08781864,-.16096407,.07520728,.9937206,-.08284468,.16722862,.06933442,.98347716],[.9829833,-.08831717,-.16107111,.0756514,.99366127,-.08315136,.16739382,.06955114,.98343375],[.98292101,-.08881623,-.16117679,.07609603,.99360158,-.08345836,.16755797,.06976806,.98339043],[.98285863,-.08931582,-.16128109,.07654117,.99354152,-.08376568,.16772106,.06998518,.9833472],[.98279616,-.08981593,-.16138402,.07698681,.99348111,-.08407332,.1678831,.0702025,.98330406],[.9827336,-.09031656,-.1614856,.07743294,.99342032,-.08438128,.1680441,.07042002,.983261],[.98267094,-.09081771,-.1615858,.07787956,.99335918,-.08468955,.16820405,.07063773,.98321804],[.98260819,-.09131936,-.16168465,.07832666,.99329767,-.08499813,.16836296,.07085564,.98317516],[.98254534,-.09182152,-.16178213,.07877425,.99323579,-.08530702,.16852083,.07107375,.98313237],[.9824824,-.09232418,-.16187826,.07922231,.99317354,-.08561621,.16867765,.07129205,.98308967],[.98241937,-.09282733,-.16197304,.07967085,.99311094,-.0859257,.16883345,.07151055,.98304705],[.98235625,-.09333096,-.16206645,.08011985,.99304796,-.0862355,.1689882,.07172924,.98300453],[.98229303,-.09383508,-.16215852,.08056932,.99298461,-.08654559,.16914193,.07194813,.98296209],[.98222971,-.09433967,-.16224924,.08101925,.9929209,-.08685598,.16929463,.07216721,.98291974],[.98216631,-.09484473,-.16233861,.08146963,.99285682,-.08716665,.16944629,.07238649,.98287748],[.9821028,-.09535025,-.16242664,.08192046,.99279238,-.08747762,.16959694,.07260595,.98283531],[.98203921,-.09585624,-.16251332,.08237173,.99272756,-.08778888,.16974656,.07282562,.98279323],[.98197551,-.09636268,-.16259866,.08282345,.99266238,-.08810042,.16989516,.07304547,.98275124],[.98191173,-.09686957,-.16268266,.0832756,.99259682,-.08841224,.17004275,.07326552,.98270933],[.98184784,-.0973769,-.16276533,.08372818,.9925309,-.08872434,.17018932,.07348576,.98266751],[.98178386,-.09788466,-.16284666,.08418119,.9924646,-.08903671,.17033488,.07370618,.98262578],[.98171979,-.09839286,-.16292666,.08463462,.99239794,-.08934937,.17047943,.0739268,.98258414],[.98165562,-.09890149,-.16300534,.08508847,.99233091,-.08966229,.17062297,.07414761,.98254259],[.98159135,-.09941054,-.16308268,.08554273,.9922635,-.08997548,.17076551,.07436861,.98250112],[.98152699,-.09992,-.16315871,.0859974,.99219572,-.09028893,.17090704,.0745898,.98245974],[.98146253,-.10042987,-.16323341,.08645247,.99212758,-.09060266,.17104758,.07481118,.98241845],[.98139797,-.10094015,-.16330679,.08690795,.99205906,-.09091664,.17118712,.07503275,.98237725],[.98133332,-.10145082,-.16337886,.08736381,.99199017,-.09123088,.17132567,.0752545,.98233613],[.98126856,-.10196189,-.16344962,.08782007,.9919209,-.09154537,.17146323,.07547644,.9822951],[.98120371,-.10247335,-.16351906,.08827671,.99185127,-.09186012,.1715998,.07569857,.98225416],[.98113877,-.10298519,-.1635872,.08873373,.99178126,-.09217513,.17173539,.07592089,.9822133],[.98107372,-.1034974,-.16365403,.08919113,.99171088,-.09249038,.17187,.07614339,.98217254],[.98100858,-.10400999,-.16371956,.0896489,.99164013,-.09280587,.17200362,.07636608,.98213185],[.98094333,-.10452294,-.16378379,.09010704,.991569,-.09312161,.17213628,.07658895,.98209126],[.98087799,-.10503626,-.16384673,.09056554,.9914975,-.09343759,.17226796,.07681201,.98205075],[.98081255,-.10554992,-.16390837,.09102439,.99142563,-.09375381,.17239867,.07703525,.98201032],[.98074701,-.10606394,-.16396872,.0914836,.99135339,-.09407026,.17252841,.07725868,.98196998],[.98068137,-.1065783,-.16402779,.09194316,.99128077,-.09438695,.17265719,.07748229,.98192973],[.98061563,-.107093,-.16408557,.09240305,.99120777,-.09470387,.17278502,.07770608,.98188956],[.98054979,-.10760804,-.16414207,.09286329,.99113441,-.09502101,.17291188,.07793006,.98184947],[.98048385,-.1081234,-.1641973,.09332386,.99106067,-.09533839,.17303779,.07815422,.98180947],[.98041781,-.10863908,-.16425125,.09378476,.99098655,-.09565598,.17316276,.07837856,.98176956],[.98035167,-.10915507,-.16430393,.09424598,.99091207,-.0959738,.17328677,.07860309,.98172972],[.98028542,-.10967138,-.16435534,.09470753,.99083721,-.09629183,.17340984,.07882779,.98168997],[.98021908,-.110188,-.16440549,.09516938,.99076197,-.09661009,.17353198,.07905268,.98165031],[.98015263,-.11070491,-.16445438,.09563155,.99068636,-.09692855,.17365317,.07927775,.98161072],[.98008608,-.11122211,-.16450201,.09609402,.99061038,-.09724723,.17377344,.07950299,.98157122],[.98001943,-.11173961,-.16454838,.0965568,.99053402,-.09756611,.17389277,.07972842,.9815318],[.97995268,-.11225739,-.16459351,.09701986,.99045728,-.0978852,.17401118,.07995403,.98149247],[.97988583,-.11277544,-.16463739,.09748322,.99038018,-.0982045,.17412866,.08017981,.98145321],[.97981887,-.11329377,-.16468002,.09794687,.9903027,-.098524,.17424522,.08040578,.98141404],[.97975181,-.11381236,-.16472142,.09841079,.99022484,-.09884369,.17436087,.08063192,.98137494],[.97968464,-.11433121,-.16476158,.09887499,.99014662,-.09916358,.17447561,.08085824,.98133593],[.97961737,-.11485032,-.1648005,.09933947,.99006801,-.09948367,.17458944,.08108474,.981297],[.97955,-.11536968,-.1648382,.09980421,.98998904,-.09980395,.17470236,.08131141,.98125814],[.97948252,-.11588928,-.16487468,.10026921,.98990969,-.10012441,.17481439,.08153826,.98121936],[.97941494,-.11640912,-.16490993,.10073447,.98982996,-.10044507,.17492551,.08176529,.98118067],[.97934726,-.11692919,-.16494397,.10119998,.98974987,-.10076591,.17503574,.08199249,.98114205],[.97927947,-.11744949,-.16497679,.10166573,.9896694,-.10108693,.17514509,.08221987,.98110351],[.97921157,-.11797001,-.1650084,.10213173,.98958855,-.10140813,.17525354,.08244742,.98106504],[.97914357,-.11849074,-.16503881,.10259797,.98950733,-.10172951,.17536112,.08267515,.98102666],[.97907547,-.11901169,-.16506801,.10306444,.98942574,-.10205107,.17546781,.08290305,.98098834],[.97900725,-.11953284,-.16509602,.10353113,.98934378,-.10237279,.17557363,.08313113,.98095011],[.97893894,-.12005419,-.16512284,.10399805,.98926144,-.10269469,.17567858,.08335938,.98091195],[.97887051,-.12057573,-.16514846,.10446519,.98917874,-.10301676,.17578267,.0835878,.98087386],[.97880198,-.12109746,-.1651729,.10493253,.98909566,-.10333899,.17588589,.0838164,.98083585],[.97873334,-.12161937,-.16519616,.10540009,.9890122,-.10366138,.17598825,.08404516,.98079791],[.9786646,-.12214146,-.16521824,.10586785,.98892838,-.10398394,.17608976,.0842741,.98076005],[.97859575,-.12266372,-.16523915,.10633581,.98884418,-.10430666,.17619042,.08450321,.98072226],[.97852679,-.12318615,-.16525889,.10680395,.98875962,-.10462953,.17629023,.08473249,.98068454],[.97845772,-.12370874,-.16527747,.10727229,.98867468,-.10495256,.1763892,.08496195,.98064689],[.97838854,-.12423147,-.16529489,.10774081,.98858937,-.10527574,.17648733,.08519157,.98060931],[.97831926,-.12475436,-.16531115,.10820951,.98850369,-.10559907,.17658462,.08542136,.9805718],[.97824987,-.12527739,-.16532626,.10867838,.98841764,-.10592254,.17668109,.08565133,.98053437],[.97818037,-.12580056,-.16534022,.10914741,.98833122,-.10624617,.17677673,.08588146,.980497],[.97811076,-.12632386,-.16535304,.10961661,.98824443,-.10656993,.17687154,.08611176,.9804597],[.97804104,-.12684728,-.16536472,.11008597,.98815727,-.10689384,.17696554,.08634223,.98042247],[.97797121,-.12737083,-.16537527,.11055548,.98806974,-.10721789,.17705873,.08657286,.9803853],[.97790128,-.12789449,-.16538469,.11102513,.98798184,-.10754207,.17715111,.08680367,.98034821],[.97783123,-.12841826,-.16539298,.11149493,.98789358,-.10786639,.17724268,.08703464,.98031118],[.97776107,-.12894213,-.16540016,.11196487,.98780495,-.10819084,.17733345,.08726578,.98027421],[.97769081,-.1294661,-.16540622,.11243494,.98771595,-.10851541,.17742343,.08749708,.98023731],[.97762043,-.12999016,-.16541117,.11290513,.98762658,-.10884012,.17751261,.08772856,.98020048],[.97754994,-.1305143,-.16541501,.11337545,.98753685,-.10916495,.17760101,.08796019,.9801637],[.97747934,-.13103853,-.16541776,.11384588,.98744675,-.10948991,.17768862,.088192,.98012699],[.97740864,-.13156283,-.1654194,.11431642,.98735628,-.10981499,.17777546,.08842396,.98009035],[.97733782,-.1320872,-.16541996,.11478707,.98726545,-.11014018,.17786152,.08865609,.98005376],[.97726689,-.13261164,-.16541943,.11525782,.98717425,-.1104655,.17794681,.08888839,.98001724],[.97719584,-.13313613,-.16541782,.11572867,.98708269,-.11079093,.17803134,.08912085,.97998077],[.97712469,-.13366067,-.16541513,.1161996,.98699077,-.11111647,.1781151,.08935347,.97994437],[.97705343,-.13418526,-.16541136,.11667063,.98689848,-.11144212,.17819811,.08958626,.97990802],[.97698205,-.13470989,-.16540653,.11714173,.98680584,-.11176788,.17828037,.08981921,.97987174],[.97691056,-.13523455,-.16540064,.1176129,.98671282,-.11209375,.17836188,.09005232,.97983551],[.97683896,-.13575924,-.16539369,.11808415,.98661945,-.11241972,.17844265,.09028559,.97979933],[.97676725,-.13628396,-.16538569,.11855546,.98652572,-.11274579,.17852268,.09051902,.97976322],[.97669542,-.13680869,-.16537664,.11902683,.98643162,-.11307197,.17860198,.09075262,.97972715],[.97662348,-.13733344,-.16536655,.11949825,.98633717,-.11339824,.17868054,.09098637,.97969115],[.97655143,-.13785819,-.16535542,.11996972,.98624235,-.11372461,.17875839,.09122029,.97965519],[.97647927,-.13838294,-.16534326,.12044124,.98614718,-.11405107,.17883551,.09145436,.97961929],[.976407,-.13890769,-.16533007,.12091279,.98605165,-.11437763,.17891192,.09168859,.97958345],[.97633461,-.13943242,-.16531586,.12138437,.98595576,-.11470427,.17898762,.09192299,.97954765],[.97626211,-.13995714,-.16530063,.12185598,.98585952,-.115031,.17906261,.09215754,.9795119],[.97618949,-.14048183,-.1652844,.12232761,.98576292,-.11535782,.17913691,.09239225,.97947621],[.97611676,-.14100649,-.16526715,.12279926,.98566596,-.11568473,.1792105,.09262712,.97944056],[.97604392,-.14153112,-.16524891,.12327092,.98556865,-.11601171,.17928341,.09286214,.97940496],[.97597097,-.14205571,-.16522967,.12374258,.98547099,-.11633878,.17935563,.09309732,.97936941],[.9758979,-.14258025,-.16520944,.12421424,.98537297,-.11666592,.17942717,.09333266,.97933391],[.97582472,-.14310475,-.16518822,.1246859,.9852746,-.11699314,.17949803,.09356815,.97929845],[.97575143,-.14362918,-.16516602,.12515754,.98517588,-.11732043,.17956822,.0938038,.97926304],[.97567802,-.14415355,-.16514285,.12562917,.9850768,-.1176478,.17963774,.09403961,.97922767],[.9756045,-.14467785,-.16511871,.12610078,.98497738,-.11797523,.1797066,.09427557,.97919235],[.97553086,-.14520207,-.16509361,.12657236,.98487761,-.11830274,.1797748,.09451168,.97915707],[.97545711,-.14572621,-.16506755,.1270439,.98477749,-.11863031,.17984235,.09474795,.97912183],[.97538325,-.14625027,-.16504053,.12751541,.98467702,-.11895794,.17990925,.09498437,.97908663],[.97530927,-.14677423,-.16501257,.12798687,.9845762,-.11928564,.17997551,.09522095,.97905147],[.97523518,-.14729809,-.16498366,.12845828,.98447504,-.1196134,.18004112,.09545768,.97901636],[.97516098,-.14782185,-.16495382,.12892964,.98437353,-.11994121,.18010611,.09569456,.97898128],[.97508666,-.14834549,-.16492305,.12940093,.98427168,-.12026909,.18017047,.09593159,.97894624],[.97501223,-.14886902,-.16489136,.12987216,.98416949,-.12059702,.1802342,.09616877,.97891123],[.97493769,-.14939243,-.16485874,.13034331,.98406695,-.120925,.18029732,.0964061,.97887626],[.97486303,-.14991571,-.16482521,.13081439,.98396407,-.12125303,.18035982,.09664359,.97884133],[.97478826,-.15043885,-.16479077,.13128538,.98386085,-.12158111,.18042171,.09688122,.97880643],[.97471338,-.15096185,-.16475543,.13175629,.9837573,-.12190925,.180483,.09711901,.97877157],[.97463838,-.15148471,-.16471919,.13222709,.9836534,-.12223742,.18054369,.09735694,.97873674],[.97456327,-.15200741,-.16468206,.1326978,.98354916,-.12256564,.18060378,.09759503,.97870194],[.97448805,-.15252996,-.16464404,.1331684,.98344459,-.1228939,.18066329,.09783326,.97866717],[.97441271,-.15305234,-.16460514,.13363888,.98333969,-.12322221,.18072221,.09807164,.97863243],[.97433726,-.15357455,-.16456537,.13410925,.98323444,-.12355055,.18078056,.09831016,.97859772],[.9742617,-.15409658,-.16452472,.1345795,.98312887,-.12387892,.18083832,.09854884,.97856304],[.97418603,-.15461843,-.16448322,.13504961,.98302296,-.12420734,.18089552,.09878766,.97852839],[.97411024,-.15514009,-.16444086,.13551959,.98291672,-.12453578,.18095216,.09902662,.97849376],[.97403434,-.15566156,-.16439764,.13598942,.98281015,-.12486426,.18100823,.09926573,.97845916],[.97395833,-.15618282,-.16435358,.13645911,.98270325,-.12519276,.18106376,.09950499,.97842459],[.97388221,-.15670388,-.16430868,.13692865,.98259603,-.1255213,.18111873,.09974439,.97839004],[.97380597,-.15722473,-.16426294,.13739802,.98248847,-.12584986,.18117316,.09998394,.97835551],[.97372963,-.15774535,-.16421638,.13786723,.98238059,-.12617844,.18122704,.10022363,.978321],[.97365317,-.15826576,-.16416899,.13833627,.98227239,-.12650705,.1812804,.10046346,.97828652],[.9735766,-.15878593,-.16412078,.13880513,.98216386,-.12683568,.18133322,.10070344,.97825205],[.97349992,-.15930586,-.16407177,.13927381,.98205501,-.12716432,.18138552,.10094356,.97821761],[.97342313,-.15982555,-.16402194,.1397423,.98194584,-.12749299,.1814373,.10118382,.97818318],[.97334623,-.16034499,-.16397132,.14021059,.98183635,-.12782166,.18148857,.10142422,.97814878],[.97326922,-.16086418,-.16391991,.14067869,.98172654,-.12815036,.18153932,.10166476,.97811439],[.9731921,-.1613831,-.1638677,.14114657,.98161641,-.12847906,.18158957,.10190545,.97808001],[.97311488,-.16190175,-.16381471,.14161424,.98150597,-.12880778,.18163933,.10214627,.97804565],[.97303754,-.16242013,-.16376095,.14208169,.98139521,-.1291365,.18168858,.10238723,.97801131],[.97296009,-.16293823,-.16370642,.14254892,.98128414,-.12946524,.18173735,.10262834,.97797697],[.97288254,-.16345604,-.16365112,.14301591,.98117275,-.12979397,.18178563,.10286958,.97794265],[.97280488,-.16397356,-.16359506,.14348267,.98106106,-.13012272,.18183343,.10311095,.97790835],[.97272711,-.16449078,-.16353825,.14394918,.98094906,-.13045146,.18188076,.10335247,.97787405],[.97264923,-.1650077,-.1634807,.14441545,.98083674,-.1307802,.18192762,.10359412,.97783976],[.97257124,-.1655243,-.1634224,.14488145,.98072413,-.13110894,.18197401,.10383591,.97780548],[.97249315,-.16604058,-.16336337,.14534719,.9806112,-.13143768,.18201994,.10407784,.97777121],[.97241496,-.16655654,-.16330361,.14581267,.98049797,-.13176642,.18206541,.1043199,.97773695],[.97233666,-.16707217,-.16324312,.14627787,.98038444,-.13209515,.18211044,.1045621,.97770269],[.97225825,-.16758746,-.16318192,.14674279,.98027061,-.13242387,.18215502,.10480443,.97766844],[.97217974,-.16810241,-.16312001,.14720742,.98015648,-.13275258,.18219916,.1050469,.97763419],[.97210112,-.16861701,-.16305739,.14767175,.98004205,-.13308128,.18224286,.10528949,.97759995],[.9720224,-.16913125,-.16299407,.14813579,.97992733,-.13340997,.18228614,.10553223,.97756571],[.97194358,-.16964513,-.16293005,.14859951,.97981231,-.13373864,.18232898,.10577509,.97753147],[.97186466,-.17015864,-.16286535,.14906293,.97969699,-.1340673,.18237141,.10601809,.97749723],[.97178563,-.17067178,-.16279997,.14952603,.97958139,-.13439594,.18241341,.10626121,.97746299],[.9717065,-.17118453,-.16273391,.14998879,.97946549,-.13472456,.18245501,.10650447,.97742875],[.97162728,-.1716969,-.16266718,.15045123,.97934931,-.13505317,.1824962,.10674786,.97739451],[.97154795,-.17220887,-.16259979,.15091333,.97923284,-.13538174,.18253699,.10699138,.97736027],[.97146852,-.17272044,-.16253174,.15137508,.97911608,-.1357103,.18257738,.10723503,.97732602],[.97138899,-.1732316,-.16246303,.15183648,.97899904,-.13603883,.18261738,.1074788,.97729177],[.97130937,-.17374235,-.16239368,.15229753,.97888172,-.13636733,.18265699,.10772271,.97725751],[.97122965,-.17425267,-.16232369,.1527582,.97876411,-.1366958,.18269621,.10796674,.97722325],[.97114983,-.17476257,-.16225306,.15321851,.97864623,-.13702425,.18273506,.1082109,.97718898],[.97106991,-.17527204,-.16218181,.15367844,.97852807,-.13735266,.18277353,.10845519,.9771547],[.9709899,-.17578106,-.16210993,.15413798,.97840964,-.13768104,.18281164,.1086996,.97712041],[.9709098,-.17628964,-.16203743,.15459714,.97829093,-.13800938,.18284938,.10894413,.97708612],[.9708296,-.17679777,-.16196433,.15505589,.97817195,-.13833769,.18288676,.1091888,.97705181],[.9707493,-.17730543,-.16189061,.15551424,.9780527,-.13866595,.18292378,.10943358,.97701749],[.97066892,-.17781263,-.1618163,.15597218,.97793318,-.13899418,.18296045,.10967849,.97698316],[.97058844,-.17831936,-.1617414,.1564297,.97781339,-.13932237,.18299678,.10992353,.97694882],[.97050788,-.1788256,-.1616659,.1568868,.97769334,-.13965052,.18303276,.11016868,.97691446],[.97042722,-.17933136,-.16158983,.15734346,.97757303,-.13997862,.18306841,.11041396,.97688009],[.97034648,-.17983662,-.16151317,.15779969,.97745245,-.14030667,.18310372,.11065936,.97684571],[.97026564,-.18034138,-.16143595,.15825547,.97733162,-.14063468,.18313871,.11090488,.9768113],[.97018472,-.18084564,-.16135816,.1587108,.97721053,-.14096264,.18317337,.11115052,.97677688],[.97010372,-.18134938,-.16127981,.15916567,.97708918,-.14129055,.18320771,.11139628,.97674244],[.97002263,-.18185261,-.16120091,.15962008,.97696758,-.1416184,.18324174,.11164215,.97670799],[.96994145,-.1823553,-.16112146,.16007401,.97684573,-.14194621,.18327546,.11188815,.97667351],[.96986019,-.18285746,-.16104147,.16052747,.97672363,-.14227395,.18330886,.11213426,.97663902],[.96977885,-.18335908,-.16096094,.16098044,.97660129,-.14260164,.18334197,.1123805,.9766045],[.96969743,-.18386016,-.16087988,.16143291,.97647869,-.14292928,.18337478,.11262684,.97656996],[.96961593,-.18436068,-.1607983,.16188489,.97635586,-.14325685,.18340729,.11287331,.9765354],[.96953435,-.18486063,-.1607162,.16233636,.97623278,-.14358436,.18343952,.11311989,.97650081],[.96945269,-.18536002,-.16063358,.16278732,.97610946,-.14391181,.18347145,.11336658,.9764662],[.96937095,-.18585883,-.16055046,.16323775,.97598591,-.14423919,.18350311,.11361339,.97643157],[.96928914,-.18635707,-.16046683,.16368766,.97586212,-.14456651,.18353449,.11386031,.97639691],[.96920726,-.18685471,-.1603827,.16413703,.9757381,-.14489376,.1835656,.11410735,.97636222],[.9691253,-.18735175,-.16029809,.16458586,.97561384,-.14522095,.18359643,.11435449,.97632751],[.96904327,-.1878482,-.16021298,.16503415,.97548936,-.14554806,.183627,.11460175,.97629276],[.96896117,-.18834403,-.1601274,.16548187,.97536465,-.1458751,.18365731,.11484912,.97625799],[.968879,-.18883925,-.16004134,.16592904,.97523972,-.14620206,.18368736,.1150966,.97622319],[.96879676,-.18933384,-.15995481,.16637563,.97511456,-.14652895,.18371716,.11534419,.97618836],[.96871445,-.1898278,-.15986782,.16682165,.97498919,-.14685577,.1837467,.11559189,.9761535],[.96863208,-.19032113,-.15978037,.16726708,.9748636,-.1471825,.183776,.1158397,.97611861],[.96854964,-.1908138,-.15969246,.16771192,.97473779,-.14750916,.18380506,.11608761,.97608369],[.96846714,-.19130583,-.15960411,.16815617,.97461177,-.14783573,.18383388,.11633563,.97604873],[.96838458,-.1917972,-.15951531,.1685998,.97448554,-.14816222,.18386246,.11658376,.97601374],[.96830196,-.1922879,-.15942608,.16904283,.9743591,-.14848863,.18389081,.11683199,.97597872],[.96821928,-.19277792,-.15933641,.16948523,.97423245,-.14881495,.18391894,.11708033,.97594366],[.96813655,-.19326727,-.15924632,.16992701,.9741056,-.14914118,.18394684,.11732878,.97590856],[.96805375,-.19375593,-.1591558,.17036815,.97397855,-.14946732,.18397451,.11757732,.97587343],[.96797091,-.19424389,-.15906487,.17080865,.9738513,-.14979337,.18400197,.11782597,.97583826],[.96788801,-.19473115,-.15897352,.1712485,.97372385,-.15011933,.18402922,.11807473,.97580306],[.96780506,-.1952177,-.15888177,.17168769,.97359621,-.1504452,.18405625,.11832358,.97576781],[.96772206,-.19570354,-.15878961,.17212622,.97346838,-.15077097,.18408308,.11857254,.97573253],[.96763901,-.19618865,-.15869706,.17256408,.97334035,-.15109664,.1841097,.11882159,.97569721],[.96755592,-.19667303,-.15860412,.17300126,.97321214,-.15142222,.18413612,.11907075,.97566185],[.96747278,-.19715667,-.15851079,.17343775,.97308375,-.15174769,.18416234,.11932,.97562645],[.9673896,-.19763956,-.15841708,.17387355,.97295517,-.15207306,.18418837,.11956936,.97559101],[.96730637,-.1981217,-.15832299,.17430865,.97282642,-.15239833,.1842142,.11981881,.97555552],[.96722311,-.19860309,-.15822853,.17474304,.97269749,-.15272349,.18423985,.12006835,.97552],[.96713981,-.1990837,-.1581337,.17517672,.97256838,-.15304855,.18426531,.120318,.97548443],[.96705647,-.19956354,-.15803851,.17560967,.97243911,-.15337349,.18429058,.12056774,.97544882],[.9669731,-.20004259,-.15794296,.17604189,.97230966,-.15369833,.18431568,.12081757,.97541317],[.9668897,-.20052086,-.15784706,.17647338,.97218005,-.15402305,.18434059,.1210675,.97537747],[.96680627,-.20099832,-.1577508,.17690412,.97205027,-.15434766,.18436533,.12131752,.97534173],[.9667228,-.20147499,-.15765421,.1773341,.97192034,-.15467216,.1843899,.12156764,.97530594],[.96663932,-.20195084,-.15755727,.17776333,.97179024,-.15499654,.1844143,.12181784,.97527011],[.9665558,-.20242587,-.15746,.17819178,.97165999,-.1553208,.18443853,.12206814,.97523423],[.96647226,-.20290007,-.1573624,.17861947,.97152959,-.15564494,.1844626,.12231853,.9751983],[.96638871,-.20337344,-.15726447,.17904637,.97139903,-.15596896,.1844865,.12256901,.97516233],[.96630513,-.20384596,-.15716622,.17947247,.97126833,-.15629285,.18451024,.12281958,.97512631],[.96622154,-.20431764,-.15706765,.17989779,.97113749,-.15661662,.18453382,.12307023,.97509025],[.96613793,-.20478846,-.15696877,.18032229,.9710065,-.15694027,.18455725,.12332097,.97505413],[.9660543,-.20525841,-.15686958,.18074598,.97087537,-.15726378,.18458052,.12357181,.97501797],[.96597067,-.20572749,-.15677008,.18116886,.97074411,-.15758716,.18460365,.12382272,.97498176],[.96588703,-.2061957,-.15667028,.1815909,.97061272,-.15791042,.18462662,.12407372,.9749455],[.96580338,-.20666301,-.15657019,.18201211,.97048119,-.15823353,.18464944,.12432481,.97490919],[.96571973,-.20712943,-.1564698,.18243247,.97034954,-.15855651,.18467212,.12457598,.97487283],[.96563608,-.20759494,-.15636912,.18285199,.97021776,-.15887936,.18469465,.12482724,.97483642],[.96555243,-.20805955,-.15626816,.18327064,.97008586,-.15920206,.18471704,.12507857,.97479996],[.96546877,-.20852323,-.15616692,.18368843,.96995384,-.15952463,.18473929,.12532999,.97476345],[.96538513,-.208986,-.15606539,.18410534,.96982171,-.15984705,.1847614,.12558149,.97472689],[.96530149,-.20944782,-.1559636,.18452138,.96968946,-.16016933,.18478337,.12583307,.97469028],[.96521786,-.20990871,-.15586153,.18493652,.9695571,-.16049146,.18480521,.12608473,.97465362],[.96513424,-.21036865,-.1557592,.18535077,.96942464,-.16081344,.18482691,.12633647,.9746169],[.96505064,-.21082763,-.1556566,.18576412,.96929207,-.16113528,.18484848,.12658829,.97458014],[.96496705,-.21128565,-.15555374,.18617655,.9691594,-.16145696,.18486991,.12684018,.97454332],[.96488348,-.21174269,-.15545063,.18658806,.96902663,-.16177848,.18489121,.12709215,.97450645],[.96479993,-.21219876,-.15534727,.18699865,.96889377,-.16209986,.18491239,.1273442,.97446953],[.96471641,-.21265384,-.15524365,.1874083,.96876082,-.16242107,.18493343,.12759632,.97443256],[.96463292,-.21310792,-.15513979,.18781701,.96862778,-.16274213,.18495434,.12784852,.97439553],[.96454945,-.213561,-.15503568,.18822477,.96849465,-.16306302,.18497513,.12810079,.97435845],[.96446601,-.21401307,-.15493134,.18863157,.96836144,-.16338375,.18499579,.12835313,.97432132],[.96438261,-.21446412,-.15482675,.18903741,.96822815,-.16370432,.18501632,.12860555,.97428413],[.96429924,-.21491415,-.15472194,.18944228,.96809479,-.16402472,.18503673,.12885803,.9742469],[.96421592,-.21536314,-.15461689,.18984616,.96796135,-.16434495,.18505701,.12911059,.97420961],[.96413263,-.21581109,-.15451161,.19024906,.96782784,-.16466501,.18507717,.12936322,.97417226],[.9640494,-.21625799,-.15440611,.19065096,.96769427,-.16498489,.1850972,.12961591,.97413487],[.9639662,-.21670383,-.15430038,.19105186,.96756063,-.16530461,.18511711,.12986868,.97409742],[.96388306,-.21714861,-.15419443,.19145175,.96742693,-.16562414,.1851369,.13012151,.97405992],[.96379997,-.21759232,-.15408827,.19185062,.96729318,-.1659435,.18515656,.13037441,.97402236],[.96371694,-.21803494,-.15398189,.19224846,.96715937,-.16626267,.1851761,.13062737,.97398475],[.96363397,-.21847648,-.15387529,.19264527,.96702552,-.16658167,.18519551,.1308804,.97394709],[.96355105,-.21891692,-.15376849,.19304104,.96689161,-.16690048,.1852148,.1311335,.97390938],[.96346821,-.21935626,-.15366148,.19343576,.96675766,-.1672191,.18523397,.13138666,.97387162],[.96338542,-.21979448,-.15355426,.19382943,.96662367,-.16753753,.18525301,.13163988,.9738338],[.96330271,-.22023159,-.15344684,.19422203,.96648965,-.16785577,.18527192,.13189316,.97379593],[.96322007,-.22066756,-.15333921,.19461356,.96635559,-.16817382,.18529071,.13214651,.973758],[.96313751,-.22110241,-.15323139,.19500402,.9662215,-.16849167,.18530938,.13239992,.97372003],[.96305503,-.2215361,-.15312336,.19539339,.96608738,-.16880933,.18532791,.13265338,.973682],[.96297263,-.22196865,-.15301514,.19578166,.96595324,-.16912679,.18534632,.13290691,.97364393],[.96289031,-.22240004,-.15290673,.19616884,.96581908,-.16944404,.1853646,.13316049,.9736058],[.96280808,-.22283027,-.15279812,.1965549,.96568491,-.16976109,.18538275,.13341413,.97356762],[.96272595,-.22325932,-.15268932,.19693985,.96555072,-.17007794,.18540077,.13366783,.97352939],[.9626439,-.22368718,-.15258033,.19732368,.96541652,-.17039458,.18541866,.13392159,.9734911],[.96256196,-.22411386,-.15247116,.19770638,.96528231,-.17071101,.18543641,.1341754,.97345277],[.96248011,-.22453934,-.15236179,.19808794,.9651481,-.17102722,.18545403,.13442927,.97341439],[.96239837,-.22496361,-.15225224,.19846836,.96501389,-.17134322,.18547152,.13468319,.97337596],[.96231674,-.22538667,-.1521425,.19884762,.96487969,-.171659,.18548886,.13493716,.97333748],[.96223521,-.22580851,-.15203259,.19922572,.96474549,-.17197457,.18550607,.13519118,.97329895],[.9621538,-.22622913,-.15192248,.19960266,.9646113,-.17228991,.18552314,.13544526,.97326037],[.96207251,-.2266485,-.1518122,.19997843,.96447713,-.17260503,.18554006,.13569939,.97322174],[.96199133,-.22706663,-.15170173,.20035301,.96434297,-.17291992,.18555685,.13595357,.97318307],[.96191028,-.22748351,-.15159109,.20072641,.96420884,-.17323459,.18557348,.1362078,.97314435],[.96182936,-.22789913,-.15148026,.20109861,.96407473,-.17354902,.18558996,.13646208,.97310558],[.96174856,-.22831348,-.15136926,.2014696,.96394065,-.17386322,.1856063,.1367164,.97306676],[.9616679,-.22872656,-.15125807,.20183939,.9638066,-.17417719,.18562248,.13697077,.9730279],[.96158738,-.22913836,-.15114671,.20220796,.96367259,-.17449092,.18563851,.13722519,.972989],[.96150699,-.22954886,-.15103517,.20257531,.96353862,-.17480441,.18565437,.13747966,.97295005],[.96142675,-.22995807,-.15092346,.20294143,.96340468,-.17511765,.18567008,.13773417,.97291105],[.96134666,-.23036597,-.15081156,.20330631,.9632708,-.17543065,.18568563,.13798873,.97287202],[.96126671,-.23077256,-.15069949,.20366994,.96313696,-.1757434,.185701,.13824333,.97283293],[.96118692,-.23117782,-.15058724,.20403233,.96300318,-.17605591,.18571621,.13849797,.97279381],[.96110729,-.23158176,-.15047481,.20439345,.96286946,-.17636816,.18573125,.13875266,.97275465],[.96102781,-.23198436,-.15036221,.20475332,.96273579,-.17668016,.18574611,.13900738,.97271544],[.96094851,-.23238562,-.15024943,.20511191,.96260219,-.17699189,.1857608,.13926215,.97267619],[.96086937,-.23278553,-.15013646,.20546922,.96246866,-.17730337,.1857753,.13951696,.97263691],[.9607904,-.23318408,-.15002332,.20582524,.96233519,-.17761459,.18578962,.13977181,.97259758],[.9607116,-.23358127,-.14991,.20617998,.96220181,-.17792554,.18580375,.14002669,.97255822],[.96063299,-.23397708,-.1497965,.20653342,.9620685,-.17823623,.18581768,.14028162,.97251882],[.96055455,-.23437151,-.14968282,.20688555,.96193527,-.17854665,.18583143,.14053658,.97247938],[.96047631,-.23476455,-.14956895,.20723637,.96180213,-.17885679,.18584497,.14079158,.97243991],[.96039825,-.2351562,-.1494549,.20758587,.96166908,-.17916666,.18585831,.14104662,.9724004],[.96032038,-.23554644,-.14934067,.20793405,.96153612,-.17947625,.18587144,.14130169,.97236086],[.96024272,-.23593527,-.14922625,.2082809,.96140326,-.17978556,.18588436,.1415568,.97232128],[.96016525,-.23632269,-.14911165,.20862641,.96127049,-.18009459,.18589706,.14181194,.97228168],[.96008798,-.23670868,-.14899685,.20897058,.96113783,-.18040333,.18590955,.14206711,.97224204],[.96001093,-.23709324,-.14888187,.2093134,.96100528,-.18071179,.18592181,.14232232,.97220237],[.95993408,-.23747636,-.1487667,.20965486,.96087284,-.18101995,.18593384,.14257756,.97216267],[.95985746,-.23785804,-.14865133,.20999496,.96074052,-.18132782,.18594564,.14283283,.97212294],[.95978105,-.23823826,-.14853577,.2103337,.96060831,-.1816354,.1859572,.14308813,.97208318],[.95970486,-.23861702,-.14842002,.21067106,.96047622,-.18194267,.18596851,.14334346,.9720434],[.9596289,-.23899431,-.14830406,.21100704,.96034426,-.18224965,.18597958,.14359883,.97200359],[.95955317,-.23937013,-.14818791,.21134163,.96021243,-.18255632,.1859904,.14385422,.97196375],[.95947767,-.23974447,-.14807155,.21167484,.96008073,-.18286268,.18600096,.14410964,.97192389],[.95940242,-.24011731,-.14795499,.21200664,.95994916,-.18316874,.18601125,.14436509,.97188401],[.9593274,-.24048867,-.14783822,.21233705,.95981774,-.18347448,.18602128,.14462056,.97184411],[.95925263,-.24085852,-.14772124,.21266605,.95968646,-.18377991,.18603103,.14487606,.97180419],[.95917811,-.24122686,-.14760405,.21299363,.95955533,-.18408501,.18604051,.14513159,.97176425],[.95910384,-.24159369,-.14748665,.21331979,.95942434,-.1843898,.1860497,.14538715,.97172429],[.95902983,-.24195899,-.14736903,.21364453,.95929351,-.18469427,.18605859,.14564273,.97168431],[.95895608,-.24232277,-.14725119,.21396784,.95916284,-.18499841,.1860672,.14589833,.97164432],[.95888259,-.24268501,-.14713313,.21428971,.95903233,-.18530222,.1860755,.14615396,.97160431],[.95880938,-.2430457,-.14701484,.21461014,.95890198,-.1856057,.18608349,.14640961,.97156429],[.95873643,-.24340485,-.14689632,.21492913,.9587718,-.18590884,.18609117,.14666528,.97152425],[.95866376,-.24376245,-.14677757,.21524666,.9586418,-.18621165,.18609852,.14692098,.97148421],[.95859138,-.24411848,-.14665859,.21556274,.95851197,-.18651411,.18610555,.14717669,.97144415],[.95851927,-.24447294,-.14653937,.21587736,.95838231,-.18681624,.18611225,.14743243,.97140409],[.95844746,-.24482583,-.1464199,.21619051,.95825284,-.18711801,.18611861,.14768819,.97136402],[.95837593,-.24517714,-.14630019,.21650219,.95812356,-.18741944,.18612462,.14794397,.97132395],[.9583047,-.24552686,-.14618023,.2168124,.95799446,-.18772052,.18613028,.14819977,.97128386],[.95823377,-.24587499,-.14606002,.21712113,.95786556,-.18802124,.18613558,.14845559,.97124378],[.95816314,-.24622152,-.14593955,.21742837,.95773685,-.18832161,.18614052,.14871142,.9712037],[.95809282,-.24656644,-.14581882,.21773412,.95760834,-.18862161,.18614508,.14896728,.97116361],[.95802282,-.24690976,-.14569783,.21803838,.95748004,-.18892125,.18614926,.14922315,.97112353],[.95795312,-.24725145,-.14557656,.21834115,.95735194,-.18922053,.18615306,.14947904,.97108344],[.95788375,-.24759153,-.14545503,.21864241,.95722405,-.18951943,.18615646,.14973495,.97104337],[.95781469,-.24792997,-.14533321,.21894216,.95709637,-.18981797,.18615946,.14999087,.97100329],[.95774597,-.24826678,-.14521112,.21924041,.95696891,-.19011613,.18616205,.15024681,.97096323],[.95767757,-.24860195,-.14508874,.21953714,.95684167,-.19041391,.18616422,.15050276,.97092317],[.95760951,-.24893548,-.14496607,.21983235,.95671466,-.19071131,.18616597,.15075873,.97088312],[.95754178,-.24926735,-.1448431,.22012605,.95658787,-.19100832,.18616729,.15101471,.97084309],[.9574744,-.24959757,-.14471983,.22041821,.9564613,-.19130495,.18616817,.15127071,.97080306],[.95740736,-.24992612,-.14459626,.22070885,.95633498,-.1916012,.1861686,.15152672,.97076305],[.95734067,-.25025301,-.14447237,.22099796,.95620888,-.19189704,.18616858,.15178275,.97072306],[.95727434,-.25057823,-.14434818,.22128552,.95608303,-.1921925,.1861681,.15203878,.97068308],[.95720836,-.25090177,-.14422366,.22157156,.95595742,-.19248755,.18616714,.15229483,.97064313],[.95714274,-.25122362,-.14409882,.22185604,.95583205,-.19278221,.18616571,.1525509,.97060319],[.95707749,-.25154379,-.14397364,.22213899,.95570694,-.19307646,.18616379,.15280697,.97056328],[.9570126,-.25186226,-.14384813,.22242038,.95558207,-.1933703,.18616138,.15306306,.97052338],[.95694808,-.25217904,-.14372228,.22270022,.95545747,-.19366374,.18615846,.15331916,.97048352],[.95688395,-.25249411,-.14359609,.22297851,.95533311,-.19395676,.18615503,.15357526,.97044368],[.95682019,-.25280748,-.14346954,.22325524,.95520903,-.19424936,.18615109,.15383138,.97040387],[.95675681,-.25311914,-.14334263,.22353041,.9550852,-.19454155,.18614661,.15408751,.9703641],[.95669382,-.25342908,-.14321536,.22380402,.95496164,-.19483331,.1861416,.15434365,.97032435],[.95663122,-.2537373,-.14308771,.22407607,.95483836,-.19512465,.18613604,.1545998,.97028464],[.95656901,-.25404379,-.1429597,.22434655,.95471534,-.19541557,.18612993,.15485596,.97024496],[.9565072,-.25434856,-.1428313,.22461546,.9545926,-.19570605,.18612325,.15511213,.97020532],[.9564458,-.25465159,-.14270251,.22488279,.95447015,-.1959961,.18611601,.15536831,.97016572],[.95638479,-.25495288,-.14257333,.22514856,.95434797,-.19628571,.18610818,.15562449,.97012616],[.9563242,-.25525243,-.14244375,.22541275,.95422608,-.19657489,.18609976,.15588069,.97008664],[.95626402,-.25555024,-.14231376,.22567536,.95410447,-.19686362,.18609075,.15613689,.97004717],[.95620425,-.2558463,-.14218336,.22593639,.95398316,-.19715191,.18608112,.1563931,.97000774],[.9561449,-.2561406,-.14205255,.22619585,.95386214,-.19743975,.18607088,.15664932,.96996836],[.95608597,-.25643315,-.1419213,.22645372,.95374142,-.19772715,.18606002,.15690554,.96992903],[.95602747,-.25672394,-.14178963,.22671,.95362099,-.19801408,.18604852,.15716178,.96988975],[.9559694,-.25701296,-.14165751,.22696471,.95350087,-.19830057,.18603637,.15741802,.96985052],[.95591176,-.25730022,-.14152495,.22721783,.95338105,-.19858659,.18602358,.15767427,.96981135],[.95585455,-.2575857,-.14139193,.22746936,.95326154,-.19887215,.18601012,.15793052,.96977223],[.95579779,-.25786941,-.14125846,.2277193,.95314233,-.19915725,.18599598,.15818678,.96973318],[.95574147,-.25815135,-.14112452,.22796766,.95302344,-.19944189,.18598117,.15844305,.96969418],[.95568559,-.2584315,-.14099011,.22821443,.95290486,-.19972605,.18596566,.15869933,.96965525],[.95563016,-.25870987,-.14085522,.2284596,.9527866,-.20000974,.18594946,.15895561,.96961637],[.95557519,-.25898646,-.14071984,.22870319,.95266866,-.20029295,.18593254,.1592119,.96957757],[.95552067,-.25926126,-.14058396,.22894519,.95255105,-.20057569,.18591491,.1594682,.96953883],[.95546661,-.25953427,-.14044759,.22918559,.95243375,-.20085795,.18589655,.1597245,.96950016],[.95541301,-.25980548,-.14031071,.22942441,.95231678,-.20113972,.18587744,.15998081,.96946156],[.95535987,-.2600749,-.14017331,.22966163,.95220014,-.20142101,.18585759,.16023712,.96942304],[.95530721,-.26034252,-.14003538,.22989727,.95208383,-.20170181,.18583698,.16049344,.96938458],[.95525501,-.26060835,-.13989693,.23013131,.95196786,-.20198212,.1858156,.16074977,.96934621],[.95520329,-.26087237,-.13975793,.23036377,.95185222,-.20226193,.18579345,.1610061,.96930791],[.95515205,-.26113458,-.1396184,.23059463,.95173692,-.20254125,.18577051,.16126244,.9692697],[.95510128,-.26139499,-.1394783,.23082391,.95162195,-.20282008,.18574677,.16151879,.96923156],[.955051,-.26165359,-.13933765,.2310516,.95150733,-.20309839,.18572222,.16177514,.96919351],[.95500121,-.26191038,-.13919643,.2312777,.95139305,-.20337621,.18569686,.1620315,.96915555],[.9549519,-.26216537,-.13905463,.23150221,.95127912,-.20365352,.18567067,.16228786,.96911767],[.95490308,-.26241854,-.13891225,.23172514,.95116554,-.20393032,.18564364,.16254423,.96907988],[.95485476,-.26266989,-.13876928,.23194648,.95105231,-.20420661,.18561577,.16280061,.96904218],[.95480694,-.26291943,-.1386257,.23216624,.95093942,-.20448239,.18558704,.163057,.96900457],[.95475961,-.26316716,-.13848153,.23238442,.95082689,-.20475765,.18555745,.16331339,.96896706],[.95471279,-.26341307,-.13833673,.23260102,.95071472,-.2050324,.18552698,.16356979,.96892965],[.95466647,-.26365716,-.13819131,.23281605,.9506029,-.20530662,.18549562,.16382619,.96889233],[.95462065,-.26389944,-.13804526,.23302949,.95049144,-.20558032,.18546337,.1640826,.96885512],[.95457535,-.26413989,-.13789858,.23324136,.95038035,-.2058535,.18543022,.16433902,.968818],[.95453056,-.26437853,-.13775124,.23345166,.95026961,-.20612615,.18539615,.16459545,.96878099],[.95448628,-.26461534,-.13760326,.23366039,.95015924,-.20639827,.18536115,.16485189,.96874408],[.95444252,-.26485034,-.13745461,.23386755,.95004923,-.20666986,.18532522,.16510833,.96870728],[.95439928,-.26508351,-.13730528,.23407314,.94993959,-.20694091,.18528835,.16536478,.96867059],[.95435656,-.26531487,-.13715528,.23427718,.94983031,-.20721143,.18525052,.16562124,.96863401],[.95431437,-.2655444,-.1370046,.23447965,.94972141,-.20748142,.18521173,.16587771,.96859754],[.9542727,-.26577212,-.13685322,.23468056,.94961288,-.20775086,.18517196,.16613418,.96856119],[.95423155,-.26599801,-.13670113,.23487992,.94950471,-.20801976,.18513121,.16639067,.96852495],[.95419094,-.26622209,-.13654834,.23507773,.94939693,-.20828812,.18508947,.16664716,.96848883],[.95415086,-.26644435,-.13639482,.23527398,.94928951,-.20855593,.18504673,.16690367,.96845283],[.95411131,-.26666479,-.13624058,.2354687,.94918247,-.2088232,.18500297,.16716018,.96841694],[.9540723,-.26688341,-.13608561,.23566187,.94907581,-.20908991,.18495819,.16741671,.96838118],[.95403383,-.26710021,-.13592989,.2358535,.94896953,-.20935608,.18491238,.16767324,.96834555],[.95399589,-.2673152,-.13577342,.23604359,.94886362,-.20962169,.18486553,.16792979,.96831004],[.9539585,-.26752838,-.13561619,.23623216,.94875809,-.20988675,.18481762,.16818634,.96827465],[.95392165,-.26773974,-.1354582,.23641919,.94865295,-.21015125,.18476866,.16844291,.9682394],[.95388534,-.2679493,-.13529943,.23660471,.94854818,-.2104152,.18471863,.16869949,.96820427],[.95384958,-.26815704,-.13513987,.2367887,.9484438,-.21067858,.18466752,.16895608,.96816928],[.95381437,-.26836297,-.13497953,.23697118,.9483398,-.21094141,.18461532,.16921269,.96813442],[.9537797,-.2685671,-.13481838,.23715215,.94823619,-.21120367,.18456202,.1694693,.96809969],[.95374559,-.26876942,-.13465643,.23733161,.94813296,-.21146537,.18450762,.16972593,.9680651],[.95371203,-.26896994,-.13449366,.23750957,.94803011,-.2117265,.1844521,.16998258,.96803065],[.95367902,-.26916866,-.13433007,.23768603,.94792765,-.21198707,.18439546,.17023924,.96799634],[.95364656,-.26936558,-.13416565,.23786099,.94782558,-.21224707,.18433769,.17049591,.96796217],[.95361466,-.2695607,-.13400039,.23803447,.94772389,-.2125065,.18427877,.1707526,.96792814],[.95358332,-.26975403,-.13383428,.23820647,.94762259,-.21276536,.1842187,.17100931,.96789425],[.95355254,-.26994557,-.13366731,.23837699,.94752168,-.21302365,.18415747,.17126603,.96786051],[.95352231,-.27013532,-.13349949,.23854604,.94742116,-.21328136,.18409507,.17152276,.96782692],[.95349264,-.27032329,-.13333079,.23871361,.94732102,-.2135385,.18403149,.17177952,.96779347],[.95346354,-.27050947,-.13316122,.23887973,.94722127,-.21379507,.18396673,.17203629,.96776018],[.95343499,-.27069387,-.13299076,.23904439,.94712192,-.21405106,.18390077,.17229308,.96772703],[.95340701,-.2708765,-.1328194,.2392076,.94702294,-.21430648,.18383361,.17254989,.96769403],[.95337959,-.27105735,-.13264714,.23936936,.94692436,-.21456131,.18376524,.17280672,.96766119],[.95335274,-.27123644,-.13247398,.23952969,.94682617,-.21481557,.18369564,.17306356,.9676285],[.95332644,-.27141375,-.1322999,.23968858,.94672837,-.21506925,.18362482,.17332043,.96759597],[.95330072,-.27158931,-.13212489,.23984604,.94663095,-.21532235,.18355276,.17357732,.96756359],[.95327556,-.27176311,-.13194896,.24000208,.94653393,-.21557487,.18347946,.17383423,.96753137],[.95325096,-.27193515,-.13177208,.24015671,.94643729,-.21582681,.18340491,.17409117,.96749931],[.95322693,-.27210544,-.13159426,.24030993,.94634104,-.21607817,.18332909,.17434812,.9674674],[.95320347,-.27227398,-.13141548,.24046175,.94624518,-.21632894,.18325201,.1746051,.96743566],[.95318057,-.27244078,-.13123575,.24061217,.9461497,-.21657913,.18317365,.17486211,.96740408],[.95315824,-.27260585,-.13105504,.2407612,.94605462,-.21682874,.18309401,.17511913,.96737266],[.95313647,-.27276918,-.13087336,.24090885,.94595992,-.21707777,.18301308,.17537619,.96734141],[.95311528,-.27293078,-.1306907,.24105512,.94586561,-.21732621,.18293085,.17563327,.96731032],[.95309465,-.27309065,-.13050705,.24120003,.94577168,-.21757407,.18284732,.17589037,.9672794],[.95307458,-.27324881,-.13032241,.24134357,.94567814,-.21782134,.18276247,.17614751,.96724864],[.95305508,-.27340525,-.13013676,.24148576,.94558498,-.21806803,.18267631,.17640467,.96721805],[.95303615,-.27355998,-.1299501,.2416266,.94549221,-.21831414,.18258882,.17666186,.96718763],[.95301779,-.27371301,-.12976243,.24176611,.94539982,-.21855966,.1825,.17691908,.96715738],[.95299999,-.27386434,-.12957373,.24190428,.94530782,-.21880459,.18240983,.17717634,.96712729],[.95298275,-.27401397,-.129384,.24204112,.94521619,-.21904895,.18231832,.17743362,.96709738],[.95296608,-.27416192,-.12919324,.24217665,.94512495,-.21929272,.18222546,.17769093,.96706764],[.95294997,-.27430818,-.12900143,.24231087,.94503409,-.2195359,.18213125,.17794828,.96703806],[.95293443,-.27445276,-.12880858,.24244378,.94494361,-.2197785,.18203566,.17820566,.96700867],[.95291945,-.27459568,-.12861467,.2425754,.9448535,-.22002052,.18193871,.17846308,.96697944],[.95290503,-.27473692,-.1284197,.24270574,.94476378,-.22026196,.18184038,.17872053,.96695039],[.95289118,-.27487651,-.12822367,.24283479,.94467443,-.22050281,.18174066,.17897802,.96692151],[.95287788,-.27501445,-.12802656,.24296258,.94458545,-.22074309,.18163956,.17923554,.9668928],[.95286514,-.27515073,-.12782837,.2430891,.94449685,-.22098278,.18153707,.1794931,.96686427],[.95285296,-.27528538,-.1276291,.24321437,.94440862,-.22122189,.18143317,.1797507,.96683592],[.95284134,-.27541839,-.12742873,.2433384,.94432076,-.22146042,.18132787,.18000834,.96680774],[.95283028,-.27554978,-.12722728,.24346118,.94423328,-.22169838,.18122117,.18026602,.96677973],[.95281977,-.27567954,-.12702472,.24358274,.94414616,-.22193575,.18111304,.18052374,.9667519],[.95280981,-.27580769,-.12682105,.24370308,.94405941,-.22217255,.1810035,.18078151,.96672425],[.95280041,-.27593423,-.12661627,.24382221,.94397302,-.22240877,.18089254,.18103931,.96669678],[.95279156,-.27605917,-.12641038,.24394013,.943887,-.22264442,.18078015,.18129716,.96666948],[.95278326,-.27618251,-.12620336,.24405685,.94380135,-.2228795,.18066632,.18155506,.96664235],[.9527755,-.27630427,-.12599522,.2441724,.94371605,-.223114,.18055106,.181813,.96661541],[.95276829,-.27642445,-.12578594,.24428676,.94363112,-.22334793,.18043436,.18207098,.96658864],[.95276163,-.27654305,-.12557553,.24439996,.94354654,-.22358129,.18031621,.18232902,.96656205],[.95275551,-.27666009,-.12536398,.24451199,.94346232,-.22381408,.18019661,.1825871,.96653563],[.95274993,-.27677558,-.12515128,.24462288,.94337845,-.2240463,.18007556,.18284523,.9665094],[.9527449,-.27688951,-.12493743,.24473263,.94329494,-.22427796,.17995306,.18310342,.96648333],[.9527404,-.2770019,-.12472243,.24484124,.94321178,-.22450905,.1798291,.18336165,.96645745],[.95273643,-.27711276,-.12450627,.24494873,.94312896,-.22473958,.17970367,.18361994,.96643174],[.952733,-.27722209,-.12428894,.24505511,.9430465,-.22496955,.17957678,.18387828,.96640621],[.9527301,-.2773299,-.12407045,.24516038,.94296438,-.22519896,.17944842,.18413667,.96638085],[.95272774,-.2774362,-.12385079,.24526456,.9428826,-.22542782,.17931859,.18439512,.96635567],[.95272589,-.27754099,-.12362996,.24536765,.94280116,-.22565611,.17918729,.18465363,.96633066],[.95272458,-.27764429,-.12340795,.24546967,.94272007,-.22588386,.17905451,.18491219,.96630583],[.95272379,-.27774611,-.12318475,.24557062,.94263931,-.22611105,.17892026,.18517082,.96628118],[.95272352,-.27784645,-.12296038,.24567051,.94255889,-.22633769,.17878452,.1854295,.96625669],[.95272376,-.27794532,-.12273482,.24576935,.94247879,-.22656378,.1786473,.18568824,.96623238],[.95272452,-.27804272,-.12250806,.24586716,.94239903,-.22678933,.1785086,.18594705,.96620825],[.9527258,-.27813868,-.12228012,.24596394,.9423196,-.22701434,.17836842,.18620592,.96618428],[.95272759,-.27823319,-.12205097,.2460597,.9422405,-.2272388,.17822675,.18646485,.96616049],[.95272988,-.27832626,-.12182063,.24615445,.94216171,-.22746273,.17808359,.18672385,.96613686],[.95273268,-.27841791,-.12158909,.2462482,.94208325,-.22768612,.17793894,.18698291,.96611341],[.95273598,-.27850814,-.12135635,.24634096,.94200511,-.22790897,.1777928,.18724204,.96609013],[.95273978,-.27859696,-.12112239,.24643274,.94192729,-.2281313,.17764518,.18750124,.96606701],[.95274408,-.27868439,-.12088724,.24652355,.94184978,-.2283531,.17749606,.18776051,.96604407],[.95274888,-.27877042,-.12065087,.2466134,.94177258,-.22857437,.17734545,.18801985,.96602129],[.95275416,-.27885507,-.12041329,.2467023,.94169569,-.22879511,.17719335,.18827926,.96599867],[.95275993,-.27893835,-.12017449,.24679026,.94161911,-.22901534,.17703976,.18853875,.96597622],[.95276619,-.27902026,-.11993449,.24687729,.94154283,-.22923505,.17688468,.18879831,.96595394],[.95277293,-.27910082,-.11969326,.2469634,.94146685,-.22945425,.17672811,.18905794,.96593181],[.95278015,-.27918004,-.11945082,.24704861,.94139117,-.22967293,.17657005,.18931765,.96590985],[.95278784,-.27925793,-.11920716,.24713291,.94131578,-.22989111,.17641049,.18957744,.96588805],[.952796,-.27933448,-.11896228,.24721632,.94124069,-.23010878,.17624946,.18983731,.96586641],[.95280464,-.27940973,-.11871618,.24729885,.94116589,-.23032595,.17608693,.19009725,.96584493],[.95281373,-.27948366,-.11846886,.24738051,.94109138,-.23054261,.17592291,.19035728,.9658236],[.9528233,-.2795563,-.11822031,.24746131,.94101715,-.23075879,.17575742,.1906174,.96580243],[.95283331,-.27962766,-.11797055,.24754126,.94094321,-.23097447,.17559043,.19087759,.96578142],[.95284379,-.27969773,-.11771956,.24762037,.94086954,-.23118966,.17542197,.19113787,.96576055],[.95285471,-.27976654,-.11746735,.24769865,.94079615,-.23140437,.17525203,.19139824,.96573984],[.95286609,-.2798341,-.11721391,.24777612,.94072303,-.23161859,.17508061,.19165869,.96571928],[.9528779,-.2799004,-.11695926,.24785277,.94065019,-.23183234,.17490771,.19191923,.96569887],[.95289016,-.27996547,-.11670338,.24792863,.94057761,-.23204561,.17473334,.19217987,.9656786],[.95290285,-.28002932,-.11644628,.24800369,.94050529,-.23225841,.1745575,.19244059,.96565848],[.95291598,-.28009194,-.11618795,.24807798,.94043324,-.23247074,.17438019,.19270141,.9656385],[.95292953,-.28015336,-.11592841,.2481515,.94036144,-.2326826,.17420142,.19296232,.96561867],[.95294351,-.28021359,-.11566765,.24822426,.9402899,-.23289401,.17402119,.19322332,.96559897],[.95295792,-.28027262,-.11540567,.24829628,.94021861,-.23310496,.17383949,.19348442,.96557942],[.95297273,-.28033049,-.11514247,.24836755,.94014757,-.23331546,.17365635,.19374562,.96556],[.95298796,-.28038718,-.11487805,.2484381,.94007677,-.23352552,.17347175,.19400692,.96554071],[.95300361,-.28044273,-.11461242,.24850794,.94000622,-.23373512,.1732857,.19426832,.96552156],[.95301965,-.28049712,-.11434557,.24857706,.93993591,-.23394429,.17309821,.19452982,.96550254],[.9530361,-.28055039,-.11407752,.24864549,.93986583,-.23415302,.17290928,.19479142,.96548365],[.95305294,-.28060253,-.11380825,.24871324,.93979599,-.23436132,.17271892,.19505313,.96546489],[.95307017,-.28065356,-.11353777,.2487803,.93972637,-.2345692,.17252712,.19531494,.96544625],[.9530878,-.28070349,-.11326609,.2488467,.93965698,-.23477665,.1723339,.19557686,.96542774],[.9531058,-.28075232,-.11299321,.24891245,.93958782,-.23498368,.17213925,.19583889,.96540935],[.95312419,-.28080008,-.11271912,.24897755,.93951887,-.2351903,.17194319,.19610103,.96539107],[.95314295,-.28084676,-.11244384,.24904202,.93945014,-.2353965,.17174572,.19636328,.96537292],[.95316208,-.28089239,-.11216736,.24910586,.93938162,-.23560231,.17154685,.19662564,.96535488],[.95318158,-.28093696,-.11188968,.24916908,.93931331,-.23580771,.17134657,.19688811,.96533695],[.95320144,-.2809805,-.11161082,.2492317,.93924521,-.23601271,.17114489,.1971507,.96531913],[.95322166,-.28102301,-.11133076,.24929373,.93917731,-.23621733,.17094183,.19741341,.96530142],[.95324223,-.28106451,-.11104953,.24935517,.9391096,-.23642155,.17073738,.19767624,.96528382],[.95326315,-.281105,-.11076711,.24941604,.9390421,-.2366254,.17053156,.19793918,.96526632],[.95328441,-.2811445,-.11048351,.24947635,.93897478,-.23682887,.17032437,.19820224,.96524892],[.95330601,-.28118302,-.11019874,.2495361,.93890765,-.23703196,.17011581,.19846543,.96523162],[.95332795,-.28122056,-.10991281,.24959531,.93884071,-.23723469,.16990589,.19872874,.96521442],[.95335021,-.28125714,-.1096257,.24965398,.93877395,-.23743706,.16969462,.19899218,.96519731],[.9533728,-.28129278,-.10933743,.24971214,.93870737,-.23763906,.16948201,.19925574,.96518029],[.95339571,-.28132747,-.10904801,.24976977,.93864096,-.23784072,.16926806,.19951943,.96516337],[.95341894,-.28136124,-.10875743,.24982691,.93857472,-.23804203,.16905277,.19978325,.96514653],[.95344248,-.28139409,-.1084657,.24988355,.93850865,-.23824299,.16883617,.20004719,.96512977],[.95346632,-.28142604,-.10817283,.24993971,.93844274,-.23844362,.16861825,.20031128,.96511309],[.95349047,-.28145709,-.10787881,.2499954,.93837699,-.23864392,.16839902,.20057549,.96509649],[.95351491,-.28148726,-.10758366,.25005063,.9383114,-.23884388,.16817849,.20083984,.96507997],[.95353964,-.28151655,-.10728738,.2501054,.93824596,-.23904353,.16795667,.20110433,.96506353],[.95356466,-.28154499,-.10698998,.25015973,.93818067,-.23924286,.16773356,.20136895,.96504715],[.95358996,-.28157258,-.10669145,.25021363,.93811552,-.23944188,.16750917,.20163372,.96503084],[.95361554,-.28159933,-.10639181,.25026711,.93805051,-.23964059,.16728352,.20189862,.96501459],[.95364139,-.28162526,-.10609106,.25032017,.93798564,-.23983901,.16705661,.20216367,.96499841],[.95366751,-.28165037,-.1057892,.25037283,.93792091,-.24003713,.16682845,.20242887,.96498229],[.95369389,-.28167467,-.10548625,.2504251,.9378563,-.24023495,.16659904,.2026942,.96496623],[.95372052,-.28169819,-.1051822,.25047698,.93779182,-.2404325,.16636841,.20295969,.96495022],[.95374741,-.28172092,-.10487706,.25052849,.93772746,-.24062976,.16613654,.20322532,.96493426],[.95377455,-.28174289,-.10457085,.25057964,.93766322,-.24082676,.16590346,.20349111,.96491834],[.95380192,-.2817641,-.10426355,.25063044,.93759909,-.24102348,.16566918,.20375704,.96490248],[.95382954,-.28178456,-.10395519,.25068089,.93753508,-.24121995,.16543369,.20402313,.96488665],[.95385738,-.28180428,-.10364577,.25073101,.93747117,-.24141616,.16519702,.20428937,.96487087],[.95388545,-.28182329,-.10333528,.25078081,.93740737,-.24161211,.16495918,.20455577,.96485512],[.95391374,-.28184158,-.10302375,.2508303,.93734366,-.24180783,.16472016,.20482233,.96483941],[.95394225,-.28185917,-.10271117,.25087948,.93728005,-.2420033,.16447998,.20508905,.96482372],[.95397097,-.28187607,-.10239756,.25092836,.93721653,-.24219854,.16423866,.20535593,.96480807],[.9539999,-.2818923,-.10208292,.25097696,.9371531,-.24239356,.1639962,.20562297,.96479243],[.95402903,-.28190786,-.10176725,.25102529,.93708975,-.24258835,.16375261,.20589018,.96477682],[.95405835,-.28192276,-.10145056,.25107335,.93702648,-.24278293,.1635079,.20615755,.96476123],[.95408787,-.28193703,-.10113287,.25112116,.93696328,-.2429773,.16326208,.20642509,.96474565],[.95411756,-.28195066,-.10081417,.25116873,.93690016,-.24317146,.16301517,.20669279,.96473009],[.95414744,-.28196368,-.10049448,.25121605,.93683711,-.24336543,.16276717,.20696067,.96471453],[.9541775,-.28197609,-.1001738,.25126316,.93677411,-.2435592,.16251809,.20722872,.96469898],[.95420772,-.2819879,-.09985214,.25131004,.93671118,-.24375279,.16226795,.20749695,.96468343],[.95423811,-.28199913,-.0995295,.25135672,.93664831,-.2439462,.16201675,.20776535,.96466789],[.95426866,-.28200979,-.0992059,.25140321,.93658548,-.24413943,.16176451,.20803393,.96465233],[.95429936,-.28201988,-.09888134,.2514495,.93652271,-.2443325,.16151124,.20830269,.96463678],[.95433021,-.28202943,-.09855583,.25149562,.93645997,-.24452541,.16125695,.20857162,.96462121],[.9543612,-.28203844,-.09822937,.25154157,.93639728,-.24471816,.16100164,.20884074,.96460563],[.95439234,-.28204693,-.09790198,.25158737,.93633462,-.24491076,.16074534,.20911005,.96459003],[.9544236,-.2820549,-.09757367,.25163301,.93627199,-.24510321,.16048805,.20937954,.96457441],[.954455,-.28206237,-.09724443,.25167852,.93620939,-.24529553,.16022979,.20964921,.96455877],[.95448651,-.28206936,-.09691428,.2517239,.93614681,-.24548772,.15997056,.20991908,.9645431],[.95451814,-.28207586,-.09658323,.25176915,.93608426,-.24567979,.15971038,.21018913,.96452741],[.95454989,-.2820819,-.09625129,.2518143,.93602171,-.24587173,.15944926,.21045938,.96451168],[.95458174,-.28208748,-.09591845,.25185935,.93595918,-.24606356,.15918721,.21072983,.96449592],[.9546137,-.28209263,-.09558474,.2519043,.93589666,-.24625529,.15892424,.21100046,.96448011],[.95464575,-.28209734,-.09525016,.25194918,.93583414,-.24644692,.15866037,.2112713,.96446427],[.95467789,-.28210163,-.09491471,.25199398,.93577161,-.24663845,.1583956,.21154234,.96444838],[.95471011,-.28210552,-.09457841,.25203872,.93570908,-.24682989,.15812995,.21181357,.96443244],[.95474242,-.28210901,-.09424126,.25208341,.93564654,-.24702126,.15786344,.21208501,.96441645],[.9547748,-.28211212,-.09390328,.25212806,.93558399,-.24721255,.15759606,.21235666,.9644004],[.95480725,-.28211486,-.09356447,.25217267,.93552142,-.24740377,.15732785,.21262851,.96438429],[.95483977,-.28211725,-.09322484,.25221726,.93545882,-.24759493,.1570588,.21290057,.96436813],[.95487235,-.28211928,-.0928844,.25226183,.9353962,-.24778603,.15678893,.21317284,.96435189],[.95490498,-.28212098,-.09254315,.2523064,.93533355,-.24797708,.15651825,.21344532,.96433559],[.95493766,-.28212236,-.09220111,.25235097,.93527086,-.24816809,.15624678,.21371801,.96431922],[.95497038,-.28212343,-.09185828,.25239556,.93520814,-.24835906,.15597452,.21399092,.96430277],[.95500314,-.28212419,-.09151468,.25244017,.93514537,-.24855,.1557015,.21426405,.96428624],[.95503594,-.28212468,-.09117031,.25248482,.93508255,-.24874092,.15542772,.2145374,.96426964],[.95506876,-.28212488,-.09082518,.25252951,.93501968,-.24893182,.15515319,.21481097,.96425294],[.95510161,-.28212483,-.09047929,.25257425,.93495675,-.24912271,.15487793,.21508476,.96423616],[.95513447,-.28212453,-.09013267,.25261905,.93489376,-.24931359,.15460195,.21535877,.96421929],[.95516734,-.28212398,-.08978531,.25266392,.93483071,-.24950447,.15432526,.21563302,.96420232],[.95520023,-.28212321,-.08943723,.25270888,.93476759,-.24969536,.15404788,.21590749,.96418526],[.95523311,-.28212223,-.08908843,.25275392,.9347044,-.24988627,.15376982,.21618219,.96416809],[.95526599,-.28212105,-.08873893,.25279907,.93464112,-.25007719,.15349109,.21645712,.96415082],[.95529887,-.28211967,-.08838872,.25284432,.93457777,-.25026814,.1532117,.21673229,.96413344],[.95533172,-.28211812,-.08803783,.2528897,.93451433,-.25045913,.15293167,.21700769,.96411595],[.95536457,-.28211641,-.08768625,.2529352,.93445079,-.25065015,.15265101,.21728333,.96409835],[.95539738,-.28211454,-.08733401,.25298085,.93438716,-.25084122,.15236973,.21755922,.96408063],[.95543017,-.28211253,-.0869811,.25302664,.93432344,-.25103234,.15208785,.21783534,.96406278],[.95546292,-.2821104,-.08662753,.25307259,.9342596,-.25122352,.15180537,.21811171,.96404482],[.95549563,-.28210814,-.08627332,.2531187,.93419566,-.25141477,.15152232,.21838832,.96402673],[.9555283,-.28210579,-.08591848,.253165,.93413161,-.25160608,.1512387,.21866518,.9640085],[.95556092,-.28210334,-.085563,.25321148,.93406744,-.25179748,.15095452,.21894229,.96399015],[.95559349,-.28210082,-.0852069,.25325816,.93400314,-.25198895,.15066981,.21921966,.96397166],[.95562599,-.28209822,-.0848502,.25330505,.93393872,-.25218052,.15038456,.21949727,.96395302],[.95565843,-.28209558,-.08449289,.25335215,.93387417,-.25237218,.1500988,.21977515,.96393425],[.9556908,-.28209289,-.08413498,.25339948,.93380949,-.25256395,.14981254,.22005328,.96391533],[.9557231,-.28209017,-.08377649,.25344704,.93374466,-.25275582,.14952579,.22033167,.96389626],[.95575531,-.28208743,-.08341743,.25349485,.93367969,-.25294781,.14923856,.22061032,.96387703],[.95578744,-.28208469,-.08305779,.25354292,.93361457,-.25313992,.14895086,.22088924,.96385766],[.95581948,-.28208196,-.0826976,.25359125,.9335493,-.25333216,.14866272,.22116842,.96383812],[.95585142,-.28207925,-.08233685,.25363986,.93348387,-.25352453,.14837413,.22144788,.96381842],[.95588326,-.28207657,-.08197556,.25368875,.93341828,-.25371704,.14808512,.2217276,.96379856],[.955915,-.28207394,-.08161374,.25373794,.93335252,-.2539097,.1477957,.22200759,.96377853],[.95594663,-.28207136,-.08125138,.25378743,.93328659,-.25410252,.14750587,.22228786,.96375833],[.95597814,-.28206886,-.08088851,.25383724,.93322048,-.25429549,.14721565,.22256841,.96373796],[.95600953,-.28206644,-.08052513,.25388737,.93315419,-.25448862,.14692506,.22284924,.96371741],[.9560408,-.28206411,-.08016124,.25393784,.93308772,-.25468193,.1466341,.22313034,.96369668],[.95607194,-.28206189,-.07979686,.25398865,.93302106,-.25487541,.14634279,.22341173,.96367577],[.95610294,-.28205979,-.079432,.25403982,.9329542,-.25506908,.14605114,.22369341,.96365467],[.9561338,-.28205783,-.07906665,.25409136,.93288714,-.25526293,.14575917,.22397537,.96363338],[.95616452,-.28205601,-.07870083,.25414327,.93281988,-.25545699,.14546688,.22425762,.96361191],[.95619509,-.28205435,-.07833455,.25419556,.93275241,-.25565124,.14517428,.22454016,.96359024],[.9562255,-.28205286,-.07796781,.25424825,.93268473,-.2558457,.1448814,.224823,.96356837],[.95625575,-.28205155,-.07760062,.25430135,.93261683,-.25604037,.14458823,.22510614,.9635463],[.95628584,-.28205044,-.077233,.25435487,.93254871,-.25623527,.1442948,.22538957,.96352403],[.95631576,-.28204954,-.07686493,.25440881,.93248036,-.25643038,.14400111,.2256733,.96350155],[.95634551,-.28204887,-.07649644,.25446319,.93241177,-.25662573,.14370718,.22595734,.96347887],[.95637508,-.28204842,-.07612753,.25451802,.93234296,-.25682132,.14341302,.22624168,.96345597],[.95640446,-.28204823,-.07575821,.2545733,.9322739,-.25701715,.14311864,.22652633,.96343286],[.95643366,-.28204829,-.07538849,.25462905,.93220459,-.25721323,.14282404,.22681129,.96340953],[.95646266,-.28204863,-.07501836,.25468529,.93213503,-.25740956,.14252925,.22709656,.96338599],[.95649146,-.28204925,-.07464784,.25474201,.93206522,-.25760616,.14223428,.22738215,.96336222],[.95652007,-.28205017,-.07427694,.25479923,.93199515,-.25780302,.14193913,.22766805,.96333823],[.95654846,-.28205141,-.07390565,.25485696,.93192481,-.25800015,.14164382,.22795427,.96331401],[.95657664,-.28205296,-.073534,.25491522,.9318542,-.25819756,.14134835,.22824082,.96328956],[.95660461,-.28205486,-.07316197,.254974,.93178332,-.25839525,.14105274,.22852769,.96326488],[.95663236,-.2820571,-.07278959,.25503333,.93171216,-.25859323,.140757,.22881488,.96323996],[.95665988,-.28205971,-.07241685,.25509321,.93164071,-.25879151,.14046114,.2291024,.9632148],[.95668717,-.28206269,-.07204377,.25515366,.93156897,-.25899008,.14016517,.22939026,.96318941],[.95671422,-.28206606,-.07167034,.25521468,.93149694,-.25918896,.13986911,.22967844,.96316377],[.95674104,-.28206983,-.07129657,.25527628,.93142461,-.25938815,.13957295,.22996697,.96313789],[.95676761,-.28207402,-.07092247,.25533849,.93135198,-.25958766,.13927672,.23025583,.96311175],[.95679393,-.28207863,-.07054805,.2554013,.93127903,-.25978749,.13898042,.23054503,.96308537],[.95682,-.28208368,-.0701733,.25546473,.93120578,-.25998764,.13868406,.23083457,.96305874],[.95684581,-.28208918,-.06979824,.25552879,.9311322,-.26018813,.13838765,.23112446,.96303185],[.95687136,-.28209515,-.06942287,.25559348,.9310583,-.26038895,.1380912,.2314147,.9630047],[.95689664,-.2821016,-.0690472,.25565884,.93098408,-.26059012,.13779473,.23170529,.9629773],[.95692165,-.28210854,-.06867122,.25572485,.93090951,-.26079164,.13749824,.23199623,.96294963],[.95694638,-.28211598,-.06829494,.25579154,.93083461,-.2609935,.13720173,.23228752,.9629217],[.95697083,-.28212394,-.06791837,.25585891,.93075937,-.26119573,.13690523,.23257917,.9628935],[.956995,-.28213243,-.06754152,.25592698,.93068378,-.26139832,.13660874,.23287119,.96286503],[.95701888,-.28214146,-.06716437,.25599576,.93060784,-.26160127,.13631226,.23316356,.96283629],[.95704247,-.28215105,-.06678695,.25606525,.93053153,-.2618046,.13601581,.23345631,.96280728],[.95706576,-.28216121,-.06640925,.25613548,.93045487,-.26200831,.1357194,.23374941,.96277799],[.95708874,-.28217195,-.06603128,.25620644,.93037784,-.2622124,.13542302,.23404289,.96274842],[.95711142,-.28218328,-.06565304,.25627816,.93030043,-.26241687,.13512671,.23433675,.96271858],[.95713379,-.28219522,-.06527453,.25635065,.93022264,-.26262174,.13483045,.23463097,.96268845],[.95715585,-.28220777,-.06489576,.25642391,.93014448,-.262827,.13453426,.23492558,.96265804],[.95717758,-.28222097,-.06451673,.25649796,.93006592,-.26303267,.13423815,.23522056,.96262735],[.95719899,-.2822348,-.06413744,.2565728,.92998697,-.26323874,.13394212,.23551593,.96259636],[.95722007,-.2822493,-.0637579,.25664846,.92990762,-.26344522,.13364618,.23581168,.96256509],[.95724082,-.28226446,-.0633781,.25672494,.92982787,-.26365211,.13335034,.23610783,.96253352],[.95726124,-.28228031,-.06299805,.25680225,.92974771,-.26385942,.13305461,.23640436,.96250166],[.95728131,-.28229686,-.06261775,.25688041,.92966714,-.26406716,.13275899,.23670128,.96246951],[.95730104,-.28231411,-.06223721,.25695943,.92958615,-.26427532,.1324635,.2369986,.96243705],[.95732041,-.28233209,-.06185642,.25703931,.92950473,-.26448392,.13216813,.23729632,.9624043],[.95733944,-.2823508,-.06147538,.25712008,.92942289,-.26469295,.13187289,.23759444,.96237125],[.95735811,-.28237025,-.06109411,.25720174,.92934061,-.26490242,.1315778,.23789297,.96233789],[.95737642,-.28239047,-.06071259,.2572843,.9292579,-.26511233,.13128285,.2381919,.96230423],[.95739436,-.28241146,-.06033083,.25736778,.92917474,-.26532269,.13098805,.23849124,.96227026],[.95741193,-.28243323,-.05994883,.25745218,.92909113,-.2655335,.13069341,.23879099,.96223599],[.95742913,-.28245581,-.05956659,.25753753,.92900707,-.26574477,.13039893,.23909115,.9622014],[.95744595,-.28247919,-.05918411,.25762383,.92892255,-.26595649,.13010463,.23939173,.96216651],[.95746239,-.28250339,-.05880139,.25771109,.92883757,-.26616868,.1298105,.23969273,.9621313],[.95747845,-.28252843,-.05841843,.25779932,.92875212,-.26638133,.12951654,.23999415,.96209577],[.95749411,-.28255431,-.05803524,.25788855,.92866619,-.26659445,.12922278,.240296,.96205993],[.95750938,-.28258106,-.0576518,.25797877,.92857979,-.26680805,.1289292,.24059827,.96202377],[.95752426,-.28260867,-.05726812,.25807001,.9284929,-.26702212,.12863581,.24090097,.96198729],[.95753873,-.28263717,-.0568842,.25816227,.92840552,-.26723667,.12834263,.24120411,.96195049],[.9575528,-.28266657,-.05650004,.25825556,.92831765,-.2674517,.12804964,.24150768,.96191337],[.95756645,-.28269687,-.05611563,.2583499,.92822928,-.26766722,.12775686,.24181168,.96187593],[.9575797,-.2827281,-.05573098,.2584453,.9281404,-.26788323,.12746429,.24211613,.96183815],[.95759253,-.28276025,-.05534608,.25854178,.92805102,-.26809972,.12717193,.24242102,.96180006],[.95760494,-.28279336,-.05496093,.25863933,.92796112,-.26831672,.12687979,.24272635,.96176163],[.95761692,-.28282741,-.05457553,.25873799,.9278707,-.2685342,.12658787,.24303214,.96172288],[.95762848,-.28286244,-.05418987,.25883775,.92777976,-.26875219,.12629617,.24333837,.96168379],[.9576396,-.28289844,-.05380396,.25893863,.92768829,-.26897068,.12600469,.24364506,.96164438],[.95765029,-.28293544,-.05341779,.25904064,.92759628,-.26918968,.12571344,.2439522,.96160463],[.95766054,-.28297344,-.05303135,.2591438,.92750374,-.26940918,.12542242,.2442598,.96156454],[.95767035,-.28301245,-.05264466,.25924811,.92741065,-.2696292,.12513164,.24456786,.96152412],[.95767971,-.2830525,-.05225769,.25935359,.92731701,-.26984972,.12484108,.24487639,.96148336],[.95768862,-.28309358,-.05187045,.25946026,.92722282,-.27007076,.12455076,.24518538,.96144227],[.95769707,-.2831357,-.05148293,.25956811,.92712807,-.27029232,.12426067,.24549484,.96140084],[.95770507,-.28317889,-.05109513,.25967717,.92703276,-.27051439,.12397082,.24580477,.96135906],[.95771261,-.28322315,-.05070705,.25978744,.92693687,-.27073699,.12368121,.24611517,.96131695],[.95771968,-.2832685,-.05031867,.25989895,.92684042,-.2709601,.12339184,.24642605,.96127449],[.95772629,-.28331494,-.04993001,.26001169,.92674338,-.27118374,.12310271,.24673742,.96123169],[.95773242,-.28336248,-.04954104,.26012569,.92664576,-.27140791,.12281382,.24704926,.96118855],[.95773808,-.28341114,-.04915177,.26024095,.92654756,-.2716326,.12252516,.24736158,.96114506],[.95774326,-.28346092,-.0487622,.26035749,.92644876,-.27185782,.12223674,.2476744,.96110123],[.95774796,-.28351184,-.0483723,.26047532,.92634936,-.27208358,.12194857,.2479877,.96105705],[.95775217,-.28356391,-.04798209,.26059445,.92624936,-.27230986,.12166063,.24830149,.96101252],[.9577559,-.28361714,-.04759155,.26071489,.92614875,-.27253667,.12137293,.24861578,.96096764],[.95775913,-.28367154,-.04720068,.26083665,.92604753,-.27276402,.12108546,.24893057,.96092241],[.95776187,-.28372712,-.04680946,.26095975,.92594569,-.2729919,.12079823,.24924585,.96087684],[.95776411,-.28378388,-.04641791,.2610842,.92584324,-.27322032,.12051123,.24956163,.96083091],[.95776584,-.28384185,-.046026,.26121001,.92574015,-.27344927,.12022446,.24987792,.96078463],[.95776708,-.28390103,-.04563373,.26133718,.92563644,-.27367876,.11993793,.25019472,.960738],[.9577678,-.28396142,-.0452411,.26146574,.92553208,-.27390879,.11965161,.25051202,.96069101],[.95776801,-.28402304,-.04484809,.2615957,.92542709,-.27413936,.11936553,.25082984,.96064367],[.95776771,-.2840859,-.0444547,.26172706,.92532146,-.27437046,.11907967,.25114817,.96059598],[.95776688,-.28415001,-.04406092,.26185984,.92521517,-.2746021,.11879402,.25146702,.96054793],[.95776554,-.28421538,-.04366674,.26199405,.92510823,-.27483429,.11850859,.25178638,.96049952],[.95776367,-.28428201,-.04327216,.26212969,.92500063,-.27506701,.11822338,.25210627,.96045076],[.95776128,-.28434992,-.04287716,.26226679,.92489237,-.27530026,.11793837,.25242668,.96040164],[.95775836,-.28441912,-.04248175,.26240536,.92478344,-.27553406,.11765357,.25274761,.96035217],[.9577549,-.2844896,-.0420859,.26254539,.92467384,-.2757684,.11736897,.25306907,.96030233],[.9577509,-.28456139,-.04168961,.26268691,.92456356,-.27600327,.11708457,.25339107,.96025214],[.95774637,-.2846345,-.04129287,.26282993,.9244526,-.27623868,.11680036,.25371359,.96020159],[.95774129,-.28470892,-.04089568,.26297446,.92434096,-.27647463,.11651634,.25403665,.96015068],[.95773567,-.28478466,-.04049802,.2631205,.92422863,-.27671112,.11623251,.25436025,.96009941],[.9577295,-.28486175,-.04009988,.26326807,.9241156,-.27694814,.11594885,.25468438,.96004777],[.95772277,-.28494017,-.03970125,.26341719,.92400188,-.27718569,.11566537,.25500906,.95999578],[.9577155,-.28501995,-.03930212,.26356785,.92388746,-.27742378,.11538205,.25533428,.95994343],[.95770766,-.28510109,-.03890249,.26372008,.92377233,-.27766241,.1150989,.25566005,.95989072],[.95769927,-.28518359,-.03850234,.26387387,.92365648,-.27790156,.1148159,.25598636,.95983764],[.95769031,-.28526747,-.03810166,.26402925,.92353993,-.27814124,.11453306,.25631322,.9597842],[.95768079,-.28535273,-.03770044,.26418622,.92342266,-.27838146,.11425035,.25664064,.9597304],[.9576707,-.28543938,-.03729868,.2643448,.92330466,-.2786222,.11396779,.25696861,.95967624],[.95766004,-.28552742,-.03689635,.26450499,.92318594,-.27886347,.11368536,.25729713,.95962171],[.9576488,-.28561687,-.03649345,.2646668,.92306649,-.27910526,.11340305,.25762622,.95956682],[.95763699,-.28570772,-.03608996,.26483025,.9229463,-.27934757,.11312086,.25795586,.95951157],[.9576246,-.28579999,-.03568588,.26499533,.92282538,-.27959041,.11283877,.25828606,.95945595],[.95761163,-.28589368,-.0352812,.26516208,.92270371,-.27983376,.11255679,.25861683,.95939997],[.95759808,-.2859888,-.03487589,.26533048,.9225813,-.28007763,.11227491,.25894817,.95934363],[.95758394,-.28608534,-.03446996,.26550056,.92245814,-.28032202,.11199311,.25928007,.95928692],[.95756921,-.28618333,-.03406338,.26567231,.92233423,-.28056691,.11171139,.25961254,.95922984],[.95755388,-.28628276,-.03365615,.26584576,.92220956,-.28081232,.11142975,.25994558,.95917241],[.95753797,-.28638365,-.03324825,.26602091,.92208413,-.28105823,.11114816,.2602792,.9591146],[.95752146,-.28648598,-.03283967,.26619777,.92195794,-.28130465,.11086663,.26061339,.95905644],[.95750434,-.28658978,-.0324304,.26637634,.92183098,-.28155156,.11058515,.26094816,.95899791],[.95748663,-.28669504,-.03202042,.26655665,.92170325,-.28179898,.1103037,.2612835,.95893901],[.95746831,-.28680177,-.03160973,.26673869,.92157475,-.28204689,.11002228,.26161942,.95887975],[.95744939,-.28690997,-.03119831,.26692247,.92144547,-.2822953,.10974087,.26195593,.95882012],[.95742986,-.28701965,-.03078614,.267108,.92131542,-.28254419,.10945948,.26229302,.95876013],[.95740972,-.2871308,-.03037322,.2672953,.92118457,-.28279357,.10917808,.26263069,.95869978],[.95738896,-.28724345,-.02995952,.26748437,.92105295,-.28304343,.10889668,.26296895,.95863906],[.95736759,-.28735758,-.02954504,.26767521,.92092053,-.28329377,.10861525,.2633078,.95857797],[.95734561,-.28747321,-.02912977,.26786784,.92078732,-.28354459,.1083338,.26364724,.95851652],[.957323,-.28759033,-.02871369,.26806226,.92065332,-.28379588,.1080523,.26398727,.95845471],[.95729977,-.28770895,-.02829678,.26825848,.92051851,-.28404763,.10777075,.26432788,.95839253],[.95727592,-.28782906,-.02787903,.2684565,.92038291,-.28429985,.10748914,.2646691,.95832998],[.95725144,-.28795069,-.02746043,.26865635,.9202465,-.28455253,.10720746,.2650109,.95826707],[.95722634,-.28807381,-.02704097,.26885801,.92010929,-.28480567,.1069257,.26535331,.9582038],[.9572006,-.28819845,-.02662063,.2690615,.91997126,-.28505926,.10664385,.26569631,.95814016],[.95717424,-.28832459,-.02619939,.26926683,.91983243,-.28531329,.10636189,.26603991,.95807615],[.95714724,-.28845225,-.02577725,.26947401,.91969278,-.28556777,.10607981,.2663841,.95801179],[.9571196,-.28858142,-.02535418,.26968303,.91955231,-.28582269,.10579761,.2667289,.95794705],[.95709133,-.2887121,-.02493018,.2698939,.91941103,-.28607804,.10551527,.2670743,.95788196],[.95706241,-.2888443,-.02450523,.27010664,.91926892,-.28633381,.10523279,.26742031,.9578165],[.95703286,-.28897802,-.02407931,.27032125,.91912599,-.28659002,.10495014,.26776691,.95775067],[.95700266,-.28911325,-.02365242,.27053772,.91898223,-.28684664,.10466732,.26811413,.95768448],[.95697182,-.28925,-.02322453,.27075608,.91883765,-.28710368,.10438431,.26846194,.95761793],[.95694033,-.28938826,-.02279564,.27097632,.91869223,-.28736112,.10410111,.26881037,.95755101],[.95690819,-.28952804,-.02236572,.27119845,.91854599,-.28761897,.1038177,.2691594,.95748373],[.9568754,-.28966934,-.02193477,.27142247,.9183989,-.28787722,.10353408,.26950904,.95741609],[.95684196,-.28981216,-.02150277,.2716484,.91825099,-.28813586,.10325022,.26985929,.95734809],[.95680787,-.28995649,-.0210697,.27187622,.91810223,-.28839489,.10296611,.27021015,.95727972],[.95677312,-.29010234,-.02063556,.27210596,.91795263,-.2886543,.10268175,.27056162,.95721098],[.95673772,-.2902497,-.02020032,.27233761,.9178022,-.28891409,.10239712,.2709137,.95714189],[.95670165,-.29039858,-.01976397,.27257117,.91765092,-.28917425,.10211221,.2712664,.95707243],[.95666493,-.29054896,-.01932649,.27280666,.91749879,-.28943478,.10182701,.27161971,.95700261],[.95662754,-.29070086,-.01888789,.27304407,.91734582,-.28969566,.1015415,.27197363,.95693243],[.9565895,-.29085426,-.01844813,.27328341,.917192,-.2899569,.10125567,.27232816,.95686188],[.95655078,-.29100917,-.0180072,.27352468,.91703734,-.29021849,.10096952,.27268331,.95679098],[.95651141,-.29116558,-.01756509,.27376789,.91688182,-.29048041,.10068301,.27303907,.95671971],[.95647136,-.29132349,-.01712179,.27401304,.91672545,-.29074267,.10039615,.27339545,.95664808],[.95643065,-.2914829,-.01667728,.27426012,.91656823,-.29100527,.10010893,.27375244,.95657608],[.95638927,-.2916438,-.01623155,.27450915,.91641016,-.29126818,.09982131,.27411005,.95650373],[.95634721,-.29180619,-.01578458,.27476012,.91625123,-.29153141,.09953331,.27446828,.95643101],[.95630449,-.29197007,-.01533636,.27501305,.91609144,-.29179494,.0992449,.27482712,.95635794],[.95626109,-.29213543,-.01488687,.27526792,.9159308,-.29205879,.09895606,.27518657,.9562845],[.95621701,-.29230228,-.0144361,.27552474,.91576931,-.29232292,.0986668,.27554665,.9562107],[.95617226,-.29247059,-.01398404,.27578352,.91560695,-.29258735,.09837708,.27590734,.95613654],[.95612684,-.29264038,-.01353068,.27604425,.91544374,-.29285206,.09808691,.27626865,.95606202],[.95608073,-.29281164,-.01307599,.27630694,.91527967,-.29311704,.09779627,.27663057,.95598714],[.95603395,-.29298435,-.01261997,.27657159,.91511474,-.2933823,.09750514,.27699311,.9559119],[.95598648,-.29315853,-.01216259,.27683819,.91494895,-.29364781,.09721351,.27735627,.9558363],[.95593833,-.29333415,-.01170386,.27710675,.9147823,-.29391358,.09692138,.27772004,.95576034],[.9558895,-.29351122,-.01124375,.27737727,.91461479,-.2941796,.09662872,.27808443,.95568402],[.95583999,-.29368973,-.01078225,.27764975,.91444642,-.29444586,.09633552,.27844944,.95560733],[.95578979,-.29386968,-.01031935,.27792419,.91427719,-.29471235,.09604177,.27881506,.95553029],[.95573891,-.29405105,-.00985504,.27820058,.9141071,-.29497907,.09574747,.2791813,.95545289],[.95568734,-.29423385,-.00938929,.27847894,.91393614,-.29524601,.09545258,.27954815,.95537513],[.95563508,-.29441806,-.00892211,.27875925,.91376433,-.29551316,.09515712,.27991562,.95529701],[.95558213,-.29460368,-.00845347,.27904152,.91359166,-.29578051,.09486105,.2802837,.95521852],[.9555285,-.2947907,-.00798337,.27932574,.91341813,-.29604806,.09456437,.2806524,.95513968],[.95547417,-.29497911,-.00751178,.27961192,.91324374,-.2963158,.09426706,.28102171,.95506048],[.95541916,-.29516891,-.00703871,.27990005,.91306849,-.29658372,.09396912,.28139164,.95498092],[.95536345,-.2953601,-.00656413,.28019013,.91289238,-.29685182,.09367052,.28176217,.954901],[.95530705,-.29555265,-.00608803,.28048216,.91271541,-.29712008,.09337127,.28213332,.95482071],[.95524996,-.29574657,-.00561041,.28077613,.91253759,-.2973885,.09307134,.28250508,.95474007],[.95519218,-.29594184,-.00513124,.28107205,.9123589,-.29765707,.09277072,.28287745,.95465907],[.9551337,-.29613847,-.00465053,.28136992,.91217937,-.29792578,.0924694,.28325044,.95457771],[.95507452,-.29633643,-.00416825,.28166972,.91199898,-.29819463,.09216737,.28362403,.95449599],[.95501465,-.29653572,-.0036844,.28197145,.91181773,-.29846361,.09186462,.28399822,.9544139],[.95495409,-.29673634,-.00319896,.28227512,.91163563,-.29873271,.09156114,.28437303,.95433146],[.95489283,-.29693827,-.00271193,.28258072,.91145268,-.29900191,.09125691,.28474844,.95424866],[.95483087,-.2971415,-.00222329,.28288825,.91126888,-.29927123,.09095192,.28512446,.95416549],[.95476821,-.29734602,-.00173303,.2831977,.91108423,-.29954064,.09064615,.28550109,.95408197],[.95470486,-.29755184,-.00124114,.28350907,.91089873,-.29981013,.09033961,.28587831,.95399808],[.9546408,-.29775892,-74762e-8,.28382235,.91071238,-.30007971,.09003228,.28625615,.95391384],[.95457605,-.29796727,-25245e-8,.28413753,.91052519,-.30034936,.08972414,.28663458,.95382923],[.9545106,-.29817688,24439e-8,.28445463,.91033715,-.30061907,.08941518,.28701361,.95374426],[.95444445,-.29838773,74289e-8,.28477362,.91014828,-.30088885,.0891054,.28739324,.95365893],[.9543776,-.29859982,.00124307,.28509451,.90995856,-.30115866,.08879478,.28777347,.95357323],[.95431005,-.29881313,.00174493,.28541729,.909768,-.30142852,.08848332,.2881543,.95348718],[.9542418,-.29902765,.00224849,.28574196,.9095766,-.30169841,.08817099,.28853573,.95340076],[.95417285,-.29924337,.00275376,.2860685,.90938437,-.30196833,.0878578,.28891774,.95331398],[.95410319,-.29946029,.00326074,.28639692,.90919131,-.30223826,.08754372,.28930036,.95322684],[.95403284,-.29967839,.00376944,.2867272,.90899741,-.3025082,.08722876,.28968356,.95313933],[.95396178,-.29989765,.00427987,.28705935,.90880269,-.30277814,.08691289,.29006735,.95305146],[.95389002,-.30011808,.00479204,.28739335,.90860714,-.30304808,.08659612,.29045174,.95296322],[.95381756,-.30033964,.00530596,.28772919,.90841076,-.30331799,.08627843,.29083671,.95287462],[.9537444,-.30056235,.00582163,.28806688,.90821356,-.30358789,.0859598,.29122227,.95278565],[.95367054,-.30078617,.00633906,.2884064,.90801554,-.30385775,.08564024,.29160841,.95269632],[.95359597,-.30101111,.00685826,.28874775,.9078167,-.30412757,.08531973,.29199513,.95260663],[.9535207,-.30123714,.00737924,.28909092,.90761704,-.30439734,.08499826,.29238244,.95251656],[.95344473,-.30146426,.007902,.28943591,.90741657,-.30466706,.08467583,.29277033,.95242613],[.95336806,-.30169245,.00842654,.28978269,.9072153,-.30493671,.08435242,.29315879,.95233534],[.95329069,-.3019217,.00895288,.29013128,.90701321,-.3052063,.08402802,.29354783,.95224417],[.95321261,-.302152,.00948102,.29048165,.90681032,-.3054758,.08370264,.29393745,.95215264],[.95313383,-.30238333,.01001097,.2908338,.90660662,-.30574521,.08337625,.29432763,.95206074],[.95305435,-.30261569,.01054272,.29118773,.90640213,-.30601453,.08304885,.29471839,.95196846],[.95297417,-.30284906,.0110763,.29154342,.90619683,-.30628375,.08272044,.29510972,.95187582],[.95289328,-.30308342,.01161169,.29190086,.90599075,-.30655286,.082391,.29550162,.95178281],[.9528117,-.30331876,.01214891,.29226005,.90578387,-.30682184,.08206053,.29589408,.95168942],[.95272941,-.30355508,.01268796,.29262098,.90557621,-.3070907,.08172903,.29628711,.95159567],[.95264642,-.30379235,.01322885,.29298363,.90536776,-.30735943,.08139647,.2966807,.95150154],[.95256273,-.30403056,.01377157,.293348,.90515853,-.30762801,.08106286,.29707484,.95140704],[.95247834,-.3042697,.01431614,.29371408,.90494852,-.30789645,.08072819,.29746955,.95131216],[.95239325,-.30450976,.01486255,.29408186,.90473773,-.30816472,.08039246,.29786481,.95121691],[.95230746,-.30475072,.01541081,.29445133,.90452617,-.30843284,.08005565,.29826063,.95112128],[.95222098,-.30499256,.01596092,.29482248,.90431385,-.30870078,.07971776,.29865699,.95102528],[.95213379,-.30523528,.01651289,.29519529,.90410076,-.30896854,.07937878,.29905391,.9509289],[.9520459,-.30547886,.01706672,.29556977,.90388691,-.30923611,.07903871,.29945138,.95083214],[.95195731,-.30572328,.0176224,.29594589,.9036723,-.30950349,.07869755,.29984939,.950735],[.95186803,-.30596854,.01817994,.29632365,.90345693,-.30977067,.07835528,.30024794,.95063748],[.95177805,-.30621461,.01873935,.29670304,.90324082,-.31003763,.07801191,.30064704,.95053958],[.95168737,-.30646148,.01930062,.29708404,.90302395,-.31030439,.07766742,.30104667,.95044131],[.95159599,-.30670914,.01986375,.29746664,.90280635,-.31057091,.07732182,.30144684,.95034264],[.95150392,-.30695758,.02042875,.29785084,.902588,-.31083721,.07697509,.30184754,.9502436],[.95141115,-.30720677,.02099562,.29823662,.90236892,-.31110327,.07662724,.30224878,.95014417],[.95131769,-.30745671,.02156435,.29862397,.90214911,-.31136908,.07627826,.30265055,.95004435],[.95122354,-.30770738,.02213495,.29901288,.90192857,-.31163464,.07592814,.30305284,.94994415],[.95112869,-.30795876,.02270741,.29940334,.90170731,-.31189995,.07557688,.30345566,.94984356],[.95103314,-.30821084,.02328174,.29979533,.90148532,-.31216498,.07522449,.303859,.94974259],[.95093691,-.30846361,.02385793,.30018884,.90126262,-.31242975,.07487095,.30426286,.94964122],[.95083998,-.30871705,.02443599,.30058387,.90103921,-.31269423,.07451626,.30466724,.94953947],[.95074236,-.30897114,.02501591,.30098039,.90081509,-.31295844,.07416042,.30507214,.94943732],[.95064405,-.30922587,.02559769,.3013784,.90059027,-.31322234,.07380342,.30547755,.94933478],[.95054506,-.30948123,.02618133,.30177788,.90036474,-.31348595,.07344527,.30588347,.94923184],[.95044537,-.3097372,.02676682,.30217882,.90013853,-.31374926,.07308597,.3062899,.94912852],[.950345,-.30999377,.02735417,.30258121,.89991162,-.31401225,.0727255,.30669683,.94902479],[.95024394,-.31025091,.02794337,.30298503,.89968402,-.31427492,.07236388,.30710427,.94892067],[.95014219,-.31050862,.02853442,.30339028,.89945575,-.31453728,.07200109,.3075122,.94881615],[.95003976,-.31076688,.02912732,.30379694,.89922679,-.3147993,.07163713,.30792064,.94871123],[.94993664,-.31102568,.02972206,.30420499,.89899717,-.31506098,.07127201,.30832957,.94860591],[.94983284,-.31128499,.03031863,.30461442,.89876687,-.31532232,.07090573,.30873899,.94850019],[.94972836,-.31154481,.03091704,.30502522,.89853591,-.31558332,.07053827,.3091489,.94839407],[.9496232,-.31180512,.03151728,.30543738,.89830429,-.31584396,.07016965,.30955931,.94828754],[.94951736,-.31206591,.03211935,.30585088,.89807202,-.31610424,.06979987,.30997019,.9481806],[.94941084,-.31232715,.03272323,.30626571,.89783909,-.31636415,.06942891,.31038156,.94807326],[.94930364,-.31258884,.03332894,.30668185,.89760552,-.3166237,.06905679,.31079341,.94796551],[.94919577,-.31285095,.03393645,.30709929,.89737131,-.31688286,.06868351,.31120573,.94785736],[.94908721,-.31311348,.03454577,.30751802,.89713647,-.31714165,.06830905,.31161853,.94774879],[.94897799,-.3133764,.03515689,.30793802,.89690099,-.31740005,.06793344,.3120318,.94763981],[.94886809,-.31363971,.0357698,.30835928,.89666488,-.31765806,.06755666,.31244554,.94753041],[.94875752,-.31390339,.0363845,.30878178,.89642816,-.31791566,.06717871,.31285975,.9474206],[.94864628,-.31416741,.03700098,.30920551,.89619081,-.31817287,.06679961,.31327442,.94731038],[.94853437,-.31443178,.03761924,.30963046,.89595286,-.31842967,.06641934,.31368955,.94719974],[.94842179,-.31469646,.03823926,.3100566,.8957143,-.31868606,.06603792,.31410514,.94708867],[.94830855,-.31496146,.03886104,.31048394,.89547513,-.31894203,.06565535,.31452118,.94697719],[.94819464,-.31522674,.03948458,.31091244,.89523537,-.31919757,.06527162,.31493767,.94686529],[.94808006,-.3154923,.04010986,.3113421,.89499501,-.31945269,.06488674,.31535462,.94675296],[.94796483,-.31575812,.04073688,.3117729,.89475407,-.31970738,.06450072,.31577201,.94664021],[.94784893,-.31602419,.04136562,.31220483,.89451255,-.31996164,.06411355,.31618984,.94652704],[.94773238,-.31629048,.04199609,.31263787,.89427045,-.32021545,.06372524,.31660812,.94641344],[.94761516,-.31655699,.04262827,.313072,.89402777,-.32046882,.06333579,.31702683,.94629941],[.9474973,-.31682371,.04326215,.31350722,.89378453,-.32072174,.06294521,.31744598,.94618494],[.94737877,-.3170906,.04389773,.3139435,.89354073,-.32097421,.0625535,.31786556,.94607005],[.9472596,-.31735767,.04453499,.31438083,.89329637,-.32122623,.06216066,.31828557,.94595473],[.94713977,-.31762489,.04517393,.3148192,.89305146,-.32147778,.0617667,.31870601,.94583897],[.94701929,-.31789226,.04581453,.31525859,.892806,-.32172887,.06137163,.31912687,.94572277],[.94689817,-.31815974,.04645679,.31569899,.89256,-.32197949,.06097544,.31954815,.94560614],[.9467764,-.31842734,.0471007,.31614037,.89231347,-.32222964,.06057814,.31996985,.94548907],[.94665399,-.31869504,.04774624,.31658273,.8920664,-.32247932,.06017974,.32039197,.94537156],[.94653093,-.31896281,.0483934,.31702605,.89181881,-.32272852,.05978025,.32081449,.94525361],[.94640724,-.31923065,.04904218,.31747031,.8915707,-.32297723,.05937966,.32123743,.94513521],[.9462829,-.31949854,.04969257,.3179155,.89132207,-.32322547,.05897798,.32166077,.94501637],[.94615793,-.31976646,.05034454,.3183616,.89107294,-.32347321,.05857522,.32208452,.94489709]];return a}function zi(){var a=[[0,0,0,0,0,0,0,0,0],[1,0,72e-8,-0,1,0,-72e-8,-0,1],[1,0,217e-8,-0,1,0,-217e-8,-0,1],[1,0,434e-8,-0,1,0,-434e-8,-0,1],[1,0,724e-8,-0,1,0,-724e-8,-0,1],[1,0,1086e-8,-0,1,0,-1086e-8,-0,1],[1,0,152e-7,-0,1,0,-152e-7,-0,1],[1,0,2027e-8,-0,1,0,-2027e-8,-0,1],[1,0,2606e-8,-0,1,0,-2606e-8,-0,1],[1,0,3258e-8,-0,1,0,-3258e-8,-0,1],[1,0,3982e-8,-0,1,0,-3982e-8,-0,1],[1,-0,4778e-8,0,1,0,-4778e-8,-0,1],[1,-0,5647e-8,0,1,0,-5647e-8,-0,1],[1,-0,6588e-8,0,1,0,-6588e-8,-0,1],[1,-0,7602e-8,0,1,0,-7602e-8,-0,1],[1,-0,8688e-8,0,1,0,-8688e-8,-0,1],[1,-0,9846e-8,0,1,0,-9846e-8,-0,1],[.99999999,-0,11077e-8,0,1,0,-11077e-8,-0,.99999999],[.99999999,-0,1238e-7,0,1,0,-1238e-7,-0,.99999999],[.99999999,-0,13755e-8,0,1,0,-13755e-8,-0,.99999999],[.99999999,-0,15203e-8,0,1,0,-15203e-8,-0,.99999999],[.99999999,-0,16724e-8,0,1,0,-16724e-8,-0,.99999999],[.99999998,-0,18316e-8,0,1,0,-18316e-8,-0,.99999998],[.99999998,-0,19982e-8,0,1,0,-19982e-8,-0,.99999998],[.99999998,-0,21719e-8,0,1,0,-21719e-8,-0,.99999998],[.99999997,-0,23529e-8,0,1,0,-23529e-8,-0,.99999997],[.99999997,-0,25411e-8,0,1,0,-25411e-8,-0,.99999997],[.99999996,-0,27366e-8,0,1,0,-27366e-8,-0,.99999996],[.99999996,-0,29393e-8,0,1,0,-29393e-8,-0,.99999996],[.99999995,-0,31493e-8,0,1,0,-31493e-8,-0,.99999995],[.99999994,-0,33665e-8,0,1,0,-33665e-8,-0,.99999994],[.99999994,-0,35909e-8,0,1,0,-35909e-8,-0,.99999994],[.99999993,-0,38226e-8,0,1,0,-38226e-8,-0,.99999993],[.99999992,-0,40615e-8,0,1,0,-40615e-8,-0,.99999992],[.99999991,-0,43076e-8,0,1,0,-43076e-8,-0,.99999991],[.9999999,-0,4561e-7,0,1,0,-4561e-7,-0,.9999999],[.99999988,-0,48217e-8,0,1,-0,-48217e-8,0,.99999988],[.99999987,-0,50896e-8,0,1,-0,-50896e-8,0,.99999987],[.99999986,-0,53647e-8,0,1,-0,-53647e-8,0,.99999986],[.99999984,-0,5647e-7,0,1,-0,-5647e-7,0,.99999984],[.99999982,-0,59366e-8,0,1,-0,-59366e-8,0,.99999982],[.99999981,-0,62335e-8,0,1,-0,-62335e-8,0,.99999981],[.99999979,-0,65375e-8,0,1,-0,-65375e-8,0,.99999979],[.99999977,-0,68489e-8,0,1,-0,-68489e-8,0,.99999977],[.99999974,-0,71674e-8,0,1,-0,-71674e-8,0,.99999974],[.99999972,-0,74932e-8,0,1,-0,-74932e-8,0,.99999972],[.99999969,-0,78263e-8,0,1,-0,-78263e-8,0,.99999969],[.99999967,-0,81666e-8,0,1,-0,-81666e-8,0,.99999967],[.99999964,-0,85141e-8,0,1,-0,-85141e-8,0,.99999964],[.99999961,-0,88688e-8,0,1,-0,-88688e-8,0,.99999961],[.99999957,-0,92308e-8,0,1,-0,-92308e-8,0,.99999957],[.99999954,-0,96001e-8,0,1,-0,-96001e-8,0,.99999954],[.9999995,-0,99766e-8,0,1,-0,-99766e-8,0,.9999995],[.99999946,-0,.00103603,0,1,-0,-.00103603,0,.99999946],[.99999942,-0,.00107513,0,1,-0,-.00107513,0,.99999942],[.99999938,-0,.00111495,0,1,-0,-.00111495,0,.99999938],[.99999933,-0,.00115549,0,1,-0,-.00115549,0,.99999933],[.99999928,-0,.00119676,0,1,-0,-.00119676,0,.99999928],[.99999923,-0,.00123876,0,1,-0,-.00123876,0,.99999923],[.99999918,-0,.00128148,0,1,-0,-.00128148,0,.99999918],[.99999912,-0,.00132492,0,1,-0,-.00132492,0,.99999912],[.99999906,-0,.00136908,0,1,-0,-.00136908,0,.99999906],[.999999,-0,.00141397,0,1,-0,-.00141397,0,.999999],[.99999893,-0,.00145959,0,1,-0,-.00145959,0,.99999893],[.99999887,-0,.00150593,0,1,-0,-.00150593,0,.99999887],[.99999879,-0,.00155299,0,1,-0,-.00155299,0,.99999879],[.99999872,-0,.00160078,0,1,-0,-.00160078,0,.99999872],[.99999864,-0,.00164929,0,1,-0,-.00164929,0,.99999864],[.99999856,-0,.00169852,0,1,-0,-.00169852,0,.99999856],[.99999847,-0,.00174848,0,1,-0,-.00174848,0,.99999847],[.99999838,-0,.00179917,0,1,-0,-.00179917,0,.99999838],[.99999829,-0,.00185058,0,1,-0,-.00185058,0,.99999829],[.99999819,-0,.00190271,0,1,-0,-.00190271,0,.99999819],[.99999809,-0,.00195557,0,1,-0,-.00195557,0,.99999809],[.99999798,-0,.00200915,0,1,-0,-.00200915,0,.99999798],[.99999787,-0,.00206345,0,1,-0,-.00206345,0,.99999787],[.99999776,-0,.00211848,0,1,-0,-.00211848,0,.99999776],[.99999764,-0,.00217424,0,1,-0,-.00217424,0,.99999764],[.99999751,-0,.00223071,0,1,-0,-.00223071,0,.99999751],[.99999738,-0,.00228792,0,1,-0,-.00228792,0,.99999738],[.99999725,-0,.00234584,0,1,-0,-.00234584,0,.99999725],[.99999711,-0,.00240449,0,1,-0,-.00240449,0,.99999711],[.99999696,-0,.00246387,0,1,-0,-.00246387,0,.99999696],[.99999681,-0,.00252397,0,1,-0,-.00252397,0,.99999681],[.99999666,-0,.00258479,0,1,-0,-.00258479,0,.99999666],[.9999965,-0,.00264634,0,1,-0,-.00264634,0,.9999965],[.99999633,-0,.00270862,0,1,-0,-.00270862,0,.99999633],[.99999616,-0,.00277161,0,1,-0,-.00277161,0,.99999616],[.99999598,-0,.00283534,0,1,-0,-.00283534,0,.99999598],[.9999958,-0,.00289978,0,1,-0,-.00289978,0,.9999958],[.9999956,-0,.00296495,0,1,-0,-.00296495,0,.9999956],[.99999541,-0,.00303085,0,1,-0,-.00303085,0,.99999541],[.9999952,-0,.00309747,0,1,-0,-.00309747,0,.9999952],[.99999499,-0,.00316481,0,1,-0,-.00316481,0,.99999499],[.99999477,-0,.00323288,0,1,-0,-.00323288,0,.99999477],[.99999455,-0,.00330167,0,1,-0,-.00330167,0,.99999455],[.99999432,-0,.00337119,0,1,-0,-.00337119,0,.99999432],[.99999408,-0,.00344143,0,1,-0,-.00344143,0,.99999408],[.99999383,-0,.0035124,0,1,-0,-.0035124,0,.99999383],[.99999358,-0,.00358409,0,1,-0,-.00358409,0,.99999358],[.99999331,-0,.0036565,0,1,-0,-.0036565,0,.99999331],[.99999304,-0,.00372964,0,1,-0,-.00372964,0,.99999304],[.99999277,-0,.00380351,0,1,-0,-.00380351,0,.99999277],[.99999248,-0,.0038781,0,1,-0,-.0038781,0,.99999248],[.99999219,-0,.00395341,0,1,-0,-.00395341,0,.99999219],[.99999188,-0,.00402945,0,1,-0,-.00402945,0,.99999188],[.99999157,-0,.00410621,0,1,-0,-.00410621,0,.99999157],[.99999125,-0,.0041837,0,1,-0,-.0041837,0,.99999125],[.99999092,-0,.00426191,0,1,-0,-.00426191,0,.99999092],[.99999058,-0,.00434084,0,1,-0,-.00434084,0,.99999058],[.99999023,-0,.0044205,0,1,-0,-.0044205,0,.99999023],[.99998987,-0,.00450089,0,1,-0,-.00450089,0,.99998987],[.9999895,-0,.004582,0,1,-0,-.004582,0,.9999895],[.99998912,-0,.00466384,0,1,-0,-.00466384,0,.99998912],[.99998874,-0,.0047464,0,1,-0,-.0047464,0,.99998874],[.99998834,-0,.00482968,0,1,-0,-.00482968,0,.99998834],[.99998793,-0,.00491369,0,1,-0,-.00491369,0,.99998793],[.99998751,-0,.00499842,0,1,-0,-.00499842,0,.99998751],[.99998708,-0,.00508388,0,1,-0,-.00508388,0,.99998708],[.99998664,-0,.00517006,0,1,-0,-.00517006,0,.99998664],[.99998618,-0,.00525697,0,1,-0,-.00525697,0,.99998618],[.99998572,-0,.0053446,0,1,-0,-.0053446,0,.99998572],[.99998524,-0,.00543296,0,1,-0,-.00543296,0,.99998524],[.99998475,-0,.00552204,0,1,-0,-.00552204,0,.99998475],[.99998425,-0,.00561185,0,1,-0,-.00561185,0,.99998425],[.99998374,-0,.00570238,0,1,-0,-.00570238,0,.99998374],[.99998322,-0,.00579364,0,1,-0,-.00579364,0,.99998322],[.99998268,-0,.00588562,0,1,-0,-.00588562,0,.99998268],[.99998213,-0,.00597832,0,1,-0,-.00597832,0,.99998213],[.99998157,-0,.00607176,0,1,-0,-.00607176,0,.99998157],[.99998099,-0,.00616591,0,1,-0,-.00616591,0,.99998099],[.9999804,-0,.00626079,0,1,-0,-.00626079,0,.9999804],[.9999798,-0,.0063564,0,1,-0,-.0063564,0,.9999798],[.99997918,-0,.00645273,0,1,-0,-.00645273,0,.99997918],[.99997855,-0,.00654978,0,1,-0,-.00654978,0,.99997855],[.9999779,-0,.00664756,0,1,-0,-.00664756,0,.9999779],[.99997725,-0,.00674607,0,1,-0,-.00674607,0,.99997725],[.99997657,-0,.0068453,0,1,-0,-.0068453,0,.99997657],[.99997588,-0,.00694525,0,1,-0,-.00694525,0,.99997588],[.99997518,-0,.00704593,0,1,-0,-.00704593,0,.99997518],[.99997446,-0,.00714734,0,1,-0,-.00714734,0,.99997446],[.99997372,-0,.00724947,0,1,-0,-.00724947,0,.99997372],[.99997297,-0,.00735232,0,1,-0,-.00735232,0,.99997297],[.9999722,-0,.0074559,0,1,-0,-.0074559,0,.9999722],[.99997142,-0,.00756021,0,1,-0,-.00756021,0,.99997142],[.99997062,-0,.00766524,0,1,-0,-.00766524,0,.99997062],[.99996981,-0,.007771,0,1,-0,-.007771,0,.99996981],[.99996897,-0,.00787748,0,1,-0,-.00787748,0,.99996897],[.99996812,-0,.00798468,0,1,-0,-.00798468,0,.99996812],[.99996725,-0,.00809261,0,1,-0,-.00809261,0,.99996725],[.99996637,-0,.00820127,0,1,-0,-.00820127,0,.99996637],[.99996547,-0,.00831065,0,1,-0,-.00831065,0,.99996547],[.99996454,-0,.00842075,0,1,-0,-.00842075,0,.99996454],[.99996361,-0,.00853159,0,1,-0,-.00853159,0,.99996361],[.99996265,-0,.00864314,0,1,-0,-.00864314,0,.99996265],[.99996167,-0,.00875542,0,1,-0,-.00875542,0,.99996167],[.99996067,-0,.00886843,0,1,-0,-.00886843,0,.99996067],[.99995966,-0,.00898216,0,1,-0,-.00898216,0,.99995966],[.99995862,-0,.00909662,0,1,-0,-.00909662,0,.99995862],[.99995757,-0,.0092118,0,1,-0,-.0092118,0,.99995757],[.9999565,-0,.00932771,0,1,-0,-.00932771,0,.9999565],[.9999554,-0,.00944434,0,1,-0,-.00944434,0,.9999554],[.99995429,-0,.0095617,0,1,-0,-.0095617,0,.99995429],[.99995315,-0,.00967978,0,1,-0,-.00967978,0,.99995315],[.99995199,-0,.00979859,0,1,-0,-.00979859,0,.99995199],[.99995081,-0,.00991813,0,1,-0,-.00991813,0,.99995081],[.99994961,-0,.01003839,0,1,-0,-.01003839,0,.99994961],[.99994839,-0,.01015937,0,1,-0,-.01015937,0,.99994839],[.99994715,-0,.01028108,0,1,-0,-.01028108,0,.99994715],[.99994588,-0,.01040352,0,1,-0,-.01040352,0,.99994588],[.99994459,-0,.01052668,0,1,-0,-.01052668,0,.99994459],[.99994328,-0,.01065056,0,1,-0,-.01065056,0,.99994328],[.99994195,-0,.01077517,0,1,-0,-.01077517,0,.99994195],[.99994059,-0,.01090051,0,1,-0,-.01090051,0,.99994059],[.99993921,-0,.01102657,0,1,-0,-.01102657,0,.99993921],[.9999378,-0,.01115336,0,1,-0,-.01115336,0,.9999378],[.99993637,-0,.01128088,0,1,-0,-.01128088,0,.99993637],[.99993491,-0,.01140912,0,1,-0,-.01140912,0,.99993491],[.99993343,-0,.01153808,0,1,-0,-.01153808,0,.99993343],[.99993193,-0,.01166777,0,1,-0,-.01166777,0,.99993193],[.9999304,-0,.01179819,0,1,-0,-.01179819,0,.9999304],[.99992884,-0,.01192933,0,1,-0,-.01192933,0,.99992884],[.99992726,-0,.01206119,0,1,-0,-.01206119,0,.99992726],[.99992565,-0,.01219379,0,1,-0,-.01219379,0,.99992565],[.99992402,-0,.0123271,0,1,-0,-.0123271,0,.99992402],[.99992236,-0,.01246115,0,1,-0,-.01246115,0,.99992236],[.99992067,-0,.01259592,0,1,-0,-.01259592,0,.99992067],[.99991895,-0,.01273141,0,1,-0,-.01273141,0,.99991895],[.99991721,-0,.01286763,0,1,-0,-.01286763,0,.99991721],[.99991544,-0,.01300458,0,1,-0,-.01300458,0,.99991544],[.99991364,-0,.01314225,0,1,-0,-.01314225,0,.99991364],[.99991181,-0,.01328065,0,1,-0,-.01328065,0,.99991181],[.99990995,-0,.01341977,0,1,-0,-.01341977,0,.99990995],[.99990806,-0,.01355962,0,1,-0,-.01355962,0,.99990806],[.99990615,-0,.01370019,0,1,-0,-.01370019,0,.99990615],[.9999042,-0,.01384149,0,1,-0,-.01384149,0,.9999042],[.99990223,-0,.01398352,0,1,-0,-.01398352,0,.99990223],[.99990022,-0,.01412627,0,1,-0,-.01412627,0,.99990022],[.99989818,-0,.01426975,0,1,-0,-.01426975,0,.99989818],[.99989611,-0,.01441395,0,1,-0,-.01441395,0,.99989611],[.99989401,-0,.01455888,0,1,-0,-.01455888,0,.99989401],[.99989188,-0,.01470454,0,1,-0,-.01470454,0,.99989188],[.99988972,-0,.01485092,0,1,-0,-.01485092,0,.99988972],[.99988752,-0,.01499803,0,1,-0,-.01499803,0,.99988752],[.99988529,-0,.01514586,0,1,-0,-.01514586,0,.99988529],[.99988303,-0,.01529442,0,1,-0,-.01529442,0,.99988303],[.99988074,-0,.0154437,0,1,-0,-.0154437,0,.99988074],[.99987841,-0,.01559371,0,1,-0,-.01559371,0,.99987841],[.99987605,-0,.01574445,0,1,-0,-.01574445,0,.99987605],[.99987365,-0,.01589591,0,1,-0,-.01589591,0,.99987365],[.99987122,-0,.0160481,0,1,-0,-.0160481,0,.99987122],[.99986875,-0,.01620101,0,1,-0,-.01620101,0,.99986875],[.99986625,-0,.01635466,0,1,-0,-.01635466,0,.99986625],[.99986372,-0,.01650902,0,1,-0,-.01650902,0,.99986372],[.99986114,-0,.01666411,0,1,-0,-.01666411,0,.99986114],[.99985853,-0,.01681993,0,1,-0,-.01681993,0,.99985853],[.99985589,-0,.01697648,0,1,-0,-.01697648,0,.99985589],[.99985321,-0,.01713375,0,1,-0,-.01713375,0,.99985321],[.99985049,-0,.01729174,0,1,-0,-.01729174,0,.99985049],[.99984773,-0,.01745047,0,1,-0,-.01745047,0,.99984773],[.99984493,-0,.01760991,0,1,-0,-.01760991,0,.99984493],[.9998421,-0,.01777009,0,1,-0,-.01777009,0,.9998421],[.99983923,-0,.01793099,0,1,-0,-.01793099,0,.99983923],[.99983632,-0,.01809262,0,1,-0,-.01809262,0,.99983632],[.99983336,-0,.01825497,0,1,-0,-.01825497,0,.99983336],[.99983037,-0,.01841805,0,1,-0,-.01841805,0,.99983037],[.99982734,-0,.01858186,0,1,-0,-.01858186,0,.99982734],[.99982427,-0,.01874639,0,1,-0,-.01874639,0,.99982427],[.99982116,-0,.01891165,0,1,-0,-.01891165,0,.99982116],[.99981801,-0,.01907763,0,1,-0,-.01907763,0,.99981801],[.99981481,-0,.01924434,0,1,-0,-.01924434,0,.99981481],[.99981157,-0,.01941178,0,1,-0,-.01941178,0,.99981157],[.99980829,-0,.01957994,0,1,-0,-.01957994,0,.99980829],[.99980497,-0,.01974883,0,1,-0,-.01974883,0,.99980497],[.99980161,-0,.01991844,0,1,-0,-.01991844,0,.99980161],[.9997982,-0,.02008878,0,1,-0,-.02008878,0,.9997982],[.99979475,-0,.02025985,0,1,-0,-.02025985,0,.99979475],[.99979125,-0,.02043165,0,1,-0,-.02043165,0,.99979125],[.99978771,-0,.02060417,0,1,-0,-.02060417,0,.99978771],[.99978413,-0,.02077741,0,1,-0,-.02077741,0,.99978413],[.9997805,-0,.02095139,0,1,-0,-.02095139,0,.9997805],[.99977682,-0,.02112609,0,1,-0,-.02112609,0,.99977682],[.9997731,-0,.02130151,0,1,-0,-.02130151,0,.9997731],[.99976933,-0,.02147767,0,1,-0,-.02147767,0,.99976933],[.99976551,-0,.02165454,0,1,-0,-.02165454,0,.99976551],[.99976165,-0,.02183215,0,1,-0,-.02183215,0,.99976165],[.99975774,-0,.02201048,0,1,-0,-.02201048,0,.99975774],[.99975378,-0,.02218954,0,1,-0,-.02218954,0,.99975378],[.99974978,-0,.02236932,0,1,-0,-.02236932,0,.99974978],[.99974572,-0,.02254984,0,1,-0,-.02254984,0,.99974572],[.99974162,-0,.02273107,0,1,-0,-.02273107,0,.99974162],[.99973746,-0,.02291304,0,1,-0,-.02291304,0,.99973746],[.99973326,-0,.02309573,0,1,-0,-.02309573,0,.99973326],[.999729,-0,.02327914,0,1,-0,-.02327914,0,.999729],[.9997247,-0,.02346329,0,1,-0,-.02346329,0,.9997247],[.99972034,-0,.02364816,0,1,-0,-.02364816,0,.99972034],[.99971594,-0,.02383375,0,1,-0,-.02383375,0,.99971594],[.99971148,-0,.02402008,0,1,-0,-.02402008,0,.99971148],[.99970696,-0,.02420713,0,1,-0,-.02420713,0,.99970696],[.9997024,-0,.0243949,0,1,-0,-.0243949,0,.9997024],[.99969778,-0,.0245834,0,1,-0,-.0245834,0,.99969778],[.99969311,-0,.02477263,0,1,-0,-.02477263,0,.99969311],[.99968839,-0,.02496259,0,1,-0,-.02496259,0,.99968839],[.99968361,-0,.02515327,0,1,-0,-.02515327,0,.99968361],[.99967877,-0,.02534468,0,1,-0,-.02534468,0,.99967877],[.99967388,-0,.02553682,0,1,-0,-.02553682,0,.99967388],[.99966894,-0,.02572968,0,1,-0,-.02572968,0,.99966894],[.99966394,-0,.02592327,0,1,-0,-.02592327,0,.99966394],[.99965888,-0,.02611758,0,1,-0,-.02611758,0,.99965888],[.99965376,-0,.02631263,0,1,-0,-.02631263,0,.99965376],[.99964859,-0,.02650839,0,1,-0,-.02650839,0,.99964859],[.99964336,-0,.02670489,0,1,-0,-.02670489,0,.99964336],[.99963807,-0,.02690211,0,1,-0,-.02690211,0,.99963807],[.99963273,-0,.02710006,0,1,-0,-.02710006,0,.99963273],[.99962732,-0,.02729874,0,1,-0,-.02729874,0,.99962732],[.99962185,-0,.02749814,0,1,-0,-.02749814,0,.99962185],[.99961633,-0,.02769827,0,1,-0,-.02769827,0,.99961633],[.99961074,-0,.02789912,0,1,-0,-.02789912,0,.99961074],[.9996051,-0,.02810071,0,1,-0,-.02810071,0,.9996051],[.99959939,-0,.02830302,0,1,-0,-.02830302,0,.99959939],[.99959362,-0,.02850605,0,1,-0,-.02850605,0,.99959362],[.99958779,-0,.02870981,0,1,-0,-.02870981,0,.99958779],[.99958189,-0,.0289143,0,1,-0,-.0289143,0,.99958189],[.99957594,-0,.02911952,0,1,-0,-.02911952,0,.99957594],[.99956992,-0,.02932546,0,1,-0,-.02932546,0,.99956992],[.99956383,-0,.02953213,0,1,-0,-.02953213,0,.99956383],[.99955768,-0,.02973953,0,1,-0,-.02973953,0,.99955768],[.99955147,-0,.02994765,0,1,-0,-.02994765,0,.99955147],[.99954519,-0,.0301565,0,1,-0,-.0301565,0,.99954519],[.99953884,-0,.03036608,0,1,-0,-.03036608,0,.99953884],[.99953243,-0,.03057638,0,1,-0,-.03057638,0,.99953243],[.99952596,-0,.03078741,0,1,-0,-.03078741,0,.99952596],[.99951941,-0,.03099917,0,1,-0,-.03099917,0,.99951941],[.9995128,-0,.03121166,0,1,-0,-.03121166,0,.9995128],[.99950612,-0,.03142487,0,1,-0,-.03142487,0,.99950612],[.99949937,-0,.0316388,0,1,-0,-.0316388,0,.99949937],[.99949255,-0,.03185347,0,1,-0,-.03185347,0,.99949255],[.99948566,-0,.03206886,0,1,-0,-.03206886,0,.99948566],[.9994787,-0,.03228498,0,1,-0,-.03228498,0,.9994787],[.99947168,-0,.03250182,0,1,-0,-.03250182,0,.99947168],[.99946458,-0,.0327194,0,1,-0,-.0327194,0,.99946458],[.99945741,-0,.0329377,0,1,-0,-.0329377,0,.99945741],[.99945016,-0,.03315672,0,1,-0,-.03315672,0,.99945016],[.99944285,-0,.03337647,0,1,-0,-.03337647,0,.99944285],[.99943546,-0,.03359695,0,1,-0,-.03359695,0,.99943546],[.999428,-0,.03381816,0,1,-0,-.03381816,0,.999428],[.99942047,-0,.03404009,0,1,-0,-.03404009,0,.99942047],[.99941286,-0,.03426275,0,1,-0,-.03426275,0,.99941286],[.99940518,-0,.03448614,0,1,-0,-.03448614,0,.99940518],[.99939742,-0,.03471026,0,1,-0,-.03471026,0,.99939742],[.99938958,-0,.0349351,0,1,-0,-.0349351,0,.99938958],[.99938167,-0,.03516066,0,1,-0,-.03516066,0,.99938167],[.99937369,-0,.03538696,0,1,-0,-.03538696,0,.99937369],[.99936562,-0,.03561398,0,1,-0,-.03561398,0,.99936562],[.99935748,-0,.03584173,0,1,-0,-.03584173,0,.99935748],[.99934926,-0,.0360702,0,1,-0,-.0360702,0,.99934926],[.99934096,-0,.03629941,0,1,-0,-.03629941,0,.99934096],[.99933258,-0,.03652934,0,1,-0,-.03652934,0,.99933258],[.99932412,-0,.03675999,0,1,-0,-.03675999,0,.99932412],[.99931558,-0,.03699137,0,1,-0,-.03699137,0,.99931558],[.99930697,-0,.03722348,0,1,-0,-.03722348,0,.99930697],[.99929827,-0,.03745632,0,1,-0,-.03745632,0,.99929827],[.99928948,-0,.03768988,0,1,-0,-.03768988,0,.99928948],[.99928062,-0,.03792417,0,1,-0,-.03792417,0,.99928062],[.99927167,-0,.03815919,0,1,-0,-.03815919,0,.99927167],[.99926264,-0,.03839494,0,1,-0,-.03839494,0,.99926264],[.99925353,-0,.03863141,0,1,-0,-.03863141,0,.99925353],[.99924433,-0,.03886861,0,1,-0,-.03886861,0,.99924433],[.99923505,-0,.03910653,0,1,-0,-.03910653,0,.99923505],[.99922568,-0,.03934518,0,1,-0,-.03934518,0,.99922568],[.99921622,-0,.03958456,0,1,-0,-.03958456,0,.99921622],[.99920668,-0,.03982467,0,1,-0,-.03982467,0,.99920668],[.99919706,-0,.0400655,0,1,-0,-.0400655,0,.99919706],[.99918734,-0,.04030706,0,1,-0,-.04030706,0,.99918734],[.99917754,-0,.04054934,0,1,-0,-.04054934,0,.99917754],[.99916765,-0,.04079236,0,1,-0,-.04079236,0,.99916765],[.99915766,-0,.0410361,0,1,-0,-.0410361,0,.99915766],[.99914759,-0,.04128056,0,1,-0,-.04128056,0,.99914759],[.99913743,-0,.04152576,0,1,-0,-.04152576,0,.99913743],[.99912718,-0,.04177168,0,1,-0,-.04177168,0,.99912718],[.99911684,-0,.04201832,0,1,-0,-.04201832,0,.99911684],[.99910641,-0,.0422657,0,1,-0,-.0422657,0,.99910641],[.99909588,-0,.0425138,0,1,-0,-.0425138,0,.99909588],[.99908526,-0,.04276263,0,1,-0,-.04276263,0,.99908526],[.99907455,-0,.04301218,0,1,-0,-.04301218,0,.99907455],[.99906374,-0,.04326246,0,1,-0,-.04326246,0,.99906374],[.99905284,-0,.04351347,0,1,-0,-.04351347,0,.99905284],[.99904184,-0,.04376521,0,1,-0,-.04376521,0,.99904184],[.99903075,-0,.04401767,0,1,-0,-.04401767,0,.99903075],[.99901957,-0,.04427086,0,1,-0,-.04427086,0,.99901957],[.99900828,-0,.04452477,0,1,-0,-.04452477,0,.99900828],[.9989969,-0,.04477941,0,1,-0,-.04477941,0,.9989969],[.99898542,-0,.04503478,0,1,-0,-.04503478,0,.99898542],[.99897384,-0,.04529088,0,1,-0,-.04529088,0,.99897384],[.99896217,-0,.0455477,0,1,-0,-.0455477,0,.99896217],[.99895039,-0,.04580525,0,1,-0,-.04580525,0,.99895039],[.99893851,-0,.04606352,0,1,-0,-.04606352,0,.99893851],[.99892654,-0,.04632253,0,1,-0,-.04632253,0,.99892654],[.99891446,-0,.04658225,0,1,-0,-.04658225,0,.99891446],[.99890228,-0,.04684271,0,1,-0,-.04684271,0,.99890228],[.99889,-0,.04710389,0,1,-0,-.04710389,0,.99889],[.99887761,-0,.0473658,0,1,-0,-.0473658,0,.99887761],[.99886512,-0,.04762844,0,1,-0,-.04762844,0,.99886512],[.99885253,-0,.0478918,0,1,-0,-.0478918,0,.99885253],[.99883983,-0,.04815589,0,1,-0,-.04815589,0,.99883983],[.99882703,-0,.0484207,0,1,-0,-.0484207,0,.99882703],[.99881412,-0,.04868624,0,1,-0,-.04868624,0,.99881412],[.99880111,-0,.04895251,0,1,-0,-.04895251,0,.99880111],[.99878799,-0,.04921951,0,1,-0,-.04921951,0,.99878799],[.99877476,-0,.04948723,0,1,-0,-.04948723,0,.99877476],[.99876142,-0,.04975568,0,1,-0,-.04975568,0,.99876142],[.99874797,-0,.05002485,0,1,-0,-.05002485,0,.99874797],[.99873442,-0,.05029475,0,1,-0,-.05029475,0,.99873442],[.99872075,-0,.05056538,0,1,-0,-.05056538,0,.99872075],[.99870698,-0,.05083674,0,1,-0,-.05083674,0,.99870698],[.99869309,-0,.05110882,0,1,-0,-.05110882,0,.99869309],[.99867909,-0,.05138162,0,1,-0,-.05138162,0,.99867909],[.99866498,-0,.05165516,0,1,-0,-.05165516,0,.99866498],[.99865076,-0,.05192942,0,1,-0,-.05192942,0,.99865076],[.99863642,-0,.0522044,0,1,-0,-.0522044,0,.99863642],[.99862197,-0,.05248011,0,1,-0,-.05248011,0,.99862197],[.9986074,-0,.05275655,0,1,-0,-.05275655,0,.9986074],[.99859272,-0,.05303372,0,1,-0,-.05303372,0,.99859272],[.99857793,-0,.05331161,0,1,-0,-.05331161,0,.99857793],[.99856301,-0,.05359023,0,1,-0,-.05359023,0,.99856301],[.99854798,-0,.05386957,0,1,-0,-.05386957,0,.99854798],[.99853283,-0,.05414964,0,1,-0,-.05414964,0,.99853283],[.99851756,-0,.05443044,0,1,-0,-.05443044,0,.99851756],[.99850218,-0,.05471196,0,1,-0,-.05471196,0,.99850218],[.99848667,-0,.05499421,0,1,-0,-.05499421,0,.99848667],[.99847105,-0,.05527718,0,1,-0,-.05527718,0,.99847105],[.9984553,-0,.05556088,0,1,-0,-.05556088,0,.9984553],[.99843943,-0,.05584531,0,1,-0,-.05584531,0,.99843943],[.99842344,-0,.05613046,0,1,-0,-.05613046,0,.99842344],[.99840733,-0,.05641634,0,1,-0,-.05641634,0,.99840733],[.99839109,-0,.05670295,0,1,-0,-.05670295,0,.99839109],[.99837473,-0,.05699028,0,1,-0,-.05699028,0,.99837473],[.99835825,-0,.05727834,0,1,-0,-.05727834,0,.99835825],[.99834164,-0,.05756712,0,1,-0,-.05756712,0,.99834164],[.9983249,-0,.05785663,0,1,-0,-.05785663,0,.9983249],[.99830804,-0,.05814686,0,1,-0,-.05814686,0,.99830804],[.99829105,-0,.05843782,0,1,-0,-.05843782,0,.99829105],[.99827393,-0,.05872951,0,1,-0,-.05872951,0,.99827393],[.99825669,-0,.05902192,0,1,-0,-.05902192,0,.99825669],[.99823931,-0,.05931506,0,1,-0,-.05931506,0,.99823931],[.99822181,-0,.05960892,0,1,-0,-.05960892,0,.99822181],[.99820417,-0,.05990351,0,1,-0,-.05990351,0,.99820417],[.99818641,-0,.06019883,0,1,-0,-.06019883,0,.99818641],[.99816851,-0,.06049487,0,1,-0,-.06049487,0,.99816851],[.99815048,-0,.06079164,0,1,-0,-.06079164,0,.99815048],[.99813232,-0,.06108913,0,1,-0,-.06108913,0,.99813232],[.99811402,-0,.06138735,0,1,-0,-.06138735,0,.99811402],[.99809559,-0,.06168629,0,1,-0,-.06168629,0,.99809559],[.99807702,-0,.06198596,0,1,-0,-.06198596,0,.99807702],[.99805832,-0,.06228635,0,1,-0,-.06228635,0,.99805832],[.99803948,-0,.06258747,0,1,-0,-.06258747,0,.99803948],[.99802051,-0,.06288932,0,1,-0,-.06288932,0,.99802051],[.9980014,-0,.06319189,0,1,-0,-.06319189,0,.9980014],[.99798215,-0,.06349518,0,1,-0,-.06349518,0,.99798215],[.99796276,-0,.0637992,0,1,-0,-.0637992,0,.99796276],[.99794323,-0,.06410395,0,1,-0,-.06410395,0,.99794323],[.99792356,-0,.06440942,0,1,-0,-.06440942,0,.99792356],[.99790375,-0,.06471562,0,1,-0,-.06471562,0,.99790375],[.9978838,-0,.06502254,0,1,-0,-.06502254,0,.9978838],[.9978637,-0,.06533019,0,1,-0,-.06533019,0,.9978637],[.99784346,-0,.06563856,0,1,-0,-.06563856,0,.99784346],[.99782308,-0,.06594766,0,1,-0,-.06594766,0,.99782308],[.99780256,-0,.06625748,0,1,-0,-.06625748,0,.99780256],[.99778189,-0,.06656802,0,1,-0,-.06656802,0,.99778189],[.99776107,-0,.0668793,0,1,-0,-.0668793,0,.99776107],[.99774011,-0,.06719129,0,1,-0,-.06719129,0,.99774011],[.997719,-0,.06750401,0,1,-0,-.06750401,0,.997719],[.99769775,-0,.06781746,0,1,-0,-.06781746,0,.99769775],[.99767634,-0,.06813163,0,1,-0,-.06813163,0,.99767634],[.99765479,-0,.06844653,0,1,-0,-.06844653,0,.99765479],[.99763308,-0,.06876215,0,1,-0,-.06876215,0,.99763308],[.99761123,-0,.06907849,0,1,-0,-.06907849,0,.99761123],[.99758922,-0,.06939556,0,1,-0,-.06939556,0,.99758922],[.99756706,-0,.06971335,0,1,-0,-.06971335,0,.99756706],[.99754475,-0,.07003187,0,1,-0,-.07003187,0,.99754475],[.99752229,-0,.07035112,0,1,-0,-.07035112,0,.99752229],[.99749967,-0,.07067108,0,1,-0,-.07067108,0,.99749967],[.9974769,-0,.07099177,0,1,-0,-.07099177,0,.9974769],[.99745397,-0,.07131319,0,1,-0,-.07131319,0,.99745397],[.99743089,-0,.07163533,0,1,-0,-.07163533,0,.99743089],[.99740765,-0,.07195819,0,1,-0,-.07195819,0,.99740765],[.99738425,-0,.07228178,0,1,-0,-.07228178,0,.99738425],[.99736069,-0,.07260609,0,1,-0,-.07260609,0,.99736069],[.99733698,-0,.07293113,0,1,-0,-.07293113,0,.99733698],[.9973131,-0,.07325689,0,1,-0,-.07325689,0,.9973131],[.99728907,-0,.07358338,0,1,-0,-.07358338,0,.99728907],[.99726487,-0,.07391058,0,1,-0,-.07391058,0,.99726487],[.99724051,-0,.07423852,0,1,-0,-.07423852,0,.99724051],[.99721599,-0,.07456717,0,1,-0,-.07456717,0,.99721599],[.99719131,-0,.07489655,0,1,-0,-.07489655,0,.99719131],[.99716646,-0,.07522665,0,1,-0,-.07522665,0,.99716646],[.99714145,-0,.07555748,0,1,-0,-.07555748,0,.99714145],[.99711627,-0,.07588903,0,1,-0,-.07588903,0,.99711627],[.99709093,-0,.0762213,0,1,-0,-.0762213,0,.99709093],[.99706541,-0,.0765543,0,1,-0,-.0765543,0,.99706541],[.99703973,-0,.07688802,0,1,-0,-.07688802,0,.99703973],[.99701389,-0,.07722246,0,1,-0,-.07722246,0,.99701389],[.99698787,-0,.07755763,0,1,-0,-.07755763,0,.99698787],[.99696168,-0,.07789352,0,1,-0,-.07789352,0,.99696168],[.99693533,-0,.07823013,0,1,-0,-.07823013,0,.99693533],[.9969088,-0,.07856747,0,1,-0,-.07856747,0,.9969088],[.9968821,-0,.07890553,0,1,-0,-.07890553,0,.9968821],[.99685522,-0,.07924431,0,1,-0,-.07924431,0,.99685522],[.99682818,-0,.07958382,0,1,-0,-.07958382,0,.99682818],[.99680096,-0,.07992404,0,1,-0,-.07992404,0,.99680096],[.99677356,-0,.08026499,0,1,-0,-.08026499,0,.99677356],[.99674599,-0,.08060667,0,1,-0,-.08060667,0,.99674599],[.99671824,-0,.08094906,0,1,-0,-.08094906,0,.99671824],[.99669031,-0,.08129218,0,1,-0,-.08129218,0,.99669031],[.99666221,-0,.08163602,0,1,-0,-.08163602,0,.99666221],[.99663393,-0,.08198058,0,1,-0,-.08198058,0,.99663393],[.99660546,-0,.08232587,0,1,-0,-.08232587,0,.99660546],[.99657682,-0,.08267188,0,1,-0,-.08267188,0,.99657682],[.996548,-0,.08301861,0,1,-0,-.08301861,0,.996548],[.99651899,-0,.08336606,0,1,-0,-.08336606,0,.99651899],[.9964898,-0,.08371423,0,1,-0,-.08371423,0,.9964898],[.99646043,-0,.08406313,0,1,-0,-.08406313,0,.99646043],[.99643087,-0,.08441275,0,1,-0,-.08441275,0,.99643087],[.99640113,-0,.08476309,0,1,-0,-.08476309,0,.99640113],[.99637121,-0,.08511415,0,1,-0,-.08511415,0,.99637121],[.99634109,-0,.08546593,0,1,-0,-.08546593,0,.99634109],[.99631079,-0,.08581844,0,1,-0,-.08581844,0,.99631079],[.9962803,-0,.08617166,0,1,-0,-.08617166,0,.9962803],[.99624963,-0,.08652561,0,1,-0,-.08652561,0,.99624963],[.99621876,-0,.08688028,0,1,-0,-.08688028,0,.99621876],[.9961877,-0,.08723567,0,1,-0,-.08723567,0,.9961877],[.99615645,-0,.08759178,0,1,-0,-.08759178,0,.99615645],[.99612501,-0,.08794861,0,1,-0,-.08794861,0,.99612501],[.99609338,-0,.08830617,0,1,-0,-.08830617,0,.99609338],[.99606155,-0,.08866444,0,1,-0,-.08866444,0,.99606155],[.99602953,-0,.08902344,0,1,-0,-.08902344,0,.99602953],[.99599732,-0,.08938315,0,1,-0,-.08938315,0,.99599732],[.9959649,-0,.08974359,0,1,-0,-.08974359,0,.9959649],[.99593229,-0,.09010475,0,1,-0,-.09010475,0,.99593229],[.99589949,-0,.09046662,0,1,-0,-.09046662,0,.99589949],[.99586648,-0,.09082922,0,1,-0,-.09082922,0,.99586648],[.99583328,-0,.09119254,0,1,-0,-.09119254,0,.99583328],[.99579988,-0,.09155658,0,1,-0,-.09155658,0,.99579988],[.99576627,-0,.09192134,0,1,-0,-.09192134,0,.99576627],[.99573247,-0,.09228682,0,1,-0,-.09228682,0,.99573247],[.99569846,-0,.09265302,0,1,-0,-.09265302,0,.99569846],[.99566425,-0,.09301994,0,1,-0,-.09301994,0,.99566425],[.99562983,-0,.09338758,0,1,-0,-.09338758,0,.99562983],[.99559521,-0,.09375594,0,1,-0,-.09375594,0,.99559521],[.99556039,-0,.09412502,0,1,-0,-.09412502,0,.99556039],[.99552535,-0,.09449481,0,1,-0,-.09449481,0,.99552535],[.99549011,-0,.09486533,0,1,-0,-.09486533,0,.99549011],[.99545467,-0,.09523657,0,1,-0,-.09523657,0,.99545467],[.99541901,-0,.09560852,0,1,-0,-.09560852,0,.99541901],[.99538315,-0,.0959812,0,1,-0,-.0959812,0,.99538315],[.99534707,-0,.09635459,0,1,-0,-.09635459,0,.99534707],[.99531078,-0,.09672871,0,1,-0,-.09672871,0,.99531078],[.99527429,-0,.09710354,0,1,-0,-.09710354,0,.99527429],[.99523757,-0,.09747909,0,1,-0,-.09747909,0,.99523757],[.99520065,-0,.09785536,0,1,-0,-.09785536,0,.99520065],[.99516351,-0,.09823235,0,1,-0,-.09823235,0,.99516351],[.99512615,-0,.09861006,0,1,-0,-.09861006,0,.99512615],[.99508858,-0,.09898848,0,1,-0,-.09898848,0,.99508858],[.99505079,-0,.09936762,0,1,-0,-.09936762,0,.99505079],[.99501278,-0,.09974749,0,1,-0,-.09974749,0,.99501278],[.99497456,-0,.10012807,0,1,-0,-.10012807,0,.99497456],[.99493611,-0,.10050936,0,1,-0,-.10050936,0,.99493611],[.99489745,-0,.10089138,0,1,-0,-.10089138,0,.99489745],[.99485856,-0,.10127411,0,1,-0,-.10127411,0,.99485856],[.99481945,-0,.10165756,0,1,-0,-.10165756,0,.99481945],[.99478012,-0,.10204173,0,1,-0,-.10204173,0,.99478012],[.99474056,-0,.10242661,0,1,-0,-.10242661,0,.99474056],[.99470078,-0,.10281222,0,1,-0,-.10281222,0,.99470078],[.99466078,-0,.10319854,0,1,-0,-.10319854,0,.99466078],[.99462055,-0,.10358557,0,1,-0,-.10358557,0,.99462055],[.99458009,-0,.10397333,0,1,-0,-.10397333,0,.99458009],[.9945394,-0,.1043618,0,1,-0,-.1043618,0,.9945394],[.99449848,-0,.10475099,0,1,-0,-.10475099,0,.99449848],[.99445734,-0,.10514089,0,1,-0,-.10514089,0,.99445734],[.99441596,-0,.10553151,0,1,-0,-.10553151,0,.99441596],[.99437435,-0,.10592285,0,1,-0,-.10592285,0,.99437435],[.99433251,-0,.1063149,0,1,-0,-.1063149,0,.99433251],[.99429044,-0,.10670767,0,1,-0,-.10670767,0,.99429044],[.99424813,-0,.10710115,0,1,-0,-.10710115,0,.99424813],[.99420559,-0,.10749535,0,1,-0,-.10749535,0,.99420559],[.99416281,-0,.10789027,0,1,-0,-.10789027,0,.99416281],[.99411979,-0,.1082859,0,1,-0,-.1082859,0,.99411979],[.99407654,-0,.10868225,0,1,-0,-.10868225,0,.99407654],[.99403305,-0,.10907931,0,1,-0,-.10907931,0,.99403305],[.99398932,-0,.10947709,0,1,-0,-.10947709,0,.99398932],[.99394535,-0,.10987559,0,1,-0,-.10987559,0,.99394535],[.99390114,-0,.11027479,0,1,-0,-.11027479,0,.99390114],[.99385668,-0,.11067472,0,1,-0,-.11067472,0,.99385668],[.99381199,-0,.11107535,0,1,-0,-.11107535,0,.99381199],[.99376705,-0,.11147671,0,1,-0,-.11147671,0,.99376705],[.99372186,-0,.11187877,0,1,-0,-.11187877,0,.99372186],[.99367643,-0,.11228155,0,1,-0,-.11228155,0,.99367643],[.99363076,-0,.11268505,0,1,-0,-.11268505,0,.99363076],[.99358483,-0,.11308926,0,1,-0,-.11308926,0,.99358483],[.99353866,-0,.11349418,0,1,-0,-.11349418,0,.99353866],[.99349224,-0,.11389982,0,1,-0,-.11389982,0,.99349224],[.99344557,-0,.11430617,0,1,-0,-.11430617,0,.99344557],[.99339865,-0,.11471323,0,1,-0,-.11471323,0,.99339865],[.99335148,-0,.11512101,0,1,-0,-.11512101,0,.99335148],[.99330405,-0,.1155295,0,1,-0,-.1155295,0,.99330405],[.99325637,-0,.1159387,0,1,-0,-.1159387,0,.99325637],[.99320844,-0,.11634862,0,1,-0,-.11634862,0,.99320844],[.99316025,-0,.11675925,0,1,-0,-.11675925,0,.99316025],[.9931118,-0,.11717059,0,1,-0,-.11717059,0,.9931118],[.9930631,-0,.11758265,0,1,-0,-.11758265,0,.9930631],[.99301414,-0,.11799541,0,1,-0,-.11799541,0,.99301414],[.99296492,-0,.11840889,0,1,-0,-.11840889,0,.99296492],[.99291544,-0,.11882308,0,1,-0,-.11882308,0,.99291544],[.9928657,-0,.11923798,0,1,-0,-.11923798,0,.9928657],[.9928157,-0,.1196536,0,1,-0,-.1196536,0,.9928157],[.99276544,-0,.12006992,0,1,-0,-.12006992,0,.99276544],[.99271491,-0,.12048696,0,1,-0,-.12048696,0,.99271491],[.99266412,-0,.12090471,0,1,-0,-.12090471,0,.99266412],[.99261306,-0,.12132317,0,1,-0,-.12132317,0,.99261306],[.99256174,-0,.12174234,0,1,-0,-.12174234,0,.99256174],[.99251015,-0,.12216222,0,1,-0,-.12216222,0,.99251015],[.99245829,-0,.12258281,0,1,-0,-.12258281,0,.99245829],[.99240616,-0,.12300411,0,1,-0,-.12300411,0,.99240616],[.99235376,-0,.12342613,0,1,-0,-.12342613,0,.99235376],[.99230109,-0,.12384885,0,1,-0,-.12384885,0,.99230109],[.99224815,-0,.12427228,0,1,-0,-.12427228,0,.99224815],[.99219494,-0,.12469643,0,1,-0,-.12469643,0,.99219494],[.99214145,-0,.12512128,0,1,-0,-.12512128,0,.99214145],[.99208769,-0,.12554684,0,1,-0,-.12554684,0,.99208769],[.99203366,-0,.12597311,0,1,-0,-.12597311,0,.99203366],[.99197934,-0,.12640009,0,1,-0,-.12640009,0,.99197934],[.99192475,-0,.12682778,0,1,-0,-.12682778,0,.99192475],[.99186988,-0,.12725618,0,1,-0,-.12725618,0,.99186988],[.99181474,-0,.12768528,0,1,-0,-.12768528,0,.99181474],[.99175931,-0,.1281151,0,1,-0,-.1281151,0,.99175931],[.9917036,-0,.12854562,0,1,-0,-.12854562,0,.9917036],[.9916476,-0,.12897685,0,1,-0,-.12897685,0,.9916476],[.99159133,-0,.12940879,0,1,-0,-.12940879,0,.99159133],[.99153477,-0,.12984144,0,1,-0,-.12984144,0,.99153477],[.99147793,-0,.13027479,0,1,-0,-.13027479,0,.99147793],[.9914208,-0,.13070885,0,1,-0,-.13070885,0,.9914208],[.99136338,-0,.13114362,0,1,-0,-.13114362,0,.99136338],[.99130568,-0,.1315791,0,1,-0,-.1315791,0,.99130568],[.99124768,-0,.13201528,0,1,-0,-.13201528,0,.99124768],[.9911894,-0,.13245217,0,1,-0,-.13245217,0,.9911894],[.99113082,-0,.13288976,0,1,-0,-.13288976,0,.99113082],[.99107196,-0,.13332806,0,1,-0,-.13332806,0,.99107196],[.9910128,-0,.13376707,0,1,-0,-.13376707,0,.9910128],[.99095335,-0,.13420679,0,1,-0,-.13420679,0,.99095335],[.9908936,-0,.13464721,0,1,-0,-.13464721,0,.9908936],[.99083356,-0,.13508833,0,1,-0,-.13508833,0,.99083356],[.99077322,-0,.13553016,0,1,-0,-.13553016,0,.99077322],[.99071259,-0,.1359727,0,1,-0,-.1359727,0,.99071259],[.99065165,-0,.13641594,0,1,-0,-.13641594,0,.99065165],[.99059042,-0,.13685988,0,1,-0,-.13685988,0,.99059042],[.99052888,-0,.13730453,0,1,-0,-.13730453,0,.99052888],[.99046705,-0,.13774988,0,1,-0,-.13774988,0,.99046705],[.99040491,-0,.13819594,0,1,-0,-.13819594,0,.99040491],[.99034247,-0,.1386427,0,1,-0,-.1386427,0,.99034247],[.99027972,-0,.13909017,0,1,-0,-.13909017,0,.99027972],[.99021667,-0,.13953834,0,1,-0,-.13953834,0,.99021667],[.99015331,-0,.13998721,0,1,-0,-.13998721,0,.99015331],[.99008965,-0,.14043678,0,1,-0,-.14043678,0,.99008965],[.99002567,-0,.14088706,0,1,-0,-.14088706,0,.99002567],[.98996139,-0,.14133804,0,1,-0,-.14133804,0,.98996139],[.9898968,-0,.14178973,0,1,-0,-.14178973,0,.9898968],[.9898319,-0,.14224211,0,1,-0,-.14224211,0,.9898319],[.98976668,-0,.1426952,0,1,-0,-.1426952,0,.98976668],[.98970115,-0,.14314899,0,1,-0,-.14314899,0,.98970115],[.98963531,-0,.14360348,0,1,-0,-.14360348,0,.98963531],[.98956915,-0,.14405867,0,1,-0,-.14405867,0,.98956915],[.98950267,-0,.14451456,0,1,-0,-.14451456,0,.98950267],[.98943588,-0,.14497116,0,1,-0,-.14497116,0,.98943588],[.98936877,-0,.14542845,0,1,-0,-.14542845,0,.98936877],[.98930134,-0,.14588645,0,1,-0,-.14588645,0,.98930134],[.98923359,-0,.14634514,0,1,-0,-.14634514,0,.98923359],[.98916552,-0,.14680454,0,1,-0,-.14680454,0,.98916552],[.98909713,-0,.14726464,0,1,-0,-.14726464,0,.98909713],[.98902841,-0,.14772543,0,1,-0,-.14772543,0,.98902841],[.98895937,-0,.14818692,0,1,-0,-.14818692,0,.98895937],[.98889,-0,.14864912,0,1,-0,-.14864912,0,.98889],[.98882031,-0,.14911201,0,1,-0,-.14911201,0,.98882031],[.98875029,-0,.1495756,0,1,-0,-.1495756,0,.98875029],[.98867994,-0,.15003989,0,1,-0,-.15003989,0,.98867994],[.98860927,-0,.15050488,0,1,-0,-.15050488,0,.98860927],[.98853826,-0,.15097057,0,1,-0,-.15097057,0,.98853826],[.98846692,-0,.15143695,0,1,-0,-.15143695,0,.98846692],[.98839525,-0,.15190403,0,1,-0,-.15190403,0,.98839525],[.98832324,-0,.15237181,0,1,-0,-.15237181,0,.98832324],[.9882509,-0,.15284028,0,1,-0,-.15284028,0,.9882509],[.98817823,-0,.15330945,0,1,-0,-.15330945,0,.98817823],[.98810522,-0,.15377932,0,1,-0,-.15377932,0,.98810522],[.98803187,-0,.15424989,0,1,-0,-.15424989,0,.98803187],[.98795818,-0,.15472115,0,1,-0,-.15472115,0,.98795818],[.98788415,-0,.15519311,0,1,-0,-.15519311,0,.98788415],[.98780979,-0,.15566576,0,1,-0,-.15566576,0,.98780979],[.98773508,-0,.1561391,0,1,-0,-.1561391,0,.98773508],[.98766002,-0,.15661315,0,1,-0,-.15661315,0,.98766002],[.98758463,-0,.15708788,0,1,-0,-.15708788,0,.98758463],[.98750889,-0,.15756331,0,1,-0,-.15756331,0,.98750889],[.9874328,-0,.15803944,0,1,-0,-.15803944,0,.9874328],[.98735637,-0,.15851626,0,1,-0,-.15851626,0,.98735637],[.98727959,-0,.15899377,0,1,-0,-.15899377,0,.98727959],[.98720246,-0,.15947198,0,1,-0,-.15947198,0,.98720246],[.98712497,-0,.15995088,0,1,-0,-.15995088,0,.98712497],[.98704714,-0,.16043047,0,1,-0,-.16043047,0,.98704714],[.98696896,-0,.16091076,0,1,-0,-.16091076,0,.98696896],[.98689042,-0,.16139174,0,1,-0,-.16139174,0,.98689042],[.98681153,-0,.16187341,0,1,-0,-.16187341,0,.98681153],[.98673229,-0,.16235577,0,1,-0,-.16235577,0,.98673229],[.98665268,-0,.16283882,0,1,-0,-.16283882,0,.98665268],[.98657272,-0,.16332257,0,1,-0,-.16332257,0,.98657272],[.98649241,-0,.163807,0,1,-0,-.163807,0,.98649241],[.98641173,-0,.16429213,0,1,-0,-.16429213,0,.98641173],[.98633069,-0,.16477795,0,1,-0,-.16477795,0,.98633069],[.98624929,-0,.16526445,0,1,-0,-.16526445,0,.98624929],[.98616753,-0,.16575165,0,1,-0,-.16575165,0,.98616753],[.9860854,-0,.16623954,0,1,-0,-.16623954,0,.9860854],[.98600291,-0,.16672812,0,1,-0,-.16672812,0,.98600291],[.98592005,-0,.16721738,0,1,-0,-.16721738,0,.98592005],[.98583683,-0,.16770733,0,1,-0,-.16770733,0,.98583683],[.98575324,-0,.16819798,0,1,-0,-.16819798,0,.98575324],[.98566927,-0,.16868931,0,1,-0,-.16868931,0,.98566927],[.98558494,-0,.16918133,0,1,-0,-.16918133,0,.98558494],[.98550024,-0,.16967403,0,1,-0,-.16967403,0,.98550024],[.98541516,-0,.17016743,0,1,-0,-.17016743,0,.98541516],[.98532972,-0,.17066151,0,1,-0,-.17066151,0,.98532972],[.98524389,-0,.17115627,0,1,-0,-.17115627,0,.98524389],[.9851577,-0,.17165173,0,1,-0,-.17165173,0,.9851577],[.98507112,-0,.17214787,0,1,-0,-.17214787,0,.98507112],[.98498417,-0,.17264469,0,1,-0,-.17264469,0,.98498417],[.98489684,-0,.17314221,0,1,-0,-.17314221,0,.98489684],[.98480912,-0,.1736404,0,1,-0,-.1736404,0,.98480912],[.98472103,-0,.17413928,0,1,-0,-.17413928,0,.98472103],[.98463256,-0,.17463885,0,1,-0,-.17463885,0,.98463256],[.9845437,-0,.1751391,0,1,-0,-.1751391,0,.9845437],[.98445446,-0,.17564003,0,1,-0,-.17564003,0,.98445446],[.98436483,-0,.17614165,0,1,-0,-.17614165,0,.98436483],[.98427482,-0,.17664395,0,1,-0,-.17664395,0,.98427482],[.98418441,-0,.17714694,0,1,-0,-.17714694,0,.98418441],[.98409363,-0,.1776506,0,1,-0,-.1776506,0,.98409363],[.98400245,-0,.17815495,0,1,-0,-.17815495,0,.98400245],[.98391087,-0,.17865999,0,1,-0,-.17865999,0,.98391087],[.98381891,-0,.1791657,0,1,-0,-.1791657,0,.98381891],[.98372656,-0,.17967209,0,1,-0,-.17967209,0,.98372656],[.98363381,-0,.18017917,0,1,-0,-.18017917,0,.98363381],[.98354066,-0,.18068693,0,1,-0,-.18068693,0,.98354066],[.98344712,-0,.18119536,0,1,-0,-.18119536,0,.98344712],[.98335318,-0,.18170448,0,1,-0,-.18170448,0,.98335318],[.98325885,-0,.18221428,0,1,-0,-.18221428,0,.98325885],[.98316411,-0,.18272475,0,1,-0,-.18272475,0,.98316411],[.98306897,-0,.18323591,0,1,-0,-.18323591,0,.98306897],[.98297343,-0,.18374774,0,1,-0,-.18374774,0,.98297343],[.98287749,-0,.18426026,0,1,-0,-.18426026,0,.98287749],[.98278114,-0,.18477345,0,1,-0,-.18477345,0,.98278114],[.98268439,-0,.18528732,0,1,-0,-.18528732,0,.98268439],[.98258723,-0,.18580186,0,1,-0,-.18580186,0,.98258723],[.98248967,-0,.18631708,0,1,-0,-.18631708,0,.98248967],[.98239169,-0,.18683298,0,1,-0,-.18683298,0,.98239169],[.98229331,-0,.18734956,0,1,-0,-.18734956,0,.98229331],[.98219451,-0,.18786681,0,1,-0,-.18786681,0,.98219451],[.98209531,-0,.18838474,0,1,-0,-.18838474,0,.98209531],[.98199569,-0,.18890334,0,1,-0,-.18890334,0,.98199569],[.98189565,-0,.18942262,0,1,-0,-.18942262,0,.98189565],[.9817952,-0,.18994257,0,1,-0,-.18994257,0,.9817952],[.98169434,-0,.1904632,0,1,-0,-.1904632,0,.98169434],[.98159305,-0,.1909845,0,1,-0,-.1909845,0,.98159305],[.98149135,-0,.19150648,0,1,-0,-.19150648,0,.98149135],[.98138923,-0,.19202912,0,1,-0,-.19202912,0,.98138923],[.98128668,-0,.19255244,0,1,-0,-.19255244,0,.98128668],[.98118372,-0,.19307644,0,1,-0,-.19307644,0,.98118372],[.98108033,-0,.1936011,0,1,-0,-.1936011,0,.98108033],[.98097652,-0,.19412644,0,1,-0,-.19412644,0,.98097652],[.98087228,-0,.19465245,0,1,-0,-.19465245,0,.98087228],[.98076761,-0,.19517913,0,1,-0,-.19517913,0,.98076761],[.98066252,-0,.19570647,0,1,-0,-.19570647,0,.98066252],[.980557,-0,.19623449,0,1,-0,-.19623449,0,.980557],[.98045104,-0,.19676318,0,1,-0,-.19676318,0,.98045104],[.98034466,-0,.19729254,0,1,-0,-.19729254,0,.98034466],[.98023784,-0,.19782257,0,1,-0,-.19782257,0,.98023784],[.98013059,-0,.19835327,0,1,-0,-.19835327,0,.98013059],[.98002291,-0,.19888463,0,1,-0,-.19888463,0,.98002291],[.97991479,-0,.19941666,0,1,-0,-.19941666,0,.97991479],[.97980623,-0,.19994936,0,1,-0,-.19994936,0,.97980623],[.97969724,-0,.20048273,0,1,-0,-.20048273,0,.97969724],[.9795878,-0,.20101676,0,1,-0,-.20101676,0,.9795878],[.97947793,-0,.20155146,0,1,-0,-.20155146,0,.97947793],[.97936761,-0,.20208683,0,1,-0,-.20208683,0,.97936761],[.97925685,-0,.20262286,0,1,-0,-.20262286,0,.97925685],[.97914565,-0,.20315956,0,1,-0,-.20315956,0,.97914565],[.979034,-0,.20369692,0,1,-0,-.20369692,0,.979034],[.9789219,-0,.20423494,0,1,-0,-.20423494,0,.9789219],[.97880936,-0,.20477363,0,1,-0,-.20477363,0,.97880936],[.97869637,-0,.20531299,0,1,-0,-.20531299,0,.97869637],[.97858293,-0,.205853,0,1,-0,-.205853,0,.97858293],[.97846903,-0,.20639368,0,1,-0,-.20639368,0,.97846903],[.97835469,-0,.20693502,0,1,-0,-.20693502,0,.97835469],[.97823989,-0,.20747702,0,1,-0,-.20747702,0,.97823989],[.97812464,-0,.20801969,0,1,-0,-.20801969,0,.97812464],[.97800893,-0,.20856301,0,1,-0,-.20856301,0,.97800893],[.97789277,-0,.209107,0,1,-0,-.209107,0,.97789277],[.97777614,-0,.20965164,0,1,-0,-.20965164,0,.97777614],[.97765906,-0,.21019695,0,1,-0,-.21019695,0,.97765906],[.97754152,-0,.21074291,0,1,-0,-.21074291,0,.97754152],[.97742352,-0,.21128954,0,1,-0,-.21128954,0,.97742352],[.97730505,-0,.21183682,0,1,-0,-.21183682,0,.97730505],[.97718612,-0,.21238476,0,1,-0,-.21238476,0,.97718612],[.97706673,-0,.21293336,0,1,-0,-.21293336,0,.97706673],[.97694686,-0,.21348261,0,1,-0,-.21348261,0,.97694686],[.97682654,-0,.21403252,0,1,-0,-.21403252,0,.97682654],[.97670574,-0,.21458309,0,1,-0,-.21458309,0,.97670574],[.97658447,-0,.21513431,0,1,-0,-.21513431,0,.97658447],[.97646273,-0,.21568619,0,1,-0,-.21568619,0,.97646273],[.97634052,-0,.21623872,0,1,-0,-.21623872,0,.97634052],[.97621784,-0,.21679191,0,1,-0,-.21679191,0,.97621784],[.97609468,-0,.21734575,0,1,-0,-.21734575,0,.97609468],[.97597105,-0,.21790025,0,1,-0,-.21790025,0,.97597105],[.97584693,-0,.2184554,0,1,-0,-.2184554,0,.97584693],[.97572235,-0,.2190112,0,1,-0,-.2190112,0,.97572235],[.97559728,-0,.21956765,0,1,-0,-.21956765,0,.97559728],[.97547173,-0,.22012476,0,1,-0,-.22012476,0,.97547173],[.9753457,-0,.22068251,0,1,-0,-.22068251,0,.9753457],[.97521918,-0,.22124092,0,1,-0,-.22124092,0,.97521918],[.97509219,-0,.22179998,0,1,-0,-.22179998,0,.97509219],[.9749647,-0,.22235968,0,1,-0,-.22235968,0,.9749647],[.97483673,-0,.22292004,0,1,-0,-.22292004,0,.97483673],[.97470828,-0,.22348104,0,1,-0,-.22348104,0,.97470828],[.97457933,-0,.2240427,0,1,-0,-.2240427,0,.97457933],[.97444989,-0,.224605,0,1,-0,-.224605,0,.97444989],[.97431997,-0,.22516795,0,1,-0,-.22516795,0,.97431997],[.97418954,-0,.22573155,0,1,-0,-.22573155,0,.97418954],[.97405863,-0,.22629579,0,1,-0,-.22629579,0,.97405863],[.97392722,-0,.22686068,0,1,-0,-.22686068,0,.97392722],[.97379532,-0,.22742621,0,1,-0,-.22742621,0,.97379532],[.97366291,-0,.22799239,0,1,-0,-.22799239,0,.97366291],[.97353001,-0,.22855921,0,1,-0,-.22855921,0,.97353001],[.97339661,-0,.22912668,0,1,-0,-.22912668,0,.97339661],[.97326271,-0,.22969479,0,1,-0,-.22969479,0,.97326271],[.97312831,-0,.23026355,0,1,-0,-.23026355,0,.97312831],[.9729934,-0,.23083294,0,1,-0,-.23083294,0,.9729934],[.97285799,-0,.23140298,0,1,-0,-.23140298,0,.97285799],[.97272207,-0,.23197366,0,1,-0,-.23197366,0,.97272207],[.97258564,-0,.23254499,0,1,-0,-.23254499,0,.97258564],[.97244871,-0,.23311695,0,1,-0,-.23311695,0,.97244871],[.97231126,-0,.23368955,0,1,-0,-.23368955,0,.97231126],[.97217331,-0,.23426279,0,1,-0,-.23426279,0,.97217331],[.97203484,-0,.23483667,0,1,-0,-.23483667,0,.97203484],[.97189586,-0,.23541119,0,1,-0,-.23541119,0,.97189586],[.97175637,-0,.23598635,0,1,-0,-.23598635,0,.97175637],[.97161636,-0,.23656214,0,1,-0,-.23656214,0,.97161636],[.97147583,-0,.23713857,0,1,-0,-.23713857,0,.97147583],[.97133479,-0,.23771564,0,1,-0,-.23771564,0,.97133479],[.97119323,-0,.23829335,0,1,-0,-.23829335,0,.97119323],[.97105114,-0,.23887168,0,1,-0,-.23887168,0,.97105114],[.97090853,-0,.23945066,0,1,-0,-.23945066,0,.97090853],[.9707654,-0,.24003027,0,1,-0,-.24003027,0,.9707654],[.97062175,-0,.24061051,0,1,-0,-.24061051,0,.97062175],[.97047757,-0,.24119138,0,1,-0,-.24119138,0,.97047757],[.97033286,-0,.24177289,0,1,-0,-.24177289,0,.97033286],[.97018763,-0,.24235503,0,1,-0,-.24235503,0,.97018763],[.97004187,-0,.2429378,0,1,-0,-.2429378,0,.97004187],[.96989557,-0,.24352121,0,1,-0,-.24352121,0,.96989557],[.96974875,-0,.24410524,0,1,-0,-.24410524,0,.96974875],[.96960139,-0,.2446899,0,1,-0,-.2446899,0,.96960139],[.9694535,-0,.24527519,0,1,-0,-.24527519,0,.9694535],[.96930507,-0,.24586112,0,1,-0,-.24586112,0,.96930507],[.9691561,-0,.24644766,0,1,-0,-.24644766,0,.9691561],[.9690066,-0,.24703484,0,1,-0,-.24703484,0,.9690066],[.96885656,-0,.24762265,0,1,-0,-.24762265,0,.96885656],[.96870597,-0,.24821108,0,1,-0,-.24821108,0,.96870597],[.96855485,-0,.24880013,0,1,-0,-.24880013,0,.96855485],[.96840318,-0,.24938982,0,1,-0,-.24938982,0,.96840318],[.96825097,-0,.24998012,0,1,-0,-.24998012,0,.96825097],[.96809821,-0,.25057105,0,1,-0,-.25057105,0,.96809821],[.96794491,-0,.25116261,0,1,-0,-.25116261,0,.96794491],[.96779106,-0,.25175479,0,1,-0,-.25175479,0,.96779106],[.96763665,-0,.25234759,0,1,-0,-.25234759,0,.96763665],[.9674817,-0,.25294101,0,1,-0,-.25294101,0,.9674817],[.9673262,0,.25353506,0,1,-0,-.25353506,0,.9673262],[.96717014,0,.25412972,0,1,-0,-.25412972,0,.96717014],[.96701353,0,.25472501,0,1,-0,-.25472501,0,.96701353],[.96685637,0,.25532091,0,1,-0,-.25532091,0,.96685637],[.96669864,0,.25591743,0,1,-0,-.25591743,0,.96669864],[.96654036,0,.25651458,0,1,-0,-.25651458,0,.96654036],[.96638152,0,.25711234,0,1,-0,-.25711234,0,.96638152],[.96622212,0,.25771071,0,1,-0,-.25771071,0,.96622212],[.96606216,0,.25830971,0,1,-0,-.25830971,0,.96606216],[.96590163,0,.25890932,0,1,-0,-.25890932,0,.96590163],[.96574054,0,.25950954,0,1,-0,-.25950954,0,.96574054],[.96557889,0,.26011038,0,1,-0,-.26011038,0,.96557889],[.96541666,0,.26071184,0,1,-0,-.26071184,0,.96541666],[.96525387,0,.26131391,0,1,-0,-.26131391,0,.96525387],[.96509051,0,.26191659,0,1,-0,-.26191659,0,.96509051],[.96492658,0,.26251988,0,1,-0,-.26251988,0,.96492658],[.96476208,0,.26312379,0,1,-0,-.26312379,0,.96476208],[.96459701,0,.2637283,0,1,-0,-.2637283,0,.96459701],[.96443135,0,.26433343,0,1,-0,-.26433343,0,.96443135],[.96426513,0,.26493917,0,1,-0,-.26493917,0,.96426513],[.96409833,0,.26554551,0,1,-0,-.26554551,0,.96409833],[.96393094,0,.26615247,0,1,-0,-.26615247,0,.96393094],[.96376298,0,.26676003,0,1,-0,-.26676003,0,.96376298],[.96359444,0,.2673682,0,1,-0,-.2673682,0,.96359444],[.96342532,0,.26797697,0,1,-0,-.26797697,0,.96342532],[.96325561,0,.26858636,0,1,-0,-.26858636,0,.96325561],[.96308532,0,.26919634,0,1,-0,-.26919634,0,.96308532],[.96291444,0,.26980694,0,1,-0,-.26980694,0,.96291444],[.96274297,0,.27041813,0,1,-0,-.27041813,0,.96274297],[.96257092,0,.27102993,0,1,-0,-.27102993,0,.96257092],[.96239828,0,.27164234,0,1,-0,-.27164234,0,.96239828],[.96222504,0,.27225534,0,1,-0,-.27225534,0,.96222504],[.96205121,0,.27286895,0,1,-0,-.27286895,0,.96205121],[.96187679,0,.27348315,0,1,-0,-.27348315,0,.96187679],[.96170178,0,.27409796,0,1,-0,-.27409796,0,.96170178],[.96152616,0,.27471337,0,1,-0,-.27471337,0,.96152616],[.96134996,0,.27532937,0,1,-0,-.27532937,0,.96134996],[.96117315,0,.27594598,0,1,-0,-.27594598,0,.96117315],[.96099574,0,.27656318,0,1,-0,-.27656318,0,.96099574],[.96081773,0,.27718098,0,1,-0,-.27718098,0,.96081773],[.96063912,0,.27779937,0,1,-0,-.27779937,0,.96063912],[.9604599,0,.27841836,0,1,-0,-.27841836,0,.9604599],[.96028008,0,.27903794,0,1,-0,-.27903794,0,.96028008],[.96009965,0,.27965812,0,1,-0,-.27965812,0,.96009965],[.95991861,0,.28027889,0,1,-0,-.28027889,0,.95991861],[.95973697,0,.28090026,0,1,-0,-.28090026,0,.95973697],[.95955471,0,.28152221,0,1,-0,-.28152221,0,.95955471],[.95937184,0,.28214476,0,1,-0,-.28214476,0,.95937184],[.95918836,0,.2827679,0,1,-0,-.2827679,0,.95918836],[.95900427,0,.28339162,0,1,-0,-.28339162,0,.95900427],[.95881956,0,.28401594,0,1,-0,-.28401594,0,.95881956],[.95863423,0,.28464085,0,1,-0,-.28464085,0,.95863423],[.95844829,0,.28526634,0,1,-0,-.28526634,0,.95844829],[.95826172,0,.28589242,0,1,-0,-.28589242,0,.95826172],[.95807453,0,.28651909,0,1,-0,-.28651909,0,.95807453],[.95788673,0,.28714634,0,1,-0,-.28714634,0,.95788673],[.9576983,0,.28777417,0,1,-0,-.28777417,0,.9576983],[.95750924,0,.2884026,0,1,-0,-.2884026,0,.95750924],[.95731956,0,.2890316,0,1,-0,-.2890316,0,.95731956],[.95712925,0,.28966119,0,1,-0,-.28966119,0,.95712925],[.95693831,0,.29029136,0,1,-0,-.29029136,0,.95693831],[.95674674,0,.29092211,0,1,-0,-.29092211,0,.95674674],[.95655454,0,.29155344,0,1,-0,-.29155344,0,.95655454],[.95636171,0,.29218535,0,1,-0,-.29218535,0,.95636171],[.95616825,0,.29281784,0,1,-0,-.29281784,0,.95616825],[.95597415,0,.2934509,0,1,-0,-.2934509,0,.95597415],[.95577941,0,.29408455,0,1,-0,-.29408455,0,.95577941],[.95558403,0,.29471877,0,1,-0,-.29471877,0,.95558403],[.95538802,0,.29535357,0,1,-0,-.29535357,0,.95538802],[.95519137,0,.29598894,0,1,-0,-.29598894,0,.95519137],[.95499407,0,.29662489,0,1,-0,-.29662489,0,.95499407],[.95479613,0,.29726141,0,1,-0,-.29726141,0,.95479613],[.95459755,0,.29789851,0,1,-0,-.29789851,0,.95459755],[.95439832,0,.29853617,0,1,-0,-.29853617,0,.95439832],[.95419844,0,.29917441,0,1,-0,-.29917441,0,.95419844],[.95399792,0,.29981322,0,1,-0,-.29981322,0,.95399792],[.95379675,0,.3004526,0,1,-0,-.3004526,0,.95379675],[.95359492,0,.30109255,0,1,-0,-.30109255,0,.95359492],[.95339245,0,.30173306,0,1,-0,-.30173306,0,.95339245],[.95318932,0,.30237415,0,1,-0,-.30237415,0,.95318932],[.95298553,0,.3030158,0,1,-0,-.3030158,0,.95298553],[.95278109,0,.30365802,0,1,-0,-.30365802,0,.95278109],[.95257599,0,.3043008,0,1,-0,-.3043008,0,.95257599],[.95237024,0,.30494414,0,1,-0,-.30494414,0,.95237024],[.95216382,0,.30558805,0,1,-0,-.30558805,0,.95216382],[.95195674,0,.30623253,0,1,-0,-.30623253,0,.95195674],[.951749,0,.30687756,0,1,-0,-.30687756,0,.951749],[.9515406,0,.30752316,0,1,-0,-.30752316,0,.9515406],[.95133153,0,.30816931,0,1,-0,-.30816931,0,.95133153],[.95112179,0,.30881603,0,1,-0,-.30881603,0,.95112179],[.95091138,0,.30946331,0,1,-0,-.30946331,0,.95091138],[.95070031,0,.31011114,0,1,-0,-.31011114,0,.95070031],[.95048857,0,.31075953,0,1,-0,-.31075953,0,.95048857],[.95027615,0,.31140848,0,1,-0,-.31140848,0,.95027615],[.95006306,0,.31205798,0,1,-0,-.31205798,0,.95006306],[.9498493,0,.31270804,0,1,-0,-.31270804,0,.9498493],[.94963486,0,.31335865,0,1,-0,-.31335865,0,.94963486],[.94941974,0,.31400981,0,1,-0,-.31400981,0,.94941974],[.94920394,0,.31466153,0,1,-0,-.31466153,0,.94920394],[.94898747,0,.3153138,0,1,-0,-.3153138,0,.94898747],[.94877031,0,.31596661,0,1,-0,-.31596661,0,.94877031],[.94855247,0,.31661998,0,1,-0,-.31661998,0,.94855247],[.94833395,0,.3172739,0,1,-0,-.3172739,0,.94833395],[.94811474,0,.31792836,0,1,-0,-.31792836,0,.94811474],[.94789484,0,.31858338,0,1,-0,-.31858338,0,.94789484],[.94767426,0,.31923894,0,1,-0,-.31923894,0,.94767426],[.94745299,0,.31989504,0,1,-0,-.31989504,0,.94745299],[.94723102,0,.32055169,0,1,-0,-.32055169,0,.94723102],[.94700837,0,.32120888,0,1,-0,-.32120888,0,.94700837],[.94678502,0,.32186662,0,1,-0,-.32186662,0,.94678502],[.94656098,0,.32252489,0,1,-0,-.32252489,0,.94656098],[.94633624,0,.32318371,0,1,-0,-.32318371,0,.94633624],[.94611081,0,.32384307,0,1,-0,-.32384307,0,.94611081],[.94588468,0,.32450297,0,1,-0,-.32450297,0,.94588468],[.94565784,0,.32516341,0,1,-0,-.32516341,0,.94565784],[.94543031,0,.32582438,0,1,-0,-.32582438,0,.94543031],[.94520207,0,.32648589,0,1,-0,-.32648589,0,.94520207],[.94497313,0,.32714794,0,1,-0,-.32714794,0,.94497313],[.94474349,0,.32781053,0,1,-0,-.32781053,0,.94474349],[.94451314,0,.32847364,0,1,-0,-.32847364,0,.94451314],[.94428208,0,.32913729,0,1,-0,-.32913729,0,.94428208],[.94405031,0,.32980147,0,1,-0,-.32980147,0,.94405031],[.94381783,0,.33046619,0,1,-0,-.33046619,0,.94381783],[.94358464,0,.33113143,0,1,-0,-.33113143,0,.94358464],[.94335074,0,.33179721,0,1,-0,-.33179721,0,.94335074],[.94311612,0,.33246351,0,1,-0,-.33246351,0,.94311612],[.94288079,0,.33313034,0,1,-0,-.33313034,0,.94288079],[.94264474,0,.3337977,0,1,-0,-.3337977,0,.94264474],[.94240797,0,.33446558,0,1,-0,-.33446558,0,.94240797],[.94217048,0,.33513399,0,1,-0,-.33513399,0,.94217048],[.94193227,0,.33580292,0,1,-0,-.33580292,0,.94193227],[.94169334,0,.33647238,0,1,-0,-.33647238,0,.94169334],[.94145368,0,.33714236,0,1,-0,-.33714236,0,.94145368],[.9412133,0,.33781286,0,1,-0,-.33781286,0,.9412133],[.94097219,0,.33848388,0,1,-0,-.33848388,0,.94097219],[.94073036,0,.33915542,0,1,-0,-.33915542,0,.94073036],[.94048779,0,.33982748,0,1,-0,-.33982748,0,.94048779],[.9402445,0,.34050005,0,1,-0,-.34050005,0,.9402445],[.94000047,0,.34117314,0,1,-0,-.34117314,0,.94000047],[.93975571,0,.34184675,0,1,-0,-.34184675,0,.93975571],[.93951022,0,.34252088,0,1,-0,-.34252088,0,.93951022],[.93926399,0,.34319551,0,1,-0,-.34319551,0,.93926399],[.93901702,0,.34387066,0,1,-0,-.34387066,0,.93901702],[.93876932,0,.34454632,0,1,-0,-.34454632,0,.93876932],[.93852087,0,.3452225,0,1,-0,-.3452225,0,.93852087],[.93827169,0,.34589918,0,1,-0,-.34589918,0,.93827169],[.93802176,0,.34657637,0,1,-0,-.34657637,0,.93802176],[.93777109,0,.34725407,0,1,-0,-.34725407,0,.93777109],[.93751967,0,.34793228,0,1,-0,-.34793228,0,.93751967],[.93726751,0,.34861099,0,1,-0,-.34861099,0,.93726751],[.93701459,0,.34929021,0,1,-0,-.34929021,0,.93701459],[.93676093,0,.34996993,0,1,-0,-.34996993,0,.93676093],[.93650652,0,.35065015,0,1,-0,-.35065015,0,.93650652],[.93625136,0,.35133088,0,1,-0,-.35133088,0,.93625136],[.93599545,0,.35201211,0,1,-0,-.35201211,0,.93599545],[.93573878,0,.35269384,0,1,-0,-.35269384,0,.93573878],[.93548135,0,.35337607,0,1,-0,-.35337607,0,.93548135],[.93522317,0,.35405879,0,1,-0,-.35405879,0,.93522317],[.93496422,0,.35474202,0,1,-0,-.35474202,0,.93496422],[.93470452,0,.35542574,0,1,-0,-.35542574,0,.93470452],[.93444406,0,.35610995,0,1,-0,-.35610995,0,.93444406],[.93418284,0,.35679466,0,1,-0,-.35679466,0,.93418284],[.93392085,0,.35747986,0,1,-0,-.35747986,0,.93392085],[.93365809,0,.35816555,0,1,-0,-.35816555,0,.93365809],[.93339457,0,.35885174,0,1,-0,-.35885174,0,.93339457],[.93313029,0,.35953841,0,1,-0,-.35953841,0,.93313029],[.93286523,0,.36022558,0,1,-0,-.36022558,0,.93286523],[.9325994,0,.36091323,0,1,-0,-.36091323,0,.9325994],[.9323328,0,.36160137,0,1,-0,-.36160137,0,.9323328],[.93206543,0,.36228999,0,1,-0,-.36228999,0,.93206543],[.93179728,0,.3629791,0,1,-0,-.3629791,0,.93179728],[.93152836,0,.36366869,0,1,-0,-.36366869,0,.93152836],[.93125866,0,.36435877,0,1,-0,-.36435877,0,.93125866],[.93098818,0,.36504933,0,1,-0,-.36504933,0,.93098818],[.93071692,0,.36574037,0,1,-0,-.36574037,0,.93071692],[.93044488,0,.36643188,0,1,-0,-.36643188,0,.93044488],[.93017206,0,.36712388,0,1,-0,-.36712388,0,.93017206],[.92989845,0,.36781635,0,1,-0,-.36781635,0,.92989845],[.92962406,0,.3685093,0,1,-0,-.3685093,0,.92962406],[.92934888,0,.36920273,0,1,-0,-.36920273,0,.92934888],[.92907292,0,.36989663,0,1,-0,-.36989663,0,.92907292],[.92879616,0,.370591,0,1,-0,-.370591,0,.92879616],[.92851862,0,.37128585,0,1,-0,-.37128585,0,.92851862],[.92824028,0,.37198116,0,1,-0,-.37198116,0,.92824028],[.92796115,0,.37267695,0,1,-0,-.37267695,0,.92796115],[.92768122,0,.37337321,0,1,-0,-.37337321,0,.92768122],[.9274005,0,.37406993,0,1,-0,-.37406993,0,.9274005],[.92711898,0,.37476712,0,1,-0,-.37476712,0,.92711898],[.92683667,0,.37546477,0,1,-0,-.37546477,0,.92683667],[.92655355,0,.37616289,0,1,-0,-.37616289,0,.92655355],[.92626963,0,.37686148,0,1,-0,-.37686148,0,.92626963],[.92598491,0,.37756052,0,1,-0,-.37756052,0,.92598491],[.92569939,0,.37826003,0,1,-0,-.37826003,0,.92569939],[.92541306,0,.37895999,0,1,-0,-.37895999,0,.92541306],[.92512592,0,.37966042,0,1,-0,-.37966042,0,.92512592],[.92483798,0,.3803613,0,1,-0,-.3803613,0,.92483798],[.92454922,0,.38106264,0,1,-0,-.38106264,0,.92454922],[.92425966,0,.38176444,0,1,-0,-.38176444,0,.92425966],[.92396928,0,.38246669,0,1,-0,-.38246669,0,.92396928],[.92367809,0,.38316939,0,1,-0,-.38316939,0,.92367809],[.92338609,0,.38387254,0,1,-0,-.38387254,0,.92338609],[.92309327,0,.38457615,0,1,-0,-.38457615,0,.92309327],[.92279963,0,.38528021,0,1,-0,-.38528021,0,.92279963],[.92250518,0,.38598471,0,1,-0,-.38598471,0,.92250518],[.9222099,0,.38668966,0,1,-0,-.38668966,0,.9222099],[.92191381,0,.38739506,0,1,-0,-.38739506,0,.92191381],[.92161689,0,.38810091,0,1,-0,-.38810091,0,.92161689],[.92131914,0,.38880719,0,1,-0,-.38880719,0,.92131914],[.92102058,0,.38951392,0,1,-0,-.38951392,0,.92102058],[.92072118,0,.3902211,0,1,-0,-.3902211,0,.92072118],[.92042096,0,.39092871,0,1,-0,-.39092871,0,.92042096],[.92011991,0,.39163676,0,1,-0,-.39163676,0,.92011991],[.91981803,0,.39234526,0,1,-0,-.39234526,0,.91981803],[.91951531,0,.39305418,0,1,-0,-.39305418,0,.91951531],[.91921176,0,.39376355,0,1,-0,-.39376355,0,.91921176],[.91890738,0,.39447335,0,1,-0,-.39447335,0,.91890738],[.91860217,0,.39518358,0,1,-0,-.39518358,0,.91860217],[.91829611,0,.39589424,0,1,-0,-.39589424,0,.91829611],[.91798922,0,.39660534,0,1,-0,-.39660534,0,.91798922],[.91768149,0,.39731687,0,1,-0,-.39731687,0,.91768149],[.91737291,0,.39802882,0,1,-0,-.39802882,0,.91737291],[.91706349,0,.3987412,0,1,-0,-.3987412,0,.91706349],[.91675323,0,.39945401,0,1,-0,-.39945401,0,.91675323],[.91644213,0,.40016725,0,1,-0,-.40016725,0,.91644213],[.91613018,0,.4008809,0,1,-0,-.4008809,0,.91613018],[.91581738,0,.40159498,0,1,-0,-.40159498,0,.91581738],[.91550373,0,.40230949,0,1,-0,-.40230949,0,.91550373],[.91518923,0,.40302441,0,1,-0,-.40302441,0,.91518923],[.91487388,0,.40373975,0,1,-0,-.40373975,0,.91487388],[.91455768,0,.40445551,0,1,-0,-.40445551,0,.91455768],[.91424062,0,.40517168,0,1,-0,-.40517168,0,.91424062],[.9139227,0,.40588828,0,1,-0,-.40588828,0,.9139227],[.91360393,0,.40660528,0,1,-0,-.40660528,0,.91360393],[.9132843,0,.4073227,0,1,-0,-.4073227,0,.9132843],[.91296382,0,.40804053,0,1,-0,-.40804053,0,.91296382],[.91264247,0,.40875877,0,1,-0,-.40875877,0,.91264247],[.91232025,0,.40947742,0,1,-0,-.40947742,0,.91232025],[.91199718,0,.41019647,0,1,-0,-.41019647,0,.91199718],[.91167324,0,.41091594,0,1,-0,-.41091594,0,.91167324],[.91134843,0,.41163581,0,1,-0,-.41163581,0,.91134843],[.91102276,0,.41235608,0,1,-0,-.41235608,0,.91102276],[.91069621,0,.41307676,0,1,-0,-.41307676,0,.91069621],[.9103688,0,.41379783,0,1,-0,-.41379783,0,.9103688],[.91004052,0,.41451931,0,1,-0,-.41451931,0,.91004052],[.90971136,0,.41524119,0,1,-0,-.41524119,0,.90971136],[.90938133,0,.41596346,0,1,-0,-.41596346,0,.90938133],[.90905042,0,.41668613,0,1,-0,-.41668613,0,.90905042],[.90871864,0,.4174092,0,1,-0,-.4174092,0,.90871864],[.90838598,0,.41813266,0,1,-0,-.41813266,0,.90838598],[.90805243,0,.41885651,0,1,-0,-.41885651,0,.90805243],[.90771801,0,.41958075,0,1,-0,-.41958075,0,.90771801],[.90738271,0,.42030539,0,1,-0,-.42030539,0,.90738271],[.90704652,0,.42103041,0,1,-0,-.42103041,0,.90704652],[.90670945,0,.42175582,0,1,-0,-.42175582,0,.90670945],[.90637149,0,.42248161,0,1,-0,-.42248161,0,.90637149],[.90603265,0,.42320779,0,1,-0,-.42320779,0,.90603265],[.90569292,0,.42393436,0,1,-0,-.42393436,0,.90569292],[.9053523,0,.4246613,0,1,-0,-.4246613,0,.9053523],[.90501078,0,.42538863,0,1,-0,-.42538863,0,.90501078],[.90466838,0,.42611633,0,1,-0,-.42611633,0,.90466838],[.90432508,0,.42684442,0,1,-0,-.42684442,0,.90432508],[.90398088,0,.42757288,0,1,-0,-.42757288,0,.90398088],[.90363579,0,.42830171,0,1,-0,-.42830171,0,.90363579],[.9032898,0,.42903092,0,1,-0,-.42903092,0,.9032898],[.90294291,0,.42976051,0,1,-0,-.42976051,0,.90294291],[.90259513,0,.43049046,0,1,-0,-.43049046,0,.90259513],[.90224644,0,.43122078,0,1,-0,-.43122078,0,.90224644],[.90189685,0,.43195148,0,1,-0,-.43195148,0,.90189685],[.90154635,0,.43268254,0,1,-0,-.43268254,0,.90154635],[.90119495,0,.43341396,0,1,-0,-.43341396,0,.90119495],[.90084264,0,.43414575,0,1,-0,-.43414575,0,.90084264],[.90048943,0,.4348779,0,1,-0,-.4348779,0,.90048943],[.9001353,0,.43561042,0,1,-0,-.43561042,0,.9001353],[.89978027,0,.4363433,0,1,-0,-.4363433,0,.89978027],[.89942432,0,.43707653,0,1,-0,-.43707653,0,.89942432],[.89906746,0,.43781012,0,1,-0,-.43781012,0,.89906746],[.89870969,0,.43854407,0,1,-0,-.43854407,0,.89870969],[.89835099,0,.43927837,0,1,-0,-.43927837,0,.89835099],[.89799139,0,.44001303,0,1,-0,-.44001303,0,.89799139],[.89763086,0,.44074804,0,1,-0,-.44074804,0,.89763086],[.89726942,0,.4414834,0,1,-0,-.4414834,0,.89726942],[.89690705,0,.44221911,0,1,-0,-.44221911,0,.89690705],[.89654376,0,.44295517,0,1,-0,-.44295517,0,.89654376],[.89617955,0,.44369157,0,1,-0,-.44369157,0,.89617955],[.89581442,0,.44442832,0,1,-0,-.44442832,0,.89581442],[.89544836,0,.44516541,0,1,-0,-.44516541,0,.89544836],[.89508137,0,.44590284,0,1,-0,-.44590284,0,.89508137],[.89471345,0,.44664062,0,1,-0,-.44664062,0,.89471345],[.8943446,0,.44737873,0,1,-0,-.44737873,0,.8943446],[.89397483,0,.44811719,0,1,-0,-.44811719,0,.89397483],[.89360412,0,.44885597,0,1,-0,-.44885597,0,.89360412],[.89323247,0,.4495951,0,1,-0,-.4495951,0,.89323247],[.89285989,0,.45033456,0,1,-0,-.45033456,0,.89285989],[.89248638,0,.45107434,0,1,-0,-.45107434,0,.89248638],[.89211193,0,.45181447,0,1,-0,-.45181447,0,.89211193],[.89173654,0,.45255491,0,1,-0,-.45255491,0,.89173654],[.89136021,0,.45329569,0,1,-0,-.45329569,0,.89136021],[.89098293,0,.4540368,0,1,-0,-.4540368,0,.89098293],[.89060472,0,.45477822,0,1,-0,-.45477822,0,.89060472],[.89022556,0,.45551998,0,1,-0,-.45551998,0,.89022556],[.88984546,0,.45626205,0,1,-0,-.45626205,0,.88984546],[.88946441,0,.45700445,0,1,-0,-.45700445,0,.88946441],[.88908241,0,.45774716,0,1,-0,-.45774716,0,.88908241],[.88869947,0,.45849019,0,1,-0,-.45849019,0,.88869947],[.88831557,0,.45923354,0,1,-0,-.45923354,0,.88831557],[.88793073,0,.4599772,0,1,-0,-.4599772,0,.88793073],[.88754493,0,.46072117,0,1,-0,-.46072117,0,.88754493],[.88715818,0,.46146546,0,1,-0,-.46146546,0,.88715818],[.88677047,0,.46221006,0,1,-0,-.46221006,0,.88677047],[.88638181,0,.46295496,0,1,-0,-.46295496,0,.88638181],[.88599218,0,.46370017,0,1,-0,-.46370017,0,.88599218],[.8856016,0,.46444569,0,1,-0,-.46444569,0,.8856016],[.88521006,0,.46519151,0,1,-0,-.46519151,0,.88521006],[.88481756,0,.46593764,0,1,-0,-.46593764,0,.88481756],[.8844241,0,.46668406,0,1,-0,-.46668406,0,.8844241],[.88402967,0,.46743078,0,1,-0,-.46743078,0,.88402967],[.88363428,0,.46817781,0,1,-0,-.46817781,0,.88363428],[.88323792,0,.46892513,0,1,-0,-.46892513,0,.88323792],[.8828406,0,.46967274,0,1,-0,-.46967274,0,.8828406],[.8824423,0,.47042065,0,1,-0,-.47042065,0,.8824423],[.88204304,0,.47116885,0,1,-0,-.47116885,0,.88204304],[.8816428,0,.47191734,0,1,-0,-.47191734,0,.8816428],[.88124159,0,.47266611,0,1,-0,-.47266611,0,.88124159],[.88083941,0,.47341518,0,1,-0,-.47341518,0,.88083941],[.88043626,0,.47416453,0,1,-0,-.47416453,0,.88043626],[.88003212,0,.47491416,0,1,-0,-.47491416,0,.88003212],[.87962701,0,.47566408,0,1,-0,-.47566408,0,.87962701],[.87922092,0,.47641428,0,1,-0,-.47641428,0,.87922092],[.87881386,0,.47716476,0,1,-0,-.47716476,0,.87881386],[.87840581,0,.47791551,0,1,-0,-.47791551,0,.87840581],[.87799678,0,.47866654,0,1,-0,-.47866654,0,.87799678],[.87758676,0,.47941785,0,1,-0,-.47941785,0,.87758676],[.87717576,0,.48016943,0,1,-0,-.48016943,0,.87717576],[.87676378,0,.48092128,0,1,-0,-.48092128,0,.87676378],[.8763508,0,.4816734,0,1,-0,-.4816734,0,.8763508],[.87593684,0,.48242579,0,1,-0,-.48242579,0,.87593684],[.87552189,0,.48317845,0,1,-0,-.48317845,0,.87552189],[.87510595,0,.48393137,0,1,-0,-.48393137,0,.87510595],[.87468902,0,.48468455,0,1,-0,-.48468455,0,.87468902],[.8742711,0,.485438,0,1,-0,-.485438,0,.8742711],[.87385218,0,.48619171,0,1,-0,-.48619171,0,.87385218],[.87343226,0,.48694567,0,1,-0,-.48694567,0,.87343226],[.87301135,0,.48769989,0,1,-0,-.48769989,0,.87301135],[.87258944,0,.48845437,0,1,-0,-.48845437,0,.87258944],[.87216653,0,.4892091,0,1,-0,-.4892091,0,.87216653],[.87174262,0,.48996409,0,1,-0,-.48996409,0,.87174262],[.87131771,0,.49071932,0,1,-0,-.49071932,0,.87131771],[.87089179,0,.49147481,0,1,-0,-.49147481,0,.87089179],[.87046488,0,.49223054,0,1,-0,-.49223054,0,.87046488],[.87003695,0,.49298651,0,1,-0,-.49298651,0,.87003695],[.86960802,0,.49374273,0,1,-0,-.49374273,0,.86960802],[.86917809,0,.4944992,0,1,-0,-.4944992,0,.86917809],[.86874714,0,.4952559,0,1,-0,-.4952559,0,.86874714],[.86831519,0,.49601284,0,1,-0,-.49601284,0,.86831519],[.86788222,0,.49677002,0,1,-0,-.49677002,0,.86788222],[.86744824,0,.49752744,0,1,-0,-.49752744,0,.86744824],[.86701325,0,.49828509,0,1,-0,-.49828509,0,.86701325],[.86657724,0,.49904297,0,1,-0,-.49904297,0,.86657724],[.86614022,0,.49980108,0,1,-0,-.49980108,0,.86614022],[.86570218,0,.50055942,0,1,-0,-.50055942,0,.86570218],[.86526312,0,.50131799,0,1,-0,-.50131799,0,.86526312],[.86482305,0,.50207679,0,1,-0,-.50207679,0,.86482305],[.86438195,0,.50283581,0,1,-0,-.50283581,0,.86438195],[.86393983,0,.50359505,0,1,-0,-.50359505,0,.86393983],[.86349669,0,.50435451,0,1,-0,-.50435451,0,.86349669],[.86305252,0,.50511419,0,1,-0,-.50511419,0,.86305252],[.86260733,0,.50587409,0,1,-0,-.50587409,0,.86260733],[.86216111,0,.5066342,0,1,-0,-.5066342,0,.86216111],[.86171387,0,.50739453,0,1,-0,-.50739453,0,.86171387],[.8612656,0,.50815507,0,1,-0,-.50815507,0,.8612656],[.86081629,0,.50891582,0,1,-0,-.50891582,0,.86081629],[.86036596,0,.50967678,0,1,-0,-.50967678,0,.86036596],[.85991459,0,.51043794,0,1,-0,-.51043794,0,.85991459],[.8594622,0,.51119931,0,1,-0,-.51119931,0,.8594622],[.85900876,0,.51196088,0,1,-0,-.51196088,0,.85900876],[.85855429,0,.51272266,0,1,-0,-.51272266,0,.85855429],[.85809879,0,.51348464,0,1,-0,-.51348464,0,.85809879],[.85764224,0,.51424681,0,1,-0,-.51424681,0,.85764224],[.85718466,0,.51500918,0,1,-0,-.51500918,0,.85718466],[.85672604,0,.51577174,0,1,-0,-.51577174,0,.85672604],[.85626638,0,.5165345,0,1,-0,-.5165345,0,.85626638],[.85580567,0,.51729745,0,1,-0,-.51729745,0,.85580567],[.85534392,0,.51806059,0,1,-0,-.51806059,0,.85534392],[.85488113,0,.51882392,0,1,-0,-.51882392,0,.85488113],[.85441729,0,.51958743,0,1,-0,-.51958743,0,.85441729],[.8539524,0,.52035113,0,1,-0,-.52035113,0,.8539524],[.85348647,0,.52111501,0,1,-0,-.52111501,0,.85348647],[.85301948,0,.52187907,0,1,-0,-.52187907,0,.85301948],[.85255145,0,.5226433,0,1,-0,-.5226433,0,.85255145],[.85208237,0,.52340772,0,1,-0,-.52340772,0,.85208237],[.85161223,0,.52417231,0,1,-0,-.52417231,0,.85161223],[.85114104,0,.52493708,0,1,-0,-.52493708,0,.85114104],[.85066879,0,.52570201,0,1,-0,-.52570201,0,.85066879],[.85019549,0,.52646712,0,1,-0,-.52646712,0,.85019549],[.84972113,0,.52723239,0,1,-0,-.52723239,0,.84972113],[.84924572,0,.52799783,0,1,-0,-.52799783,0,.84924572],[.84876924,0,.52876344,0,1,-0,-.52876344,0,.84876924],[.84829171,0,.52952921,0,1,-0,-.52952921,0,.84829171],[.84781311,0,.53029513,0,1,-0,-.53029513,0,.84781311],[.84733345,0,.53106122,0,1,-0,-.53106122,0,.84733345],[.84685273,0,.53182747,0,1,-0,-.53182747,0,.84685273],[.84637094,0,.53259387,0,1,-0,-.53259387,0,.84637094],[.84588809,0,.53336042,0,1,-0,-.53336042,0,.84588809],[.84540417,0,.53412713,0,1,-0,-.53412713,0,.84540417],[.84491918,0,.53489398,0,1,-0,-.53489398,0,.84491918],[.84443313,0,.53566099,0,1,-0,-.53566099,0,.84443313],[.843946,0,.53642814,0,1,-0,-.53642814,0,.843946],[.8434578,0,.53719543,0,1,-0,-.53719543,0,.8434578],[.84296853,0,.53796287,0,1,-0,-.53796287,0,.84296853],[.84247819,0,.53873045,0,1,-0,-.53873045,0,.84247819],[.84198678,0,.53949816,0,1,-0,-.53949816,0,.84198678],[.84149428,0,.54026602,0,1,-0,-.54026602,0,.84149428],[.84100072,0,.54103401,0,1,-0,-.54103401,0,.84100072],[.84050607,0,.54180213,0,1,-0,-.54180213,0,.84050607],[.84001035,0,.54257038,0,1,-0,-.54257038,0,.84001035],[.83951354,0,.54333877,0,1,-0,-.54333877,0,.83951354],[.83901566,0,.54410728,0,1,-0,-.54410728,0,.83901566],[.83851669,0,.54487591,0,1,-0,-.54487591,0,.83851669],[.83801664,0,.54564467,0,1,-0,-.54564467,0,.83801664],[.83751551,0,.54641355,0,1,-0,-.54641355,0,.83751551],[.83701329,0,.54718256,0,1,-0,-.54718256,0,.83701329],[.83650999,0,.54795168,0,1,-0,-.54795168,0,.83650999],[.8360056,0,.54872091,0,1,-0,-.54872091,0,.8360056],[.83550012,0,.54949026,0,1,-0,-.54949026,0,.83550012],[.83499355,0,.55025973,0,1,-0,-.55025973,0,.83499355],[.83448589,0,.5510293,0,1,-0,-.5510293,0,.83448589],[.83397715,0,.55179898,0,1,-0,-.55179898,0,.83397715],[.83346731,0,.55256877,0,1,-0,-.55256877,0,.83346731],[.83295637,0,.55333867,0,1,-0,-.55333867,0,.83295637],[.83244434,0,.55410867,0,1,-0,-.55410867,0,.83244434],[.83193122,0,.55487876,0,1,-0,-.55487876,0,.83193122],[.831417,0,.55564896,0,1,-0,-.55564896,0,.831417],[.83090169,0,.55641926,0,1,-0,-.55641926,0,.83090169],[.83038527,0,.55718965,0,1,-0,-.55718965,0,.83038527],[.82986776,0,.55796013,0,1,-0,-.55796013,0,.82986776],[.82934914,0,.5587307,0,1,-0,-.5587307,0,.82934914],[.82882943,0,.55950137,0,1,-0,-.55950137,0,.82882943],[.82830861,0,.56027212,0,1,-0,-.56027212,0,.82830861],[.82778669,0,.56104295,0,1,-0,-.56104295,0,.82778669],[.82726367,0,.56181387,0,1,-0,-.56181387,0,.82726367],[.82673954,0,.56258487,0,1,-0,-.56258487,0,.82673954],[.8262143,0,.56335595,0,1,-0,-.56335595,0,.8262143],[.82568796,0,.56412711,0,1,-0,-.56412711,0,.82568796],[.8251605,0,.56489835,0,1,-0,-.56489835,0,.8251605],[.82463194,0,.56566965,0,1,-0,-.56566965,0,.82463194],[.82410227,0,.56644103,0,1,-0,-.56644103,0,.82410227],[.82357149,0,.56721248,0,1,-0,-.56721248,0,.82357149],[.8230396,0,.567984,0,1,-0,-.567984,0,.8230396],[.82250659,0,.56875558,0,1,-0,-.56875558,0,.82250659],[.82197247,0,.56952723,0,1,-0,-.56952723,0,.82197247],[.82143723,0,.57029893,0,1,-0,-.57029893,0,.82143723],[.82090088,0,.5710707,0,1,-0,-.5710707,0,.82090088],[.82036341,0,.57184253,0,1,-0,-.57184253,0,.82036341],[.81982482,0,.57261441,0,1,-0,-.57261441,0,.81982482],[.81928512,0,.57338634,0,1,-0,-.57338634,0,.81928512],[.81874429,0,.57415833,0,1,-0,-.57415833,0,.81874429],[.81820234,0,.57493036,0,1,-0,-.57493036,0,.81820234],[.81765928,0,.57570245,0,1,-0,-.57570245,0,.81765928],[.81711508,0,.57647458,0,1,-0,-.57647458,0,.81711508],[.81656977,0,.57724675,0,1,-0,-.57724675,0,.81656977],[.81602333,0,.57801896,0,1,-0,-.57801896,0,.81602333],[.81547577,0,.57879122,0,1,-0,-.57879122,0,.81547577],[.81492708,0,.57956351,0,1,-0,-.57956351,0,.81492708],[.81437726,0,.58033584,0,1,-0,-.58033584,0,.81437726],[.81382631,0,.5811082,0,1,-0,-.5811082,0,.81382631],[.81327423,0,.58188059,0,1,-0,-.58188059,0,.81327423],[.81272103,0,.58265301,0,1,-0,-.58265301,0,.81272103],[.81216669,0,.58342546,0,1,-0,-.58342546,0,.81216669],[.81161122,0,.58419793,0,1,-0,-.58419793,0,.81161122],[.81105462,0,.58497043,0,1,-0,-.58497043,0,.81105462],[.81049689,0,.58574294,0,1,-0,-.58574294,0,.81049689],[.80993802,0,.58651548,0,1,-0,-.58651548,0,.80993802],[.80937801,0,.58728803,0,1,-0,-.58728803,0,.80937801],[.80881687,0,.5880606,0,1,-0,-.5880606,0,.80881687],[.80825459,0,.58883318,0,1,-0,-.58883318,0,.80825459],[.80769117,0,.58960578,0,1,-0,-.58960578,0,.80769117],[.80712661,0,.59037838,0,1,-0,-.59037838,0,.80712661],[.80656092,0,.59115098,0,1,-0,-.59115098,0,.80656092],[.80599408,0,.5919236,0,1,-0,-.5919236,0,.80599408],[.8054261,0,.59269621,0,1,-0,-.59269621,0,.8054261],[.80485698,0,.59346882,0,1,-0,-.59346882,0,.80485698],[.80428671,0,.59424144,0,1,-0,-.59424144,0,.80428671],[.8037153,0,.59501404,0,1,-0,-.59501404,0,.8037153],[.80314275,0,.59578665,0,1,-0,-.59578665,0,.80314275],[.80256905,0,.59655924,0,1,-0,-.59655924,0,.80256905],[.8019942,0,.59733182,0,1,-0,-.59733182,0,.8019942],[.8014182,0,.5981044,0,1,-0,-.5981044,0,.8014182],[.80084106,0,.59887695,0,1,-0,-.59887695,0,.80084106],[.80026276,0,.59964949,0,1,-0,-.59964949,0,.80026276],[.79968332,0,.60042201,0,1,-0,-.60042201,0,.79968332],[.79910272,0,.60119452,0,1,-0,-.60119452,0,.79910272],[.79852097,0,.60196699,0,1,-0,-.60196699,0,.79852097],[.79793807,0,.60273945,0,1,-0,-.60273945,0,.79793807],[.79735401,0,.60351187,0,1,-0,-.60351187,0,.79735401],[.7967688,0,.60428427,0,1,-0,-.60428427,0,.7967688],[.79618244,0,.60505663,0,1,-0,-.60505663,0,.79618244],[.79559492,0,.60582896,0,1,-0,-.60582896,0,.79559492],[.79500624,0,.60660125,0,1,-0,-.60660125,0,.79500624],[.7944164,0,.60737351,0,1,-0,-.60737351,0,.7944164],[.79382541,0,.60814573,0,1,-0,-.60814573,0,.79382541],[.79323325,0,.6089179,0,1,-0,-.6089179,0,.79323325],[.79263994,0,.60969003,0,1,-0,-.60969003,0,.79263994],[.79204546,0,.61046211,0,1,-0,-.61046211,0,.79204546],[.79144982,0,.61123415,0,1,-0,-.61123415,0,.79144982],[.79085302,0,.61200613,0,1,-0,-.61200613,0,.79085302],[.79025506,0,.61277806,0,1,-0,-.61277806,0,.79025506],[.78965593,0,.61354993,0,1,-0,-.61354993,0,.78965593],[.78905563,0,.61432175,0,1,-0,-.61432175,0,.78905563],[.78845417,0,.6150935,0,1,-0,-.6150935,0,.78845417],[.78785155,0,.6158652,0,1,-0,-.6158652,0,.78785155],[.78724775,0,.61663683,0,1,-0,-.61663683,0,.78724775],[.78664279,0,.61740839,0,1,-0,-.61740839,0,.78664279],[.78603666,0,.61817989,0,1,-0,-.61817989,0,.78603666],[.78542936,0,.61895131,0,1,-0,-.61895131,0,.78542936],[.78482088,0,.61972266,0,1,-0,-.61972266,0,.78482088],[.78421124,0,.62049394,0,1,-0,-.62049394,0,.78421124],[.78360043,0,.62126514,0,1,-0,-.62126514,0,.78360043],[.78298844,0,.62203626,0,1,-0,-.62203626,0,.78298844],[.78237528,0,.62280729,0,1,-0,-.62280729,0,.78237528],[.78176094,0,.62357825,0,1,-0,-.62357825,0,.78176094],[.78114543,0,.62434911,0,1,-0,-.62434911,0,.78114543],[.78052874,0,.62511989,0,1,-0,-.62511989,0,.78052874],[.77991088,0,.62589058,0,1,-0,-.62589058,0,.77991088],[.77929184,0,.62666117,0,1,-0,-.62666117,0,.77929184],[.77867162,0,.62743167,0,1,-0,-.62743167,0,.77867162],[.77805023,0,.62820207,0,1,-0,-.62820207,0,.77805023],[.77742765,0,.62897238,0,1,-0,-.62897238,0,.77742765],[.77680389,0,.62974258,0,1,-0,-.62974258,0,.77680389],[.77617896,0,.63051267,0,1,-0,-.63051267,0,.77617896],[.77555284,0,.63128266,0,1,-0,-.63128266,0,.77555284],[.77492554,0,.63205254,0,1,-0,-.63205254,0,.77492554],[.77429705,0,.63282231,0,1,-0,-.63282231,0,.77429705],[.77366738,0,.63359196,0,1,-0,-.63359196,0,.77366738],[.77303653,0,.6343615,0,1,-0,-.6343615,0,.77303653],[.7724045,0,.63513093,0,1,-0,-.63513093,0,.7724045],[.77177127,0,.63590023,0,1,-0,-.63590023,0,.77177127],[.77113686,0,.63666941,0,1,-0,-.63666941,0,.77113686],[.77050127,0,.63743846,0,1,-0,-.63743846,0,.77050127],[.76986448,0,.63820739,0,1,-0,-.63820739,0,.76986448],[.76922651,0,.63897619,0,1,-0,-.63897619,0,.76922651],[.76858735,0,.63974486,0,1,-0,-.63974486,0,.76858735],[.767947,0,.64051339,0,1,-0,-.64051339,0,.767947],[.76730546,0,.64128179,0,1,-0,-.64128179,0,.76730546],[.76666273,0,.64205005,0,1,-0,-.64205005,0,.76666273],[.7660188,0,.64281817,0,1,-0,-.64281817,0,.7660188],[.76537368,0,.64358614,0,1,-0,-.64358614,0,.76537368],[.76472737,0,.64435397,0,1,-0,-.64435397,0,.76472737],[.76407987,0,.64512166,0,1,-0,-.64512166,0,.76407987],[.76343117,0,.64588919,0,1,-0,-.64588919,0,.76343117],[.76278128,0,.64665657,0,1,-0,-.64665657,0,.76278128],[.76213019,0,.64742379,0,1,-0,-.64742379,0,.76213019],[.76147791,0,.64819086,0,1,-0,-.64819086,0,.76147791],[.76082443,0,.64895777,0,1,-0,-.64895777,0,.76082443],[.76016975,0,.64972452,0,1,-0,-.64972452,0,.76016975],[.75951387,0,.6504911,0,1,-0,-.6504911,0,.75951387],[.7588568,0,.65125752,0,1,-0,-.65125752,0,.7588568],[.75819853,0,.65202377,0,1,-0,-.65202377,0,.75819853],[.75753905,0,.65278985,0,1,-0,-.65278985,0,.75753905],[.75687838,0,.65355575,0,1,-0,-.65355575,0,.75687838],[.7562165,0,.65432148,0,1,-0,-.65432148,0,.7562165],[.75555343,0,.65508703,0,1,-0,-.65508703,0,.75555343],[.75488915,0,.6558524,0,1,-0,-.6558524,0,.75488915],[.75422367,0,.65661759,0,1,-0,-.65661759,0,.75422367],[.75355698,0,.65738259,0,1,-0,-.65738259,0,.75355698],[.75288909,0,.65814741,0,1,-0,-.65814741,0,.75288909],[.75222,0,.65891204,0,1,-0,-.65891204,0,.75222],[.7515497,0,.65967647,0,1,-0,-.65967647,0,.7515497],[.7508782,0,.66044071,0,1,-0,-.66044071,0,.7508782],[.75020549,0,.66120475,0,1,-0,-.66120475,0,.75020549],[.74953157,0,.6619686,0,1,-0,-.6619686,0,.74953157],[.74885645,0,.66273224,0,1,-0,-.66273224,0,.74885645],[.74818012,0,.66349568,0,1,-0,-.66349568,0,.74818012],[.74750258,0,.66425891,0,1,-0,-.66425891,0,.74750258],[.74682383,0,.66502193,0,1,-0,-.66502193,0,.74682383],[.74614387,0,.66578474,0,1,-0,-.66578474,0,.74614387],[.7454627,0,.66654734,0,1,-0,-.66654734,0,.7454627],[.74478033,0,.66730972,0,1,-0,-.66730972,0,.74478033],[.74409674,0,.66807189,0,1,-0,-.66807189,0,.74409674],[.74341194,0,.66883383,0,1,-0,-.66883383,0,.74341194],[.74272593,0,.66959555,0,1,-0,-.66959555,0,.74272593],[.7420387,0,.67035704,0,1,-0,-.67035704,0,.7420387],[.74135027,0,.67111831,0,1,-0,-.67111831,0,.74135027],[.74066061,0,.67187934,0,1,-0,-.67187934,0,.74066061],[.73996975,0,.67264015,0,1,-0,-.67264015,0,.73996975],[.73927767,0,.67340072,0,1,-0,-.67340072,0,.73927767],[.73858438,0,.67416105,0,1,-0,-.67416105,0,.73858438],[.73788987,0,.67492114,0,1,-0,-.67492114,0,.73788987],[.73719414,0,.67568098,0,1,-0,-.67568098,0,.73719414],[.7364972,0,.67644059,0,1,-0,-.67644059,0,.7364972],[.73579905,0,.67719994,0,1,-0,-.67719994,0,.73579905],[.73509967,0,.67795905,0,1,-0,-.67795905,0,.73509967],[.73439908,0,.6787179,0,1,-0,-.6787179,0,.73439908],[.73369727,0,.6794765,0,1,-0,-.6794765,0,.73369727],[.73299424,0,.68023484,0,1,-0,-.68023484,0,.73299424],[.73228999,0,.68099293,0,1,-0,-.68099293,0,.73228999],[.73158453,0,.68175075,0,1,-0,-.68175075,0,.73158453],[.73087784,0,.6825083,0,1,-0,-.6825083,0,.73087784],[.73016993,0,.68326559,0,1,-0,-.68326559,0,.73016993],[.7294608,0,.68402261,0,1,-0,-.68402261,0,.7294608],[.72875046,0,.68477936,0,1,-0,-.68477936,0,.72875046],[.72803889,0,.68553583,0,1,-0,-.68553583,0,.72803889],[.72732609,0,.68629203,0,1,-0,-.68629203,0,.72732609],[.72661208,0,.68704795,0,1,-0,-.68704795,0,.72661208],[.72589684,0,.68780359,0,1,-0,-.68780359,0,.72589684],[.72518038,0,.68855894,0,1,-0,-.68855894,0,.72518038],[.7244627,0,.689314,0,1,-0,-.689314,0,.7244627],[.72374379,0,.69006878,0,1,-0,-.69006878,0,.72374379],[.72302366,0,.69082327,0,1,-0,-.69082327,0,.72302366],[.7223023,0,.69157746,0,1,-0,-.69157746,0,.7223023],[.72157972,0,.69233135,0,1,-0,-.69233135,0,.72157972],[.72085592,0,.69308495,0,1,-0,-.69308495,0,.72085592],[.72013089,0,.69383824,0,1,-0,-.69383824,0,.72013089],[.71940463,0,.69459123,0,1,-0,-.69459123,0,.71940463],[.71867714,0,.69534392,0,1,-0,-.69534392,0,.71867714],[.71794843,0,.69609629,0,1,-0,-.69609629,0,.71794843],[.71721849,0,.69684836,0,1,-0,-.69684836,0,.71721849],[.71648733,0,.69760011,0,1,-0,-.69760011,0,.71648733],[.71575494,0,.69835154,0,1,-0,-.69835154,0,.71575494],[.71502131,0,.69910265,0,1,-0,-.69910265,0,.71502131],[.71428646,0,.69985345,0,1,-0,-.69985345,0,.71428646],[.71355039,0,.70060392,0,1,-0,-.70060392,0,.71355039],[.71281308,0,.70135406,0,1,-0,-.70135406,0,.71281308],[.71207454,0,.70210387,0,1,-0,-.70210387,0,.71207454],[.71133478,0,.70285335,0,1,-0,-.70285335,0,.71133478],[.71059378,0,.7036025,0,1,-0,-.7036025,0,.71059378],[.70985155,0,.70435131,0,1,-0,-.70435131,0,.70985155],[.7091081,0,.70509979,0,1,-0,-.70509979,0,.7091081],[.70836341,0,.70584792,0,1,-0,-.70584792,0,.70836341],[.70761749,0,.7065957,0,1,-0,-.7065957,0,.70761749],[.70687034,0,.70734314,0,1,-0,-.70734314,0,.70687034],[.70612196,0,.70809023,0,1,-0,-.70809023,0,.70612196],[.70537235,0,.70883697,0,1,-0,-.70883697,0,.70537235],[.7046215,0,.70958336,0,1,-0,-.70958336,0,.7046215],[.70386942,0,.71032939,0,1,-0,-.71032939,0,.70386942],[.70311611,0,.71107505,0,1,-0,-.71107505,0,.70311611],[.70236157,0,.71182036,0,1,-0,-.71182036,0,.70236157],[.70160579,0,.7125653,0,1,-0,-.7125653,0,.70160579],[.70084878,0,.71330988,0,1,-0,-.71330988,0,.70084878],[.70009054,0,.71405409,0,1,-0,-.71405409,0,.70009054],[.69933106,0,.71479792,0,1,-0,-.71479792,0,.69933106],[.69857035,0,.71554138,0,1,-0,-.71554138,0,.69857035],[.69780841,0,.71628446,0,1,-0,-.71628446,0,.69780841],[.69704523,0,.71702716,0,1,-0,-.71702716,0,.69704523],[.69628081,0,.71776948,0,1,-0,-.71776948,0,.69628081],[.69551516,0,.71851142,0,1,-0,-.71851142,0,.69551516],[.69474828,0,.71925297,0,1,-0,-.71925297,0,.69474828],[.69398016,0,.71999412,0,1,-0,-.71999412,0,.69398016],[.69321081,0,.72073489,0,1,-0,-.72073489,0,.69321081],[.69244022,0,.72147526,0,1,-0,-.72147526,0,.69244022],[.69166839,0,.72221523,0,1,-0,-.72221523,0,.69166839],[.69089533,0,.7229548,0,1,-0,-.7229548,0,.69089533],[.69012103,0,.72369397,0,1,-0,-.72369397,0,.69012103],[.6893455,0,.72443273,0,1,-0,-.72443273,0,.6893455],[.68856873,0,.72517109,0,1,-0,-.72517109,0,.68856873],[.68779072,0,.72590903,0,1,-0,-.72590903,0,.68779072],[.68701148,0,.72664657,0,1,-0,-.72664657,0,.68701148],[.686231,0,.72738368,0,1,-0,-.72738368,0,.686231],[.68544928,0,.72812038,0,1,-0,-.72812038,0,.68544928],[.68466633,0,.72885665,0,1,-0,-.72885665,0,.68466633],[.68388213,0,.72959251,0,1,-0,-.72959251,0,.68388213],[.68309671,0,.73032793,0,1,-0,-.73032793,0,.68309671],[.68231004,0,.73106293,0,1,-0,-.73106293,0,.68231004],[.68152214,0,.7317975,0,1,-0,-.7317975,0,.68152214],[.680733,0,.73253163,0,1,-0,-.73253163,0,.680733],[.67994262,0,.73326532,0,1,-0,-.73326532,0,.67994262],[.679151,0,.73399858,0,1,-0,-.73399858,0,.679151],[.67835815,0,.7347314,0,1,-0,-.7347314,0,.67835815],[.67756406,0,.73546377,0,1,-0,-.73546377,0,.67756406],[.67676873,0,.73619569,0,1,-0,-.73619569,0,.67676873],[.67597216,0,.73692716,0,1,-0,-.73692716,0,.67597216],[.67517435,0,.73765818,0,1,-0,-.73765818,0,.67517435],[.67437531,0,.73838875,0,1,-0,-.73838875,0,.67437531],[.67357503,0,.73911886,0,1,-0,-.73911886,0,.67357503],[.6727735,0,.73984851,0,1,-0,-.73984851,0,.6727735],[.67197075,0,.74057769,0,1,-0,-.74057769,0,.67197075],[.67116675,0,.74130641,0,1,-0,-.74130641,0,.67116675],[.67036151,0,.74203466,0,1,-0,-.74203466,0,.67036151],[.66955504,0,.74276245,0,1,-0,-.74276245,0,.66955504],[.66874733,0,.74348975,0,1,-0,-.74348975,0,.66874733],[.66793838,0,.74421659,0,1,-0,-.74421659,0,.66793838],[.66712819,0,.74494294,0,1,-0,-.74494294,0,.66712819],[.66631676,0,.74566881,0,1,-0,-.74566881,0,.66631676],[.66550409,0,.7463942,0,1,-0,-.7463942,0,.66550409],[.66469019,0,.7471191,0,1,-0,-.7471191,0,.66469019],[.66387505,0,.74784352,0,1,-0,-.74784352,0,.66387505],[.66305866,0,.74856744,0,1,-0,-.74856744,0,.66305866],[.66224104,0,.74929086,0,1,-0,-.74929086,0,.66224104],[.66142219,0,.75001379,0,1,-0,-.75001379,0,.66142219],[.66060209,0,.75073622,0,1,-0,-.75073622,0,.66060209],[.65978076,0,.75145815,0,1,-0,-.75145815,0,.65978076],[.65895818,0,.75217957,0,1,-0,-.75217957,0,.65895818],[.65813437,0,.75290049,0,1,-0,-.75290049,0,.65813437],[.65730932,0,.75362089,0,1,-0,-.75362089,0,.65730932],[.65648304,0,.75434079,0,1,-0,-.75434079,0,.65648304],[.65565551,0,.75506016,0,1,-0,-.75506016,0,.65565551],[.65482675,0,.75577902,0,1,-0,-.75577902,0,.65482675],[.65399675,0,.75649736,0,1,-0,-.75649736,0,.65399675],[.65316551,0,.75721517,0,1,-0,-.75721517,0,.65316551],[.65233304,0,.75793246,0,1,-0,-.75793246,0,.65233304],[.65149932,0,.75864922,0,1,-0,-.75864922,0,.65149932],[.65066437,0,.75936544,0,1,-0,-.75936544,0,.65066437],[.64982819,0,.76008113,0,1,-0,-.76008113,0,.64982819],[.64899076,0,.76079629,0,1,-0,-.76079629,0,.64899076],[.6481521,0,.7615109,0,1,-0,-.7615109,0,.6481521],[.6473122,0,.76222498,0,1,-0,-.76222498,0,.6473122],[.64647106,0,.76293851,0,1,-0,-.76293851,0,.64647106],[.64562869,0,.76365149,0,1,-0,-.76365149,0,.64562869],[.64478508,0,.76436392,0,1,-0,-.76436392,0,.64478508],[.64394024,0,.76507579,0,1,-0,-.76507579,0,.64394024],[.64309416,0,.76578711,0,1,-0,-.76578711,0,.64309416],[.64224684,0,.76649788,0,1,-0,-.76649788,0,.64224684],[.64139829,0,.76720808,0,1,-0,-.76720808,0,.64139829],[.6405485,0,.76791772,0,1,-0,-.76791772,0,.6405485],[.63969747,0,.76862679,0,1,-0,-.76862679,0,.63969747],[.63884521,0,.76933529,0,1,-0,-.76933529,0,.63884521],[.63799172,0,.77004322,0,1,-0,-.77004322,0,.63799172],[.63713699,0,.77075058,0,1,-0,-.77075058,0,.63713699],[.63628103,0,.77145736,0,1,-0,-.77145736,0,.63628103],[.63542383,0,.77216356,0,1,-0,-.77216356,0,.63542383],[.63456539,0,.77286917,0,1,-0,-.77286917,0,.63456539],[.63370573,0,.77357421,0,1,-0,-.77357421,0,.63370573],[.63284483,0,.77427865,0,1,-0,-.77427865,0,.63284483],[.63198269,0,.7749825,0,1,-0,-.7749825,0,.63198269],[.63111932,0,.77568576,0,1,-0,-.77568576,0,.63111932],[.63025472,0,.77638842,0,1,-0,-.77638842,0,.63025472],[.62938889,0,.77709049,0,1,-0,-.77709049,0,.62938889],[.62852182,0,.77779195,0,1,-0,-.77779195,0,.62852182],[.62765352,0,.77849281,0,1,-0,-.77849281,0,.62765352],[.62678399,0,.77919306,0,1,-0,-.77919306,0,.62678399],[.62591323,0,.77989271,0,1,-0,-.77989271,0,.62591323],[.62504123,0,.78059174,0,1,-0,-.78059174,0,.62504123],[.62416801,0,.78129015,0,1,-0,-.78129015,0,.62416801],[.62329355,0,.78198795,0,1,-0,-.78198795,0,.62329355],[.62241786,0,.78268513,0,1,-0,-.78268513,0,.62241786],[.62154094,0,.78338168,0,1,-0,-.78338168,0,.62154094],[.6206628,0,.78407761,0,1,-0,-.78407761,0,.6206628],[.61978342,0,.78477291,0,1,-0,-.78477291,0,.61978342],[.61890281,0,.78546757,0,1,-0,-.78546757,0,.61890281],[.61802097,0,.78616161,0,1,-0,-.78616161,0,.61802097],[.61713791,0,.78685501,0,1,-0,-.78685501,0,.61713791],[.61625362,0,.78754776,0,1,-0,-.78754776,0,.61625362],[.61536809,0,.78823988,0,1,-0,-.78823988,0,.61536809],[.61448135,0,.78893135,0,1,-0,-.78893135,0,.61448135],[.61359337,0,.78962217,0,1,-0,-.78962217,0,.61359337],[.61270416,0,.79031235,0,1,-0,-.79031235,0,.61270416],[.61181373,0,.79100187,0,1,-0,-.79100187,0,.61181373],[.61092208,0,.79169073,0,1,-0,-.79169073,0,.61092208],[.6100292,0,.79237894,0,1,-0,-.79237894,0,.6100292],[.60913509,0,.79306648,0,1,-0,-.79306648,0,.60913509],[.60823975,0,.79375336,0,1,-0,-.79375336,0,.60823975],[.6073432,0,.79443958,0,1,-0,-.79443958,0,.6073432],[.60644541,0,.79512512,0,1,-0,-.79512512,0,.60644541],[.60554641,0,.79580999,0,1,-0,-.79580999,0,.60554641],[.60464618,0,.79649419,0,1,-0,-.79649419,0,.60464618],[.60374473,0,.79717771,0,1,-0,-.79717771,0,.60374473],[.60284205,0,.79786055,0,1,-0,-.79786055,0,.60284205],[.60193815,0,.79854271,0,1,-0,-.79854271,0,.60193815],[.60103303,0,.79922418,0,1,-0,-.79922418,0,.60103303],[.60012669,0,.79990496,0,1,-0,-.79990496,0,.60012669],[.59921913,0,.80058506,0,1,-0,-.80058506,0,.59921913],[.59831035,0,.80126445,0,1,-0,-.80126445,0,.59831035],[.59740035,0,.80194315,0,1,-0,-.80194315,0,.59740035],[.59648913,0,.80262116,0,1,-0,-.80262116,0,.59648913],[.59557669,0,.80329846,0,1,-0,-.80329846,0,.59557669],[.59466303,0,.80397505,0,1,-0,-.80397505,0,.59466303],[.59374815,0,.80465094,0,1,-0,-.80465094,0,.59374815],[.59283206,0,.80532611,0,1,-0,-.80532611,0,.59283206],[.59191475,0,.80600058,0,1,-0,-.80600058,0,.59191475],[.59099622,0,.80667432,0,1,-0,-.80667432,0,.59099622],[.59007648,0,.80734735,0,1,-0,-.80734735,0,.59007648],[.58915552,0,.80801966,0,1,-0,-.80801966,0,.58915552],[.58823335,0,.80869125,0,1,-0,-.80869125,0,.58823335],[.58730996,0,.8093621,0,1,-0,-.8093621,0,.58730996],[.58638536,0,.81003223,0,1,-0,-.81003223,0,.58638536],[.58545954,0,.81070163,0,1,-0,-.81070163,0,.58545954],[.58453251,0,.81137029,0,1,-0,-.81137029,0,.58453251],[.58360427,0,.81203821,0,1,-0,-.81203821,0,.58360427],[.58267482,0,.81270539,0,1,-0,-.81270539,0,.58267482],[.58174416,0,.81337183,0,1,-0,-.81337183,0,.58174416],[.58081229,0,.81403752,0,1,-0,-.81403752,0,.58081229],[.5798792,0,.81470247,0,1,-0,-.81470247,0,.5798792],[.57894491,0,.81536666,0,1,-0,-.81536666,0,.57894491],[.57800941,0,.8160301,0,1,-0,-.8160301,0,.57800941],[.5770727,0,.81669278,0,1,-0,-.81669278,0,.5770727],[.57613479,0,.8173547,0,1,-0,-.8173547,0,.57613479],[.57519566,0,.81801586,0,1,-0,-.81801586,0,.57519566],[.57425533,0,.81867626,0,1,-0,-.81867626,0,.57425533],[.5733138,0,.81933588,0,1,-0,-.81933588,0,.5733138],[.57237106,0,.81999474,0,1,-0,-.81999474,0,.57237106],[.57142712,0,.82065282,0,1,-0,-.82065282,0,.57142712],[.57048197,0,.82131013,0,1,-0,-.82131013,0,.57048197],[.56953562,0,.82196665,0,1,-0,-.82196665,0,.56953562],[.56858807,0,.8226224,0,1,-0,-.8226224,0,.56858807],[.56763931,0,.82327736,0,1,-0,-.82327736,0,.56763931],[.56668936,0,.82393154,0,1,-0,-.82393154,0,.56668936],[.5657382,0,.82458492,0,1,-0,-.82458492,0,.5657382],[.56478584,0,.82523751,0,1,-0,-.82523751,0,.56478584],[.56383229,0,.82588931,0,1,-0,-.82588931,0,.56383229],[.56287754,0,.82654031,0,1,-0,-.82654031,0,.56287754],[.56192159,0,.8271905,0,1,-0,-.8271905,0,.56192159],[.56096444,0,.8278399,0,1,-0,-.8278399,0,.56096444],[.5600061,0,.82848849,0,1,-0,-.82848849,0,.5600061],[.55904656,0,.82913626,0,1,-0,-.82913626,0,.55904656],[.55808583,0,.82978323,0,1,-0,-.82978323,0,.55808583],[.5571239,0,.83042938,0,1,-0,-.83042938,0,.5571239],[.55616078,0,.83107472,0,1,-0,-.83107472,0,.55616078],[.55519647,0,.83171923,0,1,-0,-.83171923,0,.55519647],[.55423096,0,.83236292,0,1,-0,-.83236292,0,.55423096],[.55326427,0,.83300579,0,1,-0,-.83300579,0,.55326427],[.55229639,0,.83364783,0,1,-0,-.83364783,0,.55229639],[.55132731,0,.83428904,0,1,-0,-.83428904,0,.55132731],[.55035705,0,.83492941,0,1,-0,-.83492941,0,.55035705],[.5493856,0,.83556895,0,1,-0,-.83556895,0,.5493856],[.54841296,0,.83620764,0,1,-0,-.83620764,0,.54841296],[.54743914,0,.8368455,0,1,-0,-.8368455,0,.54743914],[.54646413,0,.83748251,0,1,-0,-.83748251,0,.54646413],[.54548794,0,.83811867,0,1,-0,-.83811867,0,.54548794],[.54451056,0,.83875399,0,1,-0,-.83875399,0,.54451056],[.543532,0,.83938845,0,1,-0,-.83938845,0,.543532],[.54255226,0,.84002205,0,1,-0,-.84002205,0,.54255226],[.54157134,0,.8406548,0,1,-0,-.8406548,0,.54157134],[.54058923,0,.84128668,0,1,-0,-.84128668,0,.54058923],[.53960595,0,.8419177,0,1,-0,-.8419177,0,.53960595],[.53862149,0,.84254786,0,1,-0,-.84254786,0,.53862149],[.53763585,0,.84317714,0,1,-0,-.84317714,0,.53763585],[.53664904,0,.84380555,0,1,-0,-.84380555,0,.53664904],[.53566105,0,.84443309,0,1,-0,-.84443309,0,.53566105],[.53467188,0,.84505975,0,1,-0,-.84505975,0,.53467188],[.53368154,0,.84568553,0,1,-0,-.84568553,0,.53368154],[.53269002,0,.84631043,0,1,-0,-.84631043,0,.53269002],[.53169734,0,.84693444,0,1,-0,-.84693444,0,.53169734],[.53070348,0,.84755756,0,1,-0,-.84755756,0,.53070348],[.52970845,0,.84817979,0,1,-0,-.84817979,0,.52970845],[.52871225,0,.84880113,0,1,-0,-.84880113,0,.52871225],[.52771489,0,.84942157,0,1,-0,-.84942157,0,.52771489],[.52671635,0,.85004111,0,1,-0,-.85004111,0,.52671635],[.52571665,0,.85065974,0,1,-0,-.85065974,0,.52571665],[.52471579,0,.85127748,0,1,-0,-.85127748,0,.52471579],[.52371376,0,.8518943,0,1,-0,-.8518943,0,.52371376],[.52271056,0,.85251022,0,1,-0,-.85251022,0,.52271056],[.5217062,0,.85312522,0,1,-0,-.85312522,0,.5217062],[.52070068,0,.8537393,0,1,-0,-.8537393,0,.52070068],[.519694,0,.85435247,0,1,-0,-.85435247,0,.519694],[.51868616,0,.85496472,0,1,-0,-.85496472,0,.51868616],[.51767716,0,.85557604,0,1,-0,-.85557604,0,.51767716],[.516667,0,.85618643,0,1,-0,-.85618643,0,.516667],[.51565569,0,.8567959,0,1,-0,-.8567959,0,.51565569],[.51464322,0,.85740443,0,1,-0,-.85740443,0,.51464322],[.51362959,0,.85801203,0,1,-0,-.85801203,0,.51362959],[.51261481,0,.85861869,0,1,-0,-.85861869,0,.51261481],[.51159888,0,.85922441,0,1,-0,-.85922441,0,.51159888],[.5105818,0,.85982919,0,1,-0,-.85982919,0,.5105818],[.50956356,0,.86043302,0,1,-0,-.86043302,0,.50956356],[.50854418,0,.8610359,0,1,-0,-.8610359,0,.50854418],[.50752364,0,.86163783,0,1,-0,-.86163783,0,.50752364],[.50650196,0,.86223881,0,1,-0,-.86223881,0,.50650196],[.50547914,0,.86283883,0,1,-0,-.86283883,0,.50547914],[.50445517,0,.86343789,0,1,-0,-.86343789,0,.50445517],[.50343005,0,.86403599,0,1,-0,-.86403599,0,.50343005],[.50240379,0,.86463312,0,1,-0,-.86463312,0,.50240379],[.50137639,0,.86522928,0,1,-0,-.86522928,0,.50137639],[.50034785,0,.86582448,0,1,-0,-.86582448,0,.50034785]];return a}window.addEventListener("load",function(){console.log=function(){};var d,a=Math.PI;const e=new hi;e.background=new D0(11393254);const t=new S9(75,window.innerWidth/window.innerHeight,.1,1e3),n=new n3({canvas:document.querySelector("#bg")});n.setPixelRatio(window.devicePixelRatio),n.setSize(window.innerWidth,window.innerHeight),t.position.setZ(100),t.position.setX(100),t.position.setY(100);const i=new Di(t,n.domElement);var r={N:0,stop:!1,case:"Both Motors"};const o=new dat.GUI;o.add(r,"N").min(0).max(10).step(1).name("Simulation speed"),o.add(r,"stop").name("Stop button");var s=o.add(r,"case",["Both Motors","Motor 1","Motor 2","No Motor"]).listen(),c=0,l=D5(),u=R5(),d=new j0;Y("models/","cardesign3.obj","cardesign3.mtl",B=>{B.rotation.x=-a/2,d.add(B)}),d.position.x=-75,d.position.y=10;var f=new j0;Y("models/","gi11.obj","gi11.mtl",B=>{f.add(B)}),f.position.y=52,f.position.x=75,f.position.z=-45,f.rotation.y=a/2;var m=new j0;Y("models/","gy222.obj","gy222.mtl",B=>{m.add(B)});var g=new j0;Y("models/","gi11.obj","gi11.mtl",B=>{g.add(B)}),g.position.y=52,g.position.x=75,g.position.z=45,g.rotation.y=-a/2;var _=new j0;Y("models/","motor.obj","motor.mtl",B=>{_.add(B)});var p=new j0;Y("models/","gy222.obj","gy222.mtl",B=>{B.rotation.x=a,p.add(B)}),m.rotation.x=a,e.add(d),d.add(f),f.add(m),d.add(g),g.add(p);const h=new Mi(16777215);h.position.set(-200,200,300),e.add(h),new yi(h),new bi(2e3,500,-100);var E=new j2(1e3,1e3),w=new X2({color:268435455,transparent:!0,opacity:.8}),v=new A9(E,w);v.rotation.x=-a/2,e.add(v);var y=new B0,A=new B0,R=new B0,N=new B0,M=new B0;A.set(1,0,0,0,0,0,1,0,0,-1,0,0,0,0,0,1),R.set(1,0,0,0,0,0,-1,0,0,1,0,0,0,0,0,1);function T(){requestAnimationFrame(T),y.set(l[c][0],l[c][1],l[c][2],0,l[c][3],l[c][4],l[c][5],0,l[c][6],l[c][7],l[c][8],0,0,0,0,1),M.multiplyMatrices(A,y),N.multiplyMatrices(M,R),d.rotation.setFromRotationMatrix(N),f.rotation.x=u[c][0],g.rotation.x=u[c][1],_.rotation.x+=-.01,i.update(),n.render(e,t),r.stop&&(r.N=!1,c=0),c+=r.N,c>length(u)-200&&(c=0)}s.onChange(function(B){c=0,B=="Both Motors"?(l=D5(),u=R5()):B=="Motor 1"?(l=Oi(),u=Ii()):B=="Motor 2"?(l=Fi(),u=Ui()):B=="No Motor"&&(l=zi(),u=Ni())}),T();function Y(B,I,O,W){const J=new wi;J.setPath(B),J.load(O,K=>{K.preload();const X=new Ri;X.setMaterials(K),X.setPath(B),X.load(I,n0=>{W(n0)})})}});function Bi(){renderer.setSize(window.width,window.height),camera.aspect=window.width/window.height,camera.updateProjectionMatrix()}window.addEventListener("resize",Bi);
